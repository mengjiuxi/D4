GAS LISTING /tmp/ccp1AA0E.s 			page 1


   1               		.file	"tft.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/clark/Documents/Clark/SD_card/fatfs_ilmatto/FatFS/libtft-cpp/",100,0,4,.Ltext0
   8               		.stabs	"tft.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"void:t(0,4)",128,0,0,0
  38               		.stabs	"wchar_t:t(0,23)=r(0,23);-32768;32767;",128,0,0,0
  39               		.stabs	"bool:t(0,24)=@s8;-16;",128,0,0,0
  40               		.stabs	"__vtbl_ptr_type:t(0,25)=*(0,26)=f(0,9)",128,0,0,0
  41               		.stabs	"decltype(nullptr):t(0,27)=(0,27)",128,0,0,0
  42               		.stabs	"int8_t:t(0,28)=(0,16)",128,0,121,0
  43               		.stabs	"uint8_t:t(0,29)=(0,13)",128,0,122,0
  44               		.stabs	"int16_t:t(0,30)=(0,9)",128,0,123,0
  45               		.stabs	"uint16_t:t(0,31)=(0,12)",128,0,124,0
  46               		.stabs	"int32_t:t(0,32)=(0,15)",128,0,125,0
  47               		.stabs	"uint32_t:t(0,33)=(0,11)",128,0,126,0
  48               		.stabs	"int64_t:t(0,34)=(0,14)",128,0,128,0
  49               		.stabs	"uint64_t:t(0,35)=(0,10)",128,0,129,0
  50               		.stabs	"intptr_t:t(0,36)=(0,30)",128,0,142,0
  51               		.stabs	"uintptr_t:t(0,37)=(0,31)",128,0,147,0
  52               		.stabs	"int_least8_t:t(0,38)=(0,28)",128,0,159,0
  53               		.stabs	"uint_least8_t:t(0,39)=(0,29)",128,0,164,0
  54               		.stabs	"int_least16_t:t(0,40)=(0,30)",128,0,169,0
  55               		.stabs	"uint_least16_t:t(0,41)=(0,31)",128,0,174,0
  56               		.stabs	"int_least32_t:t(0,42)=(0,32)",128,0,179,0
  57               		.stabs	"uint_least32_t:t(0,43)=(0,33)",128,0,184,0
GAS LISTING /tmp/ccp1AA0E.s 			page 2


  58               		.stabs	"int_least64_t:t(0,44)=(0,34)",128,0,192,0
  59               		.stabs	"uint_least64_t:t(0,45)=(0,35)",128,0,199,0
  60               		.stabs	"int_fast8_t:t(0,46)=(0,28)",128,0,213,0
  61               		.stabs	"uint_fast8_t:t(0,47)=(0,29)",128,0,218,0
  62               		.stabs	"int_fast16_t:t(0,48)=(0,30)",128,0,223,0
  63               		.stabs	"uint_fast16_t:t(0,49)=(0,31)",128,0,228,0
  64               		.stabs	"int_fast32_t:t(0,50)=(0,32)",128,0,233,0
  65               		.stabs	"uint_fast32_t:t(0,51)=(0,33)",128,0,238,0
  66               		.stabs	"int_fast64_t:t(0,52)=(0,34)",128,0,246,0
  67               		.stabs	"uint_fast64_t:t(0,53)=(0,35)",128,0,253,0
  68               		.stabs	"intmax_t:t(0,54)=(0,34)",128,0,273,0
  69               		.stabs	"uintmax_t:t(0,55)=(0,35)",128,0,278,0
  70               		.stabs	"int_farptr_t:t(0,56)=(0,32)",128,0,77,0
  71               		.stabs	"uint_farptr_t:t(0,57)=(0,33)",128,0,81,0
  72               		.stabs	"._0:Tt(0,58)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
  73               		.stabs	"__fuse_t:t(0,58)",128,0,244,0
  74               		.stabs	"size_t:t(0,59)=(0,12)",128,0,213,0
  75               		.stabs	"ili9341::Orientation:t(0,60)=@s8;eLandscape:0,Portrait:1,FlipLandscape:2,FlipPortrait:3,BM
  76               		.stabs	"ili9341:Tt(0,61)=s1init::(0,62)=f(0,4):_ZN7ili93414initEv;2A?;idle::(0,63)=f(0,4):_ZN7ili9
  77               		.stabs	"__gnuc_va_list:t(0,67)=(0,3)",128,0,40,0
  78               		.stabs	"va_list:t(0,68)=(0,67)",128,0,102,0
  79               		.stabs	"__file:Tt(0,69)=s14buf:(0,70)=*(0,17),0,16;unget:(0,13),16,8;flags:(0,29),24,8;size:(0,9),
  80               		.stabs	"._1:Tt(0,76)=s4quot:(0,9),0,16;rem:(0,9),16,16;;",128,0,68,0
  81               		.stabs	"div_t:t(0,76)",128,0,71,0
  82               		.stabs	"._2:Tt(0,77)=s8quot:(0,15),0,32;rem:(0,15),32,32;;",128,0,74,0
  83               		.stabs	"ldiv_t:t(0,77)",128,0,77,0
  84               		.stabs	"__compar_fn_t:t(0,78)=(0,79)=*(0,80)=f(0,9)",128,0,80,0
  85               		.stabs	"tft_t::._3:Tt(0,81)=s26tf:(0,24),0,8;zoom:(0,29),8,8;orient:(0,29),16,8;tabSize:(0,29),24,
  86               		.stabs	"tft_t:Tt(0,82)=s26!1,020,(0,61);d:/0(0,81),0,208;__base_ctor ::(0,83)=#(0,82),(0,4),(0,84)
  87               		.section	.text._ZN7ili93413cmdEh,"axG",@progbits,_ZN7ili93413cmdEh,comdat
  88               		.stabs	"_ZN7ili93413cmdEh:F(0,4)",36,0,60,_ZN7ili93413cmdEh
  89               		.stabs	"dat:P(0,29)",64,0,60,24
  90               		.weak	_ZN7ili93413cmdEh
  91               		.type	_ZN7ili93413cmdEh, @function
  92               	_ZN7ili93413cmdEh:
  93               		.stabd	46,0,0
  94               		.stabs	"ili9341.h",132,0,0,.Ltext1
  95               	.Ltext1:
   1:ili9341.h     **** /*
   2:ili9341.h     ****  * Author: Yubo Zhi (yz39g13@soton.ac.uk)
   3:ili9341.h     ****  */
   4:ili9341.h     **** 
   5:ili9341.h     **** #ifndef ILI9341_H
   6:ili9341.h     **** #define ILI9341_H
   7:ili9341.h     **** 
   8:ili9341.h     **** #include "connection.h"
   9:ili9341.h     **** 
  10:ili9341.h     **** #include <avr/io.h>
  11:ili9341.h     **** //#include <avr/cpufunc.h>
  12:ili9341.h     **** #define _NOP() __asm__ __volatile__("nop")
  13:ili9341.h     **** #include <util/delay.h>
  14:ili9341.h     **** 
  15:ili9341.h     **** class ili9341
  16:ili9341.h     **** {
  17:ili9341.h     **** public:
  18:ili9341.h     **** 	enum Orientation {Landscape = 0, Portrait, \
  19:ili9341.h     **** 		FlipLandscape, FlipPortrait, \
GAS LISTING /tmp/ccp1AA0E.s 			page 3


  20:ili9341.h     **** 		BMPLandscape, BMPPortrait, \
  21:ili9341.h     **** 		BMPFlipLandscape, BMPFlipPortrait};
  22:ili9341.h     **** 
  23:ili9341.h     **** 	static inline void init(void);
  24:ili9341.h     **** 	static inline void idle(bool e) {cmd(0x38 + e);}
  25:ili9341.h     **** 	static inline void sleep(bool e) {cmd(0x10 + e);}
  26:ili9341.h     **** 	static inline void inversion(bool e) {cmd(0x20 + e);}
  27:ili9341.h     **** 
  28:ili9341.h     **** //protected:
  29:ili9341.h     **** 	static inline void cmd(uint8_t dat);
  30:ili9341.h     **** 	static inline void data(uint8_t dat);
  31:ili9341.h     **** 	static inline void send(bool c, uint8_t dat);
  32:ili9341.h     **** 	static inline uint8_t recv(void);
  33:ili9341.h     **** 	static inline void mode(bool _recv);
  34:ili9341.h     **** 	static inline void _setBGLight(bool ctrl);
  35:ili9341.h     **** 	static inline void _setOrient(uint8_t o);
  36:ili9341.h     **** };
  37:ili9341.h     **** 
  38:ili9341.h     **** // Defined as inline to excute faster
  39:ili9341.h     **** 
  40:ili9341.h     **** #define LOW(b)	TFT_WCTRL &= ~(b)
  41:ili9341.h     **** #define HIGH(b)	TFT_WCTRL |= (b)
  42:ili9341.h     **** #define SEND() TFT_PDATA = 0xFF
  43:ili9341.h     **** #define RECV() do { \
  44:ili9341.h     **** 	TFT_PDATA = 0x00; \
  45:ili9341.h     **** 	TFT_WDATA = 0xFF; \
  46:ili9341.h     **** } while(0)
  47:ili9341.h     **** 
  48:ili9341.h     **** inline void ili9341::_setOrient(uint8_t o)
  49:ili9341.h     **** {
  50:ili9341.h     **** 	// Landscape, Portrait, FlipLandscape, FlipPortrait
  51:ili9341.h     **** 	// BMPLandscape, BMPPortrait, BMPFlipLandscape, BMPFlipPortrait
  52:ili9341.h     **** 	static const uint8_t orient[] = {
  53:ili9341.h     **** 			0x28, 0x48, 0xE8, 0x88,
  54:ili9341.h     **** 			0x68, 0xD8, 0xA8, 0x18
  55:ili9341.h     **** 	};
  56:ili9341.h     **** 	cmd(0x36);			// Memory Access Control
  57:ili9341.h     **** 	data(orient[o]);
  58:ili9341.h     **** }
  59:ili9341.h     **** 
  60:ili9341.h     **** inline void ili9341::cmd(uint8_t dat)
  61:ili9341.h     **** {
  96               		.stabn	68,0,61,.LM0-.LFBB1
  97               	.LM0:
  98               	.LFBB1:
  99               	/* prologue: function */
 100               	/* frame size = 0 */
 101               	/* stack size = 0 */
 102               	.L__stack_usage = 0
  62:ili9341.h     **** 	LOW(TFT_RS);
 103               		.stabn	68,0,62,.LM1-.LFBB1
 104               	.LM1:
 105 0000 1498      		cbi 0x2,4
  63:ili9341.h     **** 	TFT_WDATA = dat;
 106               		.stabn	68,0,63,.LM2-.LFBB1
 107               	.LM2:
 108 0002 88B9      		out 0x8,r24
GAS LISTING /tmp/ccp1AA0E.s 			page 4


  64:ili9341.h     **** 	LOW(TFT_WR);
 109               		.stabn	68,0,64,.LM3-.LFBB1
 110               	.LM3:
 111 0004 1398      		cbi 0x2,3
  65:ili9341.h     **** 	HIGH(TFT_WR);
 112               		.stabn	68,0,65,.LM4-.LFBB1
 113               	.LM4:
 114 0006 139A      		sbi 0x2,3
  66:ili9341.h     **** 	HIGH(TFT_RS);
 115               		.stabn	68,0,66,.LM5-.LFBB1
 116               	.LM5:
 117 0008 149A      		sbi 0x2,4
 118 000a 0895      		ret
 119               		.size	_ZN7ili93413cmdEh, .-_ZN7ili93413cmdEh
 120               	.Lscope1:
 121               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 122               		.stabd	78,0,0
 123               		.section	.text._ZN7ili93414dataEh,"axG",@progbits,_ZN7ili93414dataEh,comdat
 124               		.stabs	"_ZN7ili93414dataEh:F(0,4)",36,0,69,_ZN7ili93414dataEh
 125               		.stabs	"dat:P(0,29)",64,0,69,24
 126               		.weak	_ZN7ili93414dataEh
 127               		.type	_ZN7ili93414dataEh, @function
 128               	_ZN7ili93414dataEh:
 129               		.stabd	46,0,0
  67:ili9341.h     **** }
  68:ili9341.h     **** 
  69:ili9341.h     **** inline void ili9341::data(uint8_t dat)
  70:ili9341.h     **** {
 130               		.stabn	68,0,70,.LM6-.LFBB2
 131               	.LM6:
 132               	.LFBB2:
 133               	/* prologue: function */
 134               	/* frame size = 0 */
 135               	/* stack size = 0 */
 136               	.L__stack_usage = 0
  71:ili9341.h     **** 	TFT_WDATA = dat;
 137               		.stabn	68,0,71,.LM7-.LFBB2
 138               	.LM7:
 139 0000 88B9      		out 0x8,r24
  72:ili9341.h     **** 	LOW(TFT_WR);
 140               		.stabn	68,0,72,.LM8-.LFBB2
 141               	.LM8:
 142 0002 1398      		cbi 0x2,3
  73:ili9341.h     **** 	HIGH(TFT_WR);
 143               		.stabn	68,0,73,.LM9-.LFBB2
 144               	.LM9:
 145 0004 139A      		sbi 0x2,3
 146 0006 0895      		ret
 147               		.size	_ZN7ili93414dataEh, .-_ZN7ili93414dataEh
 148               	.Lscope2:
 149               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 150               		.stabd	78,0,0
 151               		.section	.text._ZN7ili934110_setOrientEh,"axG",@progbits,_ZN7ili934110_setOrientEh,comdat
 152               		.stabs	"_ZN7ili934110_setOrientEh:F(0,4)",36,0,48,_ZN7ili934110_setOrientEh
 153               		.stabs	"o:P(0,29)",64,0,48,28
 154               		.weak	_ZN7ili934110_setOrientEh
 155               		.type	_ZN7ili934110_setOrientEh, @function
GAS LISTING /tmp/ccp1AA0E.s 			page 5


 156               	_ZN7ili934110_setOrientEh:
 157               		.stabd	46,0,0
  49:ili9341.h     **** {
 158               		.stabn	68,0,49,.LM10-.LFBB3
 159               	.LM10:
 160               	.LFBB3:
 161 0000 CF93      		push r28
 162               	/* prologue: function */
 163               	/* frame size = 0 */
 164               	/* stack size = 1 */
 165               	.L__stack_usage = 1
 166 0002 C82F      		mov r28,r24
 167               	.LBB435:
  56:ili9341.h     **** 	cmd(0x36);			// Memory Access Control
 168               		.stabn	68,0,56,.LM11-.LFBB3
 169               	.LM11:
 170 0004 86E3      		ldi r24,lo8(54)
 171 0006 0E94 0000 		call _ZN7ili93413cmdEh
  57:ili9341.h     **** 	data(orient[o]);
 172               		.stabn	68,0,57,.LM12-.LFBB3
 173               	.LM12:
 174 000a EC2F      		mov r30,r28
 175 000c F0E0      		ldi r31,0
 176 000e E050      		subi r30,lo8(-(_ZZN7ili934110_setOrientEhE6orient))
 177 0010 F040      		sbci r31,hi8(-(_ZZN7ili934110_setOrientEhE6orient))
 178 0012 8081      		ld r24,Z
 179               	/* epilogue start */
 180               	.LBE435:
  58:ili9341.h     **** }
 181               		.stabn	68,0,58,.LM13-.LFBB3
 182               	.LM13:
 183 0014 CF91      		pop r28
 184               	.LBB436:
  57:ili9341.h     **** 	data(orient[o]);
 185               		.stabn	68,0,57,.LM14-.LFBB3
 186               	.LM14:
 187 0016 0C94 0000 		jmp _ZN7ili93414dataEh
 188               	.LBE436:
 189               		.size	_ZN7ili934110_setOrientEh, .-_ZN7ili934110_setOrientEh
 190               		.stabs	"orient:G(0,107)=ar(0,108)=r(0,108);0;0177777;;0;7;(0,109)=k(0,29)",32,0,52,0
 191               		.stabn	192,0,0,.LBB435-.LFBB3
 192               		.stabn	224,0,0,.LBE435-.LFBB3
 193               		.stabs	"orient:G(0,107)",32,0,52,0
 194               		.stabn	192,0,0,.LBB436-.LFBB3
 195               		.stabn	224,0,0,.LBE436-.LFBB3
 196               	.Lscope3:
 197               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 198               		.stabd	78,0,0
 199               		.section	.text._ZNK5tft_t8portraitEv,"axG",@progbits,_ZNK5tft_t8portraitEv,comdat
 200               		.stabs	"_ZNK5tft_t8portraitEv:F(0,24)",36,0,47,_ZNK5tft_t8portraitEv
 201               		.stabs	"this:P(0,110)=k(0,94)",64,0,47,24
 202               		.weak	_ZNK5tft_t8portraitEv
 203               		.type	_ZNK5tft_t8portraitEv, @function
 204               	_ZNK5tft_t8portraitEv:
 205               		.stabd	46,0,0
 206               		.stabs	"tft.h",132,0,0,.Ltext2
 207               	.Ltext2:
GAS LISTING /tmp/ccp1AA0E.s 			page 6


   1:tft.h         **** /*
   2:tft.h         ****  * Author: Yubo Zhi (yz39g13@soton.ac.uk)
   3:tft.h         ****  */
   4:tft.h         **** 
   5:tft.h         **** #ifndef TFT_H
   6:tft.h         **** #define TFT_H
   7:tft.h         **** 
   8:tft.h         **** #define FONT_WIDTH 6
   9:tft.h         **** #define FONT_HEIGHT 8
  10:tft.h         **** //#define TFT_SCROLL
  11:tft.h         **** 
  12:tft.h         **** #include <avr/io.h>
  13:tft.h         **** #include <avr/pgmspace.h>
  14:tft.h         **** #include <stdio.h>
  15:tft.h         **** #include <stdlib.h>
  16:tft.h         **** #include "ili9341.h"
  17:tft.h         **** #include "ascii.h"
  18:tft.h         **** 
  19:tft.h         **** class tft_t: public ili9341
  20:tft.h         **** {
  21:tft.h         **** public:
  22:tft.h         **** 	tft_t(void);
  23:tft.h         **** 
  24:tft.h         **** 	inline class tft_t& operator<<(const char c);
  25:tft.h         **** 	inline class tft_t& operator<<(const char *str);
  26:tft.h         **** 
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
  28:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
  29:tft.h         **** 	inline void setXY(uint16_t x, uint16_t y) {setX(x); setY(y);}
  30:tft.h         **** 	inline uint16_t x(void) const {return d.x;}
  31:tft.h         **** 	inline uint16_t y(void) const {return d.y;}
  32:tft.h         **** 	inline uint16_t width(void) const {return d.w;}
  33:tft.h         **** 	inline uint16_t height(void) const {return d.h;}
  34:tft.h         **** 	inline void setZoom(const uint8_t zoom) {d.zoom = zoom;}
  35:tft.h         **** 	inline uint8_t zoom(void) const {return d.zoom;}
  36:tft.h         **** 	inline void setForeground(uint16_t c) {d.fgc = c;}
  37:tft.h         **** 	inline void setBackground(uint16_t c) {d.bgc = c;}
  38:tft.h         **** 	inline uint16_t foreground(void) const {return d.fgc;}
  39:tft.h         **** 	inline uint16_t background(void) const {return d.bgc;}
  40:tft.h         **** 	void bmp(bool e);
  41:tft.h         **** 	void setOrient(uint8_t o);
  42:tft.h         **** 	inline uint8_t orient(void) const {return d.orient;}
  43:tft.h         **** 	inline void setBGLight(bool e) {_setBGLight(e);}
  44:tft.h         **** 	inline void setTabSize(uint8_t t) {d.tabSize = t;}
  45:tft.h         **** 	inline uint8_t tabSize(void) const {return d.tabSize;}
  46:tft.h         **** 	inline bool flipped(void) const {return orient() == FlipPortrait || orient() == FlipLandscape;}
  47:tft.h         **** 	inline bool portrait(void) const {return orient() == Portrait || orient() == FlipPortrait;}
 208               		.stabn	68,0,47,.LM15-.LFBB4
 209               	.LM15:
 210               	.LFBB4:
 211               	/* prologue: function */
 212               	/* frame size = 0 */
 213               	/* stack size = 0 */
 214               	.L__stack_usage = 0
 215               		.stabs	"tft.cpp",132,0,0,.Ltext3
 216               	.Ltext3:
   1:tft.cpp       **** /*
GAS LISTING /tmp/ccp1AA0E.s 			page 7


   2:tft.cpp       ****  * Author: Yubo Zhi (yz39g13@soton.ac.uk)
   3:tft.cpp       ****  */
   4:tft.cpp       **** 
   5:tft.cpp       **** #include <avr/io.h>
   6:tft.cpp       **** #include <avr/pgmspace.h>
   7:tft.cpp       **** #include <ctype.h>
   8:tft.cpp       **** #include "ascii.h"
   9:tft.cpp       **** #include "ili9341.h"
  10:tft.cpp       **** #include "tft.h"
  11:tft.cpp       **** 
  12:tft.cpp       **** #define WIDTH FONT_WIDTH
  13:tft.cpp       **** #define HEIGHT FONT_HEIGHT
  14:tft.cpp       **** #define SIZE_H 320
  15:tft.cpp       **** #define SIZE_W 240
  16:tft.cpp       **** #define DEF_FGC 0xFFFF
  17:tft.cpp       **** #define DEF_BGC 0x0000
  18:tft.cpp       **** #define SWAP(x, y) { \
  19:tft.cpp       **** 	(x) = (x) ^ (y); \
  20:tft.cpp       **** 	(y) = (x) ^ (y); \
  21:tft.cpp       **** 	(x) = (x) ^ (y); \
  22:tft.cpp       **** }
  23:tft.cpp       **** 
  24:tft.cpp       **** tft_t::tft_t(void)
  25:tft.cpp       **** {
  26:tft.cpp       **** 	setX(0);
  27:tft.cpp       **** 	setY(0);
  28:tft.cpp       **** 	d.tfa = 0;
  29:tft.cpp       **** 	d.bfa = 0;
  30:tft.cpp       **** 	d.vsp = SIZE_H;
  31:tft.cpp       **** 	setTopMask(0);
  32:tft.cpp       **** 	setBottomMask(0);
  33:tft.cpp       **** 	setTransform(false);
  34:tft.cpp       **** 	setZoom(1);
  35:tft.cpp       **** 	d.orient = Portrait;
  36:tft.cpp       **** 	setTabSize(4);
  37:tft.cpp       **** 	setWidth(SIZE_W);
  38:tft.cpp       **** 	setHeight(SIZE_H);
  39:tft.cpp       **** 	setForeground(DEF_FGC);
  40:tft.cpp       **** 	setBackground(DEF_BGC);
  41:tft.cpp       **** }
  42:tft.cpp       **** 
  43:tft.cpp       **** void tft_t::frame(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  44:tft.cpp       **** 		uint8_t s, uint16_t c)
  45:tft.cpp       **** {
  46:tft.cpp       **** 	rectangle(x, y, w - s, s, c);
  47:tft.cpp       **** 	rectangle(x + w - s, y, s, h - s, c);
  48:tft.cpp       **** 	rectangle(x, y + s, s, h - s, c);
  49:tft.cpp       **** 	rectangle(x + s, y + h - s, w - s, s, c);
  50:tft.cpp       **** }
  51:tft.cpp       **** 
  52:tft.cpp       **** void tft_t::line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, \
  53:tft.cpp       **** 		uint16_t c)
  54:tft.cpp       **** {
  55:tft.cpp       **** 	if (x0 > width())
  56:tft.cpp       **** 		x0 = width() - 1;
  57:tft.cpp       **** 	if (x1 > width())
  58:tft.cpp       **** 		x1 = width() - 1;
GAS LISTING /tmp/ccp1AA0E.s 			page 8


  59:tft.cpp       **** 	if (y0 > height())
  60:tft.cpp       **** 		y0 = height() - 1;
  61:tft.cpp       **** 	if (y1 > height())
  62:tft.cpp       **** 		y1 = height() - 1;
  63:tft.cpp       **** 	if (x0 == x1) {
  64:tft.cpp       **** 		if (y0 > y1)
  65:tft.cpp       **** 			SWAP(y0, y1);
  66:tft.cpp       **** 		rectangle(x0, y0, 1, y1 - y0, c);
  67:tft.cpp       **** 		return;
  68:tft.cpp       **** 	}
  69:tft.cpp       **** 	if (y0 == y1) {
  70:tft.cpp       **** 		if (x0 > x1)
  71:tft.cpp       **** 			SWAP(x0, x1);
  72:tft.cpp       **** 		rectangle(x0, y0, x1 - x0, 1, c);
  73:tft.cpp       **** 		return;
  74:tft.cpp       **** 	}
  75:tft.cpp       **** 	uint16_t dx = abs(x1 - x0), dy = abs(y1 - y0);
  76:tft.cpp       **** 	if (dx < dy) {
  77:tft.cpp       **** 		if (y0 > y1) {
  78:tft.cpp       **** 			SWAP(x0, x1);
  79:tft.cpp       **** 			SWAP(y0, y1);
  80:tft.cpp       **** 		}
  81:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
  82:tft.cpp       **** 			point(x0 + dx * (y - y0) / dy * \
  83:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
  84:tft.cpp       **** 	} else {
  85:tft.cpp       **** 		if (x0 > x1) {
  86:tft.cpp       **** 			SWAP(x0, x1);
  87:tft.cpp       **** 			SWAP(y0, y1);
  88:tft.cpp       **** 		}
  89:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
  90:tft.cpp       **** 			point(x, y0 + dy * (x - x0) / dx * \
  91:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
  92:tft.cpp       **** 	}
  93:tft.cpp       **** }
  94:tft.cpp       **** 
  95:tft.cpp       **** void tft_t::rectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t c)
  96:tft.cpp       **** {
  97:tft.cpp       **** 	if (!h || !w)
  98:tft.cpp       **** 		return;
  99:tft.cpp       **** 
 100:tft.cpp       **** 	uint16_t yt, bMask;
 101:tft.cpp       **** 	if (!transform())
 102:tft.cpp       **** 		goto disp;
 103:tft.cpp       **** 
 104:tft.cpp       **** 	if (!portrait()) {
 105:tft.cpp       **** 		swap(x, y);
 106:tft.cpp       **** 		swap(w, h);
 107:tft.cpp       **** 	}
 108:tft.cpp       **** 
 109:tft.cpp       **** 	yt = vsTransformBack(y);
 110:tft.cpp       **** 	if ((int16_t)yt < (int16_t)topEdge() && \
 111:tft.cpp       **** 		(int16_t)(yt + h) >= (int16_t)topEdge()) {	// Top edge clipping
 112:tft.cpp       **** 		h -= topEdge() - yt;
 113:tft.cpp       **** 		y = upperEdge();
 114:tft.cpp       **** 		yt = vsTransformBack(y);
 115:tft.cpp       **** 	} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
GAS LISTING /tmp/ccp1AA0E.s 			page 9


 116:tft.cpp       **** 		h = bottomEdge() - yt;
 117:tft.cpp       **** 	if (y + h > bottomEdge())				// Transform edge split
 118:tft.cpp       **** 		if (y < bottomEdge()) {
 119:tft.cpp       **** 			if (!portrait()) {
 120:tft.cpp       **** 				rectangle(y, x, bottomEdge() - y, w, c);
 121:tft.cpp       **** 				rectangle(topEdge(), x, h - (bottomEdge() - y), w, c);
 122:tft.cpp       **** 			} else {
 123:tft.cpp       **** 				rectangle(x, y, w, bottomEdge() - y, c);
 124:tft.cpp       **** 				rectangle(x, topEdge(), w, h - (bottomEdge() - y), c);
 125:tft.cpp       **** 			}
 126:tft.cpp       **** 			return;
 127:tft.cpp       **** 		}
 128:tft.cpp       **** 
 129:tft.cpp       **** 	if (yt < topMask()) {
 130:tft.cpp       **** 		if (yt + h < topMask())
 131:tft.cpp       **** 			return;
 132:tft.cpp       **** 		h -= topMask() - yt;
 133:tft.cpp       **** 		y = vsTransform(topMask());
 134:tft.cpp       **** 	}
 135:tft.cpp       **** 
 136:tft.cpp       **** 	bMask = vsMaximum() - bottomMask();
 137:tft.cpp       **** 	if (yt >= bMask)
 138:tft.cpp       **** 		return;
 139:tft.cpp       **** 	if (yt + h > bMask)
 140:tft.cpp       **** 		h -= yt + h - bMask;
 141:tft.cpp       **** 
 142:tft.cpp       **** 	if (!portrait()) {
 143:tft.cpp       **** 		area(y, x, h, w);
 144:tft.cpp       **** 		goto draw;
 145:tft.cpp       **** 	}
 146:tft.cpp       **** 
 147:tft.cpp       **** disp:
 148:tft.cpp       **** 	area(x, y, w, h);
 149:tft.cpp       **** draw:
 150:tft.cpp       **** 	start();
 151:tft.cpp       **** 	while (h--)
 152:tft.cpp       **** 		for (uint16_t xx = 0; xx < w; xx++)
 153:tft.cpp       **** 			write16(c);
 154:tft.cpp       **** }
 155:tft.cpp       **** 
 156:tft.cpp       **** void tft_t::putch(char ch)
 157:tft.cpp       **** {
 158:tft.cpp       **** #ifndef NO_CHECK
 159:tft.cpp       **** 	if ((int16_t)x() >= (int16_t)width() || (int16_t)y() >= (int16_t)height())
 160:tft.cpp       **** 		return;
 161:tft.cpp       **** #endif
 162:tft.cpp       **** 	if ((int16_t)(x() + FONT_WIDTH * zoom()) < 0)
 163:tft.cpp       **** 		return;
 164:tft.cpp       **** 	uint8_t h = FONT_HEIGHT * zoom(), w = FONT_WIDTH * zoom();
 165:tft.cpp       **** 	// Display coordinate, start coordinate
 166:tft.cpp       **** 	uint16_t xx = x(), x0 = x();
 167:tft.cpp       **** 	uint16_t yy = y(), y0 = y();
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 169:tft.cpp       **** 	uint8_t yStart = 0, yStop = h;
 170:tft.cpp       **** 
 171:tft.cpp       **** #if 1
 172:tft.cpp       **** 	if (transform()) {
GAS LISTING /tmp/ccp1AA0E.s 			page 10


 173:tft.cpp       **** 		if (!portrait()) {
 174:tft.cpp       **** 			yy = xx;
 175:tft.cpp       **** 			y0 = x0;
 176:tft.cpp       **** 			yStop = xStop;
 177:tft.cpp       **** 			swap(w, h);
 178:tft.cpp       **** 		}
 179:tft.cpp       **** 
 180:tft.cpp       **** 		uint16_t yt = vsTransformBack(yy);
 181:tft.cpp       **** 		if ((int16_t)yt < (int16_t)topEdge() && \
 182:tft.cpp       **** 			(int16_t)(yt + h) >= (int16_t)topEdge()) {	// Top edge clipping
 183:tft.cpp       **** 			yStart = topEdge() - yt;
 184:tft.cpp       **** 			yy = upperEdge();
 185:tft.cpp       **** 			y0 = yy - yStart;
 186:tft.cpp       **** 			yt = vsTransformBack(yy);
 187:tft.cpp       **** 		} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 188:tft.cpp       **** 			yStop = bottomEdge() - yt;
 189:tft.cpp       **** 
 190:tft.cpp       **** 		if (yt < topMask()) {
 191:tft.cpp       **** 			if (yt + yStop - yStart < topMask())
 192:tft.cpp       **** 				return;
 193:tft.cpp       **** 			yy = vsTransform(topMask());
 194:tft.cpp       **** 			yStart += topMask() - yt;
 195:tft.cpp       **** 			y0 = yy - yStart;
 196:tft.cpp       **** 		}
 197:tft.cpp       **** 
 198:tft.cpp       **** 		uint16_t bMask = vsMaximum() - bottomMask();
 199:tft.cpp       **** 		if (yt >= bMask)
 200:tft.cpp       **** 			return;
 201:tft.cpp       **** 		if (yt + yStop - yStart > bMask)
 202:tft.cpp       **** 			yStop -= yt + yStop - yStart - bMask;
 203:tft.cpp       **** 
 204:tft.cpp       **** 		if (!portrait()) {
 205:tft.cpp       **** 			swap(w, h);
 206:tft.cpp       **** 			xx = yy;
 207:tft.cpp       **** 			x0 = y0;
 208:tft.cpp       **** 			xStart = yStart;
 209:tft.cpp       **** 			xStop = yStop;
 210:tft.cpp       **** 			yy = y();
 211:tft.cpp       **** 			y0 = y();
 212:tft.cpp       **** 			yStart = 0;
 213:tft.cpp       **** 			yStop = h;
 214:tft.cpp       **** 		}
 215:tft.cpp       **** 	}
 216:tft.cpp       **** #else
 217:tft.cpp       **** 	if (transform()) {
 218:tft.cpp       **** 		uint16_t xt = vsTransformBack(xx);
 219:tft.cpp       **** 		if ((int16_t)xt < (int16_t)topEdge() && \
 220:tft.cpp       **** 			(int16_t)(xt + w) >= (int16_t)topEdge()) {	// Top edge clipping
 221:tft.cpp       **** 			xStart = topEdge() - xt;
 222:tft.cpp       **** 			xx = upperEdge();
 223:tft.cpp       **** 			x0 = xx - xStart;
 224:tft.cpp       **** 			xt = vsTransformBack(xx);
 225:tft.cpp       **** 		} else if (xt < bottomEdge() && xt + w >= bottomEdge())	// Bottom edge clipping
 226:tft.cpp       **** 			xStop = bottomEdge() - xt;
 227:tft.cpp       **** 
 228:tft.cpp       **** 		if (xt < topMask()) {
 229:tft.cpp       **** 			if (xt + xStop - xStart < topMask())
GAS LISTING /tmp/ccp1AA0E.s 			page 11


 230:tft.cpp       **** 				return;
 231:tft.cpp       **** 			xx = vsTransform(topMask());
 232:tft.cpp       **** 			xStart += topMask() - xt;
 233:tft.cpp       **** 			x0 = xx - xStart;
 234:tft.cpp       **** 		}
 235:tft.cpp       **** 
 236:tft.cpp       **** 		uint16_t bMask = vsMaximum() - bottomMask();
 237:tft.cpp       **** 		if (xt >= bMask)
 238:tft.cpp       **** 			return;
 239:tft.cpp       **** 		if (xt + xStop - xStart > bMask)
 240:tft.cpp       **** 			xStop -= xt + xStop - xStart - bMask;
 241:tft.cpp       **** 	}
 242:tft.cpp       **** #endif
 243:tft.cpp       **** 
 244:tft.cpp       **** 	bool xTransform = transform() && !portrait() && x0 < bottomEdge() && x0 + xStop - xStart > bottomE
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 246:tft.cpp       **** 	uint8_t xEnd = xTransform ? bottomEdge() - xx : xStop;
 247:tft.cpp       **** draw:
 248:tft.cpp       **** 	area(xx, yy, xEnd - xStart, h);
 249:tft.cpp       **** 	start();
 250:tft.cpp       **** 	for (uint8_t i = yStart; i < yStop; i++) {
 251:tft.cpp       **** 		if (yTransform && y0 + i == bottomEdge()) {
 252:tft.cpp       **** 			area(x(), topEdge(), w, h);
 253:tft.cpp       **** 			start();
 254:tft.cpp       **** 			yTransform = false;
 255:tft.cpp       **** 		}
 256:tft.cpp       **** 		unsigned char c;
 257:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()])) << (xStart / zoom());
 258:tft.cpp       **** 		for (uint8_t j = xStart; j < xEnd; j++) {
 259:tft.cpp       **** 			if (c & 0x80)
 260:tft.cpp       **** 				write16(foreground());
 261:tft.cpp       **** 			else
 262:tft.cpp       **** 				write16(background());
 263:tft.cpp       **** 			if (j % zoom() == zoom() - 1)
 264:tft.cpp       **** 				c <<= 1;
 265:tft.cpp       **** 		}
 266:tft.cpp       **** 	}
 267:tft.cpp       **** 	if (xTransform) {
 268:tft.cpp       **** 		xx = topEdge();
 269:tft.cpp       **** 		xStart = xEnd;
 270:tft.cpp       **** 		xEnd = xStop;
 271:tft.cpp       **** 		xTransform = false;
 272:tft.cpp       **** 		goto draw;
 273:tft.cpp       **** 	}
 274:tft.cpp       **** }
 275:tft.cpp       **** 
 276:tft.cpp       **** void tft_t::setOrient(uint8_t o)
 277:tft.cpp       **** {
 278:tft.cpp       **** 	switch (o) {
 279:tft.cpp       **** 	case Landscape:
 280:tft.cpp       **** 	case FlipLandscape:
 281:tft.cpp       **** 		setWidth(SIZE_H);
 282:tft.cpp       **** 		setHeight(SIZE_W);
 283:tft.cpp       **** 		break;
 284:tft.cpp       **** 	case Portrait:
 285:tft.cpp       **** 	case FlipPortrait:
 286:tft.cpp       **** 		setWidth(SIZE_W);
GAS LISTING /tmp/ccp1AA0E.s 			page 12


 287:tft.cpp       **** 		setHeight(SIZE_H);
 288:tft.cpp       **** 	}
 289:tft.cpp       **** 	setX(0);
 290:tft.cpp       **** 	setY(0);
 291:tft.cpp       **** 	d.orient = o;
 292:tft.cpp       **** 	_setOrient(o);
 293:tft.cpp       **** }
 294:tft.cpp       **** 
 295:tft.cpp       **** uint16_t tft_t::vsTransform(uint16_t y) const
 296:tft.cpp       **** {
 297:tft.cpp       **** #ifndef NO_CHECK
 298:tft.cpp       **** 	if ((int16_t)y < 0)
 299:tft.cpp       **** 		return y;
 300:tft.cpp       **** #endif
 301:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 302:tft.cpp       **** 		return y;
 303:tft.cpp       **** 	y -= topEdge();		// Relative to upperEdge
 304:tft.cpp       **** 	y += upperEdge();	// Relative to 0
 305:tft.cpp       **** 	if (y >= bottomEdge())	// Transform edge
 306:tft.cpp       **** 		y -= vsHeight();
 307:tft.cpp       **** 	return y;
 308:tft.cpp       **** }
 309:tft.cpp       **** 
 310:tft.cpp       **** uint16_t tft_t::vsTransformBack(uint16_t y) const
 311:tft.cpp       **** {
 312:tft.cpp       **** #ifndef NO_CHECK
 313:tft.cpp       **** 	if ((int16_t)y < 0)
 314:tft.cpp       **** 		return y;
 315:tft.cpp       **** #endif
 316:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 317:tft.cpp       **** 		return y;
 318:tft.cpp       **** 	if (y < upperEdge())
 319:tft.cpp       **** 		y += vsHeight();
 320:tft.cpp       **** 	y -= upperEdge();	// Relative to upperEdge
 321:tft.cpp       **** 	y += topEdge();		// Relative to 0
 322:tft.cpp       **** 	return y;
 323:tft.cpp       **** }
 324:tft.cpp       **** 
 325:tft.cpp       **** void tft_t::bmp(bool e)
 326:tft.cpp       **** {
 327:tft.cpp       **** 	if (e)
 328:tft.cpp       **** 		_setOrient(orient() + BMPLandscape);
 329:tft.cpp       **** 	else
 330:tft.cpp       **** 		_setOrient(orient());
 331:tft.cpp       **** }
 332:tft.cpp       **** 
 333:tft.cpp       **** void tft_t::setVerticalScrolling(const uint16_t vsp)
 334:tft.cpp       **** {
 335:tft.cpp       **** 	cmd(0x37);	// Vertical Scrolling Start Address
 336:tft.cpp       **** 	write16(flipped() ? vsMaximum() - vsp : vsp);
 337:tft.cpp       **** 	d.vsp = vsp;
 338:tft.cpp       **** }
 339:tft.cpp       **** 
 340:tft.cpp       **** void tft_t::setVerticalScrollingArea(const uint16_t tfa, const uint16_t bfa)
 341:tft.cpp       **** {
 342:tft.cpp       **** 	uint16_t vsa = SIZE_H - tfa - bfa;
 343:tft.cpp       **** 	cmd(0x33);	// Vertical Scrolling Definition
GAS LISTING /tmp/ccp1AA0E.s 			page 13


 344:tft.cpp       **** 	if (flipped()) {
 345:tft.cpp       **** 		write16(bfa);	// Top Fixed Area
 346:tft.cpp       **** 		write16(vsa);	// Vertical Scrolling Area
 347:tft.cpp       **** 		write16(tfa);	// Bottom Fixed Area
 348:tft.cpp       **** 	} else {
 349:tft.cpp       **** 		write16(tfa);	// Top Fixed Area
 350:tft.cpp       **** 		write16(vsa);	// Vertical Scrolling Area
 351:tft.cpp       **** 		write16(bfa);	// Bottom Fixed Area
 352:tft.cpp       **** 	}
 353:tft.cpp       **** 	d.tfa = tfa;
 354:tft.cpp       **** 	d.bfa = bfa;
 355:tft.cpp       **** }
 356:tft.cpp       **** 
 357:tft.cpp       **** static tft_t *tft;
 358:tft.cpp       **** 
 359:tft.cpp       **** inline int tftputch(const char c, FILE *stream)
 360:tft.cpp       **** {
 361:tft.cpp       **** 	(*tft) << c;
 362:tft.cpp       **** 	return 0;
 363:tft.cpp       **** }
 364:tft.cpp       **** 
 365:tft.cpp       **** void tftput(uint8_t c)
 366:tft.cpp       **** {
 367:tft.cpp       **** 	(*tft) << c;
 368:tft.cpp       **** }
 369:tft.cpp       **** 
 370:tft.cpp       **** FILE *tftout(tft_t *hw)
 371:tft.cpp       **** {
 372:tft.cpp       **** 	static FILE *out = NULL;
 373:tft.cpp       **** 	tft = hw;
 374:tft.cpp       **** 	if (out == NULL)
 375:tft.cpp       **** 		out = fdevopen(tftputch, NULL);
 376:tft.cpp       **** 	return out;
 377:tft.cpp       **** }
 217               		.stabn	68,0,377,.LM16-.LFBB4
 218               	.LM16:
 219 0000 FC01      		movw r30,r24
 220 0002 9281      		ldd r25,Z+2
 221               		.stabs	"tft.h",132,0,0,.Ltext4
 222               	.Ltext4:
 223               		.stabn	68,0,47,.LM17-.LFBB4
 224               	.LM17:
 225 0004 81E0      		ldi r24,lo8(1)
 226 0006 9130      		cpi r25,lo8(1)
 227 0008 01F0      		breq .L5
 228               		.stabn	68,0,47,.LM18-.LFBB4
 229               	.LM18:
 230 000a 9330      		cpi r25,lo8(3)
 231 000c 01F0      		breq .L5
 232 000e 80E0      		ldi r24,0
 233 0010 0895      		ret
 234               	.L5:
 235               		.stabn	68,0,47,.LM19-.LFBB4
 236               	.LM19:
 237 0012 0895      		ret
 238               		.size	_ZNK5tft_t8portraitEv, .-_ZNK5tft_t8portraitEv
 239               	.Lscope4:
GAS LISTING /tmp/ccp1AA0E.s 			page 14


 240               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 241               		.stabd	78,0,0
 242               		.section	.text._ZN5tft_t5startEv,"axG",@progbits,_ZN5tft_t5startEv,comdat
 243               		.stabs	"_ZN5tft_t5startEv:F(0,4)",36,0,90,_ZN5tft_t5startEv
 244               		.weak	_ZN5tft_t5startEv
 245               		.type	_ZN5tft_t5startEv, @function
 246               	_ZN5tft_t5startEv:
 247               		.stabd	46,0,0
  48:tft.h         **** 
  49:tft.h         **** 	// Vertical scrolling related functions
  50:tft.h         **** 	// Vertical scrolling pointer
  51:tft.h         **** 	void setVerticalScrolling(const uint16_t vsp);
  52:tft.h         **** 	// Top fixed area, bottom fixed area
  53:tft.h         **** 	void setVerticalScrollingArea(const uint16_t tfa, const uint16_t bfa);
  54:tft.h         **** 	// Vertical scrolling mode drawing auto transform
  55:tft.h         **** 	inline bool transform(void) const {return d.tf;}
  56:tft.h         **** 	inline void setTransform(const bool on) {d.tf = on;}
  57:tft.h         **** 	// Vertical scrolling mode helper functions
  58:tft.h         **** 	inline uint16_t vsMaximum(void) const;
  59:tft.h         **** 	inline uint16_t topFixedArea(void) const {return d.tfa;}
  60:tft.h         **** 	inline uint16_t bottomFixedArea(void) const {return d.bfa;}
  61:tft.h         **** 	inline uint16_t vsHeight(void) const {return bottomEdge() - topFixedArea();}
  62:tft.h         **** 	inline uint16_t topEdge(void) const {return topFixedArea();}
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
  64:tft.h         **** 	inline uint16_t upperEdge(void) const {return d.vsp;}
  65:tft.h         **** 	inline uint16_t lowerEdge(void) const {return upperEdge() == topFixedArea() ? bottomEdge() : upper
  66:tft.h         **** 	// Vertical scrolling mode drawing coordinate transform
  67:tft.h         **** 	uint16_t vsTransform(uint16_t y) const;
  68:tft.h         **** 	uint16_t vsTransformBack(uint16_t y) const;
  69:tft.h         **** 	// Refresh region mask, not transformed
  70:tft.h         **** 	inline uint16_t topMask(void) const {return d.topMask;}
  71:tft.h         **** 	inline void setTopMask(const uint16_t lm) {d.topMask = lm;}
  72:tft.h         **** 	inline uint16_t bottomMask(void) const {return d.bottomMask;}
  73:tft.h         **** 	inline void setBottomMask(const uint16_t lm) {d.bottomMask = lm;}
  74:tft.h         **** 
  75:tft.h         **** 
  76:tft.h         **** 	inline void clean(void) {fill(background()); setX(0); setY(0);}
  77:tft.h         **** 	void line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, \
  78:tft.h         **** 		uint16_t c);
  79:tft.h         **** 	void frame(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  80:tft.h         **** 		uint8_t s, uint16_t c);
  81:tft.h         **** 	inline void fill(uint16_t clr);
  82:tft.h         **** 	void putch(char ch);
  83:tft.h         **** 	void rectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  84:tft.h         **** 		uint16_t c);
  85:tft.h         **** 	inline void point(uint16_t x, uint16_t y, uint16_t c);
  86:tft.h         **** 	inline void shiftUp(const uint16_t l);
  87:tft.h         **** 
  88:tft.h         **** 	inline void area(uint16_t x, uint16_t y, uint16_t w, uint16_t h);
  89:tft.h         **** 	inline void all(void) {area(0, 0, width(), height());}
  90:tft.h         **** 	static inline void start(void) {cmd(0x2C);}	// Memory write
 248               		.stabn	68,0,90,.LM20-.LFBB5
 249               	.LM20:
 250               	.LFBB5:
 251               	/* prologue: function */
 252               	/* frame size = 0 */
 253               	/* stack size = 0 */
GAS LISTING /tmp/ccp1AA0E.s 			page 15


 254               	.L__stack_usage = 0
 255               		.stabn	68,0,90,.LM21-.LFBB5
 256               	.LM21:
 257 0000 8CE2      		ldi r24,lo8(44)
 258 0002 0C94 0000 		jmp _ZN7ili93413cmdEh
 259               		.size	_ZN5tft_t5startEv, .-_ZN5tft_t5startEv
 260               	.Lscope5:
 261               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 262               		.stabd	78,0,0
 263               		.section	.text._ZN5tft_t7write16Ej,"axG",@progbits,_ZN5tft_t7write16Ej,comdat
 264               		.stabs	"_ZN5tft_t7write16Ej:F(0,4)",36,0,91,_ZN5tft_t7write16Ej
 265               		.weak	_ZN5tft_t7write16Ej
 266               		.type	_ZN5tft_t7write16Ej, @function
 267               	_ZN5tft_t7write16Ej:
 268               		.stabd	46,0,0
  91:tft.h         **** 	static inline void write16(uint16_t c) {data(c / 0x0100); data(c % 0x0100);}
 269               		.stabn	68,0,91,.LM22-.LFBB6
 270               	.LM22:
 271               	.LFBB6:
 272 0000 CF93      		push r28
 273               	/* prologue: function */
 274               	/* frame size = 0 */
 275               	/* stack size = 1 */
 276               	.L__stack_usage = 1
 277 0002 C82F      		mov r28,r24
 278               		.stabn	68,0,91,.LM23-.LFBB6
 279               	.LM23:
 280 0004 892F      		mov r24,r25
 281 0006 0E94 0000 		call _ZN7ili93414dataEh
 282 000a 8C2F      		mov r24,r28
 283               	/* epilogue start */
 284 000c CF91      		pop r28
 285 000e 0C94 0000 		jmp _ZN7ili93414dataEh
 286               		.size	_ZN5tft_t7write16Ej, .-_ZN5tft_t7write16Ej
 287               	.Lscope6:
 288               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 289               		.stabd	78,0,0
 290               		.text
 291               		.stabs	"_ZN5tft_t4areaEjjjj.isra.27:f(0,4)",36,0,262,_ZN5tft_t4areaEjjjj.isra.27
 292               		.stabs	"x:P(0,31)",64,0,262,28
 293               		.stabs	"y:P(0,31)",64,0,262,16
 294               		.stabs	"w:P(0,31)",64,0,262,12
 295               		.stabs	"h:P(0,31)",64,0,262,14
 296               		.type	_ZN5tft_t4areaEjjjj.isra.27, @function
 297               	_ZN5tft_t4areaEjjjj.isra.27:
 298               		.stabd	46,0,0
  92:tft.h         **** 
  93:tft.h         **** private:
  94:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
  95:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
  96:tft.h         **** 
  97:tft.h         **** 	inline void newline(void);
  98:tft.h         **** 	inline void next(void);
  99:tft.h         **** 	inline void tab(void);
 100:tft.h         **** 
 101:tft.h         **** 	template <typename Type>
 102:tft.h         **** 	static inline void swap(Type &a, Type &b);
GAS LISTING /tmp/ccp1AA0E.s 			page 16


 103:tft.h         **** 
 104:tft.h         **** 	struct {
 105:tft.h         **** 		bool tf;
 106:tft.h         **** 		uint8_t zoom, orient, tabSize;
 107:tft.h         **** 		uint16_t x, y, w, h, fgc, bgc;
 108:tft.h         **** 		uint16_t vsp, tfa, bfa, topMask, bottomMask;
 109:tft.h         **** 	} d;
 110:tft.h         **** };
 111:tft.h         **** 
 112:tft.h         **** void tftput(uint8_t c);
 113:tft.h         **** FILE *tftout(tft_t *hw);
 114:tft.h         **** 
 115:tft.h         **** // Defined as inline to execute faster
 116:tft.h         **** 
 117:tft.h         **** #define WIDTH FONT_WIDTH
 118:tft.h         **** #define HEIGHT FONT_HEIGHT
 119:tft.h         **** #define SIZE_H 320
 120:tft.h         **** #define SIZE_W 240
 121:tft.h         **** #define DEF_FGC 0xFFFF
 122:tft.h         **** #define DEF_BGC 0x0000
 123:tft.h         **** #define SWAP(x, y) { \
 124:tft.h         **** 	(x) = (x) ^ (y); \
 125:tft.h         **** 	(y) = (x) ^ (y); \
 126:tft.h         **** 	(x) = (x) ^ (y); \
 127:tft.h         **** }
 128:tft.h         **** 
 129:tft.h         **** template <typename Type>
 130:tft.h         **** inline void tft_t::swap(Type &a, Type &b)
 131:tft.h         **** {
 132:tft.h         **** 	Type tmp = a;
 133:tft.h         **** 	a = b;
 134:tft.h         **** 	b = tmp;
 135:tft.h         **** }
 136:tft.h         **** 
 137:tft.h         **** inline uint16_t tft_t::vsMaximum(void) const
 138:tft.h         **** {
 139:tft.h         **** 	return SIZE_H;
 140:tft.h         **** }
 141:tft.h         **** 
 142:tft.h         **** inline void tft_t::shiftUp(const uint16_t l)
 143:tft.h         **** {
 144:tft.h         **** 	// 0x2C Write, 0x2E Read, 0x3C / 0x3E Continue, 0x00 NOP
 145:tft.h         **** 	uint8_t buff[width() * 2];
 146:tft.h         **** 	uint16_t r;
 147:tft.h         **** 	cmd(0x2A);			// Column Address Set
 148:tft.h         **** 	write16(0);
 149:tft.h         **** 	write16(width() - 1);
 150:tft.h         **** 	for (r = 0; r < height() - l; r++) {
 151:tft.h         **** 		uint16_t b = width() * 2;
 152:tft.h         **** 		//area(0, r + l, w, 1);
 153:tft.h         **** 		cmd(0x2B);		// Page Address Set
 154:tft.h         **** 		write16(r + l);
 155:tft.h         **** 		write16(r + l);
 156:tft.h         **** 		cmd(0x2E);		// Read
 157:tft.h         **** 		mode(true);		// Read mode
 158:tft.h         **** 		recv();
 159:tft.h         **** 		while (b--) {
GAS LISTING /tmp/ccp1AA0E.s 			page 17


 160:tft.h         **** 			buff[b] = recv() & 0xF8;
 161:tft.h         **** 			uint8_t g = recv();
 162:tft.h         **** 			buff[b--] |= g >> 5;
 163:tft.h         **** 			buff[b] = (g << 3) & 0xE0;
 164:tft.h         **** 			buff[b] |= recv() >> 3;
 165:tft.h         **** 		}
 166:tft.h         **** 		mode(false);		// Write mode
 167:tft.h         **** 
 168:tft.h         **** 		b = width() * 2;
 169:tft.h         **** 		//area(0, r, w, 1);
 170:tft.h         **** 		cmd(0x2B);		// Page Address Set
 171:tft.h         **** 		write16(r);
 172:tft.h         **** 		write16(r);
 173:tft.h         **** 		start();
 174:tft.h         **** 		while (b--)
 175:tft.h         **** 			data(buff[b]);
 176:tft.h         **** 	}
 177:tft.h         **** 	//area(0, h - l, w, l);
 178:tft.h         **** 	cmd(0x2B);		// Page Address Set
 179:tft.h         **** 	write16(height() - l);
 180:tft.h         **** 	write16(height() - 1);
 181:tft.h         **** 	start();
 182:tft.h         **** 	while (r++ < height())
 183:tft.h         **** 		for (uint16_t c = width(); c; c--)
 184:tft.h         **** 			write16(background());
 185:tft.h         **** }
 186:tft.h         **** 
 187:tft.h         **** inline class tft_t& tft_t::operator<<(const char c)
 188:tft.h         **** {
 189:tft.h         **** 	switch (c) {
 190:tft.h         **** 	case '\n':
 191:tft.h         **** 		newline();
 192:tft.h         **** 		break;
 193:tft.h         **** 	case '\t':
 194:tft.h         **** 		tab();
 195:tft.h         **** 		break;
 196:tft.h         **** 	default:
 197:tft.h         **** 		if ((unsigned)c < ' ' || (unsigned)c > 127)
 198:tft.h         **** 			break;
 199:tft.h         **** 		putch(c);
 200:tft.h         **** 		next();
 201:tft.h         **** 	}
 202:tft.h         **** 	return *this;
 203:tft.h         **** }
 204:tft.h         **** 
 205:tft.h         **** inline class tft_t& tft_t::operator<<(const char *str)
 206:tft.h         **** {
 207:tft.h         **** 	uint16_t xt = 0;
 208:tft.h         **** 	bool clip = transform() && !portrait();
 209:tft.h         **** 	if (clip) {
 210:tft.h         **** 		xt = vsTransformBack(x());
 211:tft.h         **** 		clip = xt < bottomEdge();
 212:tft.h         **** 	}
 213:tft.h         **** 
 214:tft.h         **** 	while (*str) {
 215:tft.h         **** 		*this << *str++;
 216:tft.h         **** 		if (clip) {
GAS LISTING /tmp/ccp1AA0E.s 			page 18


 217:tft.h         **** 			xt += FONT_WIDTH * zoom();
 218:tft.h         **** 			if (xt >= bottomEdge())
 219:tft.h         **** 				break;
 220:tft.h         **** 		}
 221:tft.h         **** 	}
 222:tft.h         **** 	return *this;
 223:tft.h         **** }
 224:tft.h         **** 
 225:tft.h         **** inline void tft_t::point(uint16_t x, uint16_t y, uint16_t c)
 226:tft.h         **** {
 227:tft.h         **** 	area(x, y, 1, 1);
 228:tft.h         **** 	start();
 229:tft.h         **** 	write16(c);
 230:tft.h         **** }
 231:tft.h         **** 
 232:tft.h         **** inline void tft_t::newline(void)
 233:tft.h         **** {
 234:tft.h         **** 	setX(0);
 235:tft.h         **** 	setY(y() + HEIGHT * zoom());
 236:tft.h         **** 	if (y() + HEIGHT * zoom() > height()) {
 237:tft.h         **** #ifdef TFT_SCROLL
 238:tft.h         **** 		*this ^= HEIGHT * zoom;
 239:tft.h         **** 		y -= HEIGHT * zoom;
 240:tft.h         **** #else
 241:tft.h         **** 		fill(background());
 242:tft.h         **** 		setY(0);
 243:tft.h         **** #endif
 244:tft.h         **** 	}
 245:tft.h         **** }
 246:tft.h         **** 
 247:tft.h         **** inline void tft_t::fill(uint16_t clr)
 248:tft.h         **** {
 249:tft.h         **** 	uint8_t ch = clr / 0x0100, cl = clr % 0x0100;
 250:tft.h         **** 	uint16_t x = width(), y;
 251:tft.h         **** 	all();
 252:tft.h         **** 	start();
 253:tft.h         **** 	while (x--) {
 254:tft.h         **** 		y = height();
 255:tft.h         **** 		while (y--) {
 256:tft.h         **** 			data(ch);
 257:tft.h         **** 			data(cl);
 258:tft.h         **** 		}
 259:tft.h         **** 	}
 260:tft.h         **** }
 261:tft.h         **** 
 262:tft.h         **** inline void tft_t::area(uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 299               		.stabn	68,0,262,.LM24-.LFBB7
 300               	.LM24:
 301               	.LFBB7:
 302 0000 CF92      		push r12
 303 0002 DF92      		push r13
 304 0004 EF92      		push r14
 305 0006 FF92      		push r15
 306 0008 0F93      		push r16
 307 000a 1F93      		push r17
 308 000c CF93      		push r28
 309 000e DF93      		push r29
GAS LISTING /tmp/ccp1AA0E.s 			page 19


 310               	/* prologue: function */
 311               	/* frame size = 0 */
 312               	/* stack size = 8 */
 313               	.L__stack_usage = 8
 314 0010 EC01      		movw r28,r24
 315 0012 8B01      		movw r16,r22
 316 0014 6A01      		movw r12,r20
 317 0016 7901      		movw r14,r18
 263:tft.h         **** {
 264:tft.h         **** 	cmd(0x2A);			// Column Address Set
 318               		.stabn	68,0,264,.LM25-.LFBB7
 319               	.LM25:
 320 0018 8AE2      		ldi r24,lo8(42)
 321 001a 0E94 0000 		call _ZN7ili93413cmdEh
 265:tft.h         **** 	write16(x);
 322               		.stabn	68,0,265,.LM26-.LFBB7
 323               	.LM26:
 324 001e CE01      		movw r24,r28
 325 0020 0E94 0000 		call _ZN5tft_t7write16Ej
 266:tft.h         **** 	write16(x + w - 1);
 326               		.stabn	68,0,266,.LM27-.LFBB7
 327               	.LM27:
 328 0024 CE01      		movw r24,r28
 329 0026 0197      		sbiw r24,1
 330 0028 8C0D      		add r24,r12
 331 002a 9D1D      		adc r25,r13
 332 002c 0E94 0000 		call _ZN5tft_t7write16Ej
 267:tft.h         **** 	cmd(0x2B);			// Page Address Set
 333               		.stabn	68,0,267,.LM28-.LFBB7
 334               	.LM28:
 335 0030 8BE2      		ldi r24,lo8(43)
 336 0032 0E94 0000 		call _ZN7ili93413cmdEh
 268:tft.h         **** 	write16(y);
 337               		.stabn	68,0,268,.LM29-.LFBB7
 338               	.LM29:
 339 0036 C801      		movw r24,r16
 340 0038 0E94 0000 		call _ZN5tft_t7write16Ej
 269:tft.h         **** 	write16(y + h - 1);
 341               		.stabn	68,0,269,.LM30-.LFBB7
 342               	.LM30:
 343 003c C801      		movw r24,r16
 344 003e 0197      		sbiw r24,1
 345 0040 8E0D      		add r24,r14
 346 0042 9F1D      		adc r25,r15
 347               	/* epilogue start */
 270:tft.h         **** }
 348               		.stabn	68,0,270,.LM31-.LFBB7
 349               	.LM31:
 350 0044 DF91      		pop r29
 351 0046 CF91      		pop r28
 352 0048 1F91      		pop r17
 353 004a 0F91      		pop r16
 354 004c FF90      		pop r15
 355 004e EF90      		pop r14
 356 0050 DF90      		pop r13
 357 0052 CF90      		pop r12
 269:tft.h         **** 	write16(y + h - 1);
GAS LISTING /tmp/ccp1AA0E.s 			page 20


 358               		.stabn	68,0,269,.LM32-.LFBB7
 359               	.LM32:
 360 0054 0C94 0000 		jmp _ZN5tft_t7write16Ej
 361               		.size	_ZN5tft_t4areaEjjjj.isra.27, .-_ZN5tft_t4areaEjjjj.isra.27
 362               	.Lscope7:
 363               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 364               		.stabd	78,0,0
 365               		.section	.text._ZN5tft_t7newlineEv,"axG",@progbits,_ZN5tft_t7newlineEv,comdat
 366               		.stabs	"_ZN5tft_t7newlineEv:F(0,4)",36,0,232,_ZN5tft_t7newlineEv
 367               		.stabs	"this:P(0,111)=k(0,84)",64,0,232,28
 368               		.weak	_ZN5tft_t7newlineEv
 369               		.type	_ZN5tft_t7newlineEv, @function
 370               	_ZN5tft_t7newlineEv:
 371               		.stabd	46,0,0
 233:tft.h         **** {
 372               		.stabn	68,0,233,.LM33-.LFBB8
 373               	.LM33:
 374               	.LFBB8:
 375 0000 CF92      		push r12
 376 0002 DF92      		push r13
 377 0004 EF92      		push r14
 378 0006 FF92      		push r15
 379 0008 0F93      		push r16
 380 000a 1F93      		push r17
 381 000c CF93      		push r28
 382 000e DF93      		push r29
 383               	/* prologue: function */
 384               	/* frame size = 0 */
 385               	/* stack size = 8 */
 386               	.L__stack_usage = 8
 387 0010 EC01      		movw r28,r24
 388               	.LBB470:
 389               	.LBB471:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 390               		.stabn	68,0,27,.LM34-.LFBB8
 391               	.LM34:
 392 0012 1D82      		std Y+5,__zero_reg__
 393 0014 1C82      		std Y+4,__zero_reg__
 394               		.stabs	"tft.cpp",132,0,0,.Ltext5
 395               	.Ltext5:
 396               		.stabn	68,0,377,.LM35-.LFBB8
 397               	.LM35:
 398 0016 4981      		ldd r20,Y+1
 399               	.LBE471:
 400               	.LBE470:
 401               		.stabs	"tft.h",132,0,0,.Ltext6
 402               	.Ltext6:
 235:tft.h         **** 	setY(y() + HEIGHT * zoom());
 403               		.stabn	68,0,235,.LM36-.LFBB8
 404               	.LM36:
 405 0018 88E0      		ldi r24,lo8(8)
 406 001a 489F      		mul r20,r24
 407 001c A001      		movw r20,r0
 408 001e 1124      		clr __zero_reg__
 409 0020 8E81      		ldd r24,Y+6
 410 0022 9F81      		ldd r25,Y+7
 411 0024 840F      		add r24,r20
GAS LISTING /tmp/ccp1AA0E.s 			page 21


 412 0026 951F      		adc r25,r21
 413               	.LBB472:
 414               	.LBB473:
  28:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 415               		.stabn	68,0,28,.LM37-.LFBB8
 416               	.LM37:
 417 0028 9F83      		std Y+7,r25
 418 002a 8E83      		std Y+6,r24
 419               		.stabs	"tft.cpp",132,0,0,.Ltext7
 420               	.Ltext7:
 421               		.stabn	68,0,377,.LM38-.LFBB8
 422               	.LM38:
 423 002c 2A85      		ldd r18,Y+10
 424 002e 3B85      		ldd r19,Y+11
 425               	.LBE473:
 426               	.LBE472:
 427               		.stabs	"tft.h",132,0,0,.Ltext8
 428               	.Ltext8:
 236:tft.h         **** 	if (y() + HEIGHT * zoom() > height()) {
 429               		.stabn	68,0,236,.LM39-.LFBB8
 430               	.LM39:
 431 0030 840F      		add r24,r20
 432 0032 951F      		adc r25,r21
 433 0034 2817      		cp r18,r24
 434 0036 3907      		cpc r19,r25
 435 0038 00F4      		brsh .L14
 436               	.LBB474:
 437               		.stabs	"tft.cpp",132,0,0,.Ltext9
 438               	.Ltext9:
 439               		.stabn	68,0,377,.LM40-.LFBB8
 440               	.LM40:
 441 003a DE84      		ldd r13,Y+14
 442 003c CF84      		ldd r12,Y+15
 443               	.LBB475:
 444 003e 0885      		ldd r16,Y+8
 445 0040 1985      		ldd r17,Y+9
 446               	.LBB476:
 447               	.LBB477:
 448               	.LBB478:
 449               		.stabs	"tft.h",132,0,0,.Ltext10
 450               	.Ltext10:
  89:tft.h         **** 	inline void all(void) {area(0, 0, width(), height());}
 451               		.stabn	68,0,89,.LM41-.LFBB8
 452               	.LM41:
 453 0042 A801      		movw r20,r16
 454 0044 60E0      		ldi r22,0
 455 0046 70E0      		ldi r23,0
 456 0048 80E0      		ldi r24,0
 457 004a 90E0      		ldi r25,0
 458 004c 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 459               	.LBE478:
 460               	.LBE477:
 252:tft.h         **** 	start();
 461               		.stabn	68,0,252,.LM42-.LFBB8
 462               	.LM42:
 463 0050 0E94 0000 		call _ZN5tft_t5startEv
 464 0054 00C0      		rjmp .L16
GAS LISTING /tmp/ccp1AA0E.s 			page 22


 465               	.L19:
 466               	.LBE476:
 467               		.stabs	"tft.cpp",132,0,0,.Ltext11
 468               	.Ltext11:
 469               		.stabn	68,0,377,.LM43-.LFBB8
 470               	.LM43:
 471 0056 EA84      		ldd r14,Y+10
 472 0058 FB84      		ldd r15,Y+11
 473 005a 00C0      		rjmp .L17
 474               	.L18:
 475               	.LBB479:
 476               		.stabs	"tft.h",132,0,0,.Ltext12
 477               	.Ltext12:
 255:tft.h         **** 		while (y--) {
 478               		.stabn	68,0,255,.LM44-.LFBB8
 479               	.LM44:
 480 005c 81E0      		ldi r24,1
 481 005e E81A      		sub r14,r24
 482 0060 F108      		sbc r15,__zero_reg__
 256:tft.h         **** 			data(ch);
 483               		.stabn	68,0,256,.LM45-.LFBB8
 484               	.LM45:
 485 0062 8C2D      		mov r24,r12
 486 0064 0E94 0000 		call _ZN7ili93414dataEh
 257:tft.h         **** 			data(cl);
 487               		.stabn	68,0,257,.LM46-.LFBB8
 488               	.LM46:
 489 0068 8D2D      		mov r24,r13
 490 006a 0E94 0000 		call _ZN7ili93414dataEh
 491               	.L17:
 255:tft.h         **** 		while (y--) {
 492               		.stabn	68,0,255,.LM47-.LFBB8
 493               	.LM47:
 494 006e E114      		cp r14,__zero_reg__
 495 0070 F104      		cpc r15,__zero_reg__
 496 0072 01F4      		brne .L18
 497 0074 0150      		subi r16,1
 498 0076 1109      		sbc r17,__zero_reg__
 499               	.L16:
 253:tft.h         **** 	while (x--) {
 500               		.stabn	68,0,253,.LM48-.LFBB8
 501               	.LM48:
 502 0078 0115      		cp r16,__zero_reg__
 503 007a 1105      		cpc r17,__zero_reg__
 504 007c 01F4      		brne .L19
 505               	.LBE479:
 506               	.LBE475:
 507               	.LBB480:
 508               	.LBB481:
  28:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 509               		.stabn	68,0,28,.LM49-.LFBB8
 510               	.LM49:
 511 007e 1F82      		std Y+7,__zero_reg__
 512 0080 1E82      		std Y+6,__zero_reg__
 513               	.L14:
 514               	/* epilogue start */
 515               	.LBE481:
GAS LISTING /tmp/ccp1AA0E.s 			page 23


 516               	.LBE480:
 517               	.LBE474:
 245:tft.h         **** }
 518               		.stabn	68,0,245,.LM50-.LFBB8
 519               	.LM50:
 520 0082 DF91      		pop r29
 521 0084 CF91      		pop r28
 522 0086 1F91      		pop r17
 523 0088 0F91      		pop r16
 524 008a FF90      		pop r15
 525 008c EF90      		pop r14
 526 008e DF90      		pop r13
 527 0090 CF90      		pop r12
 528 0092 0895      		ret
 529               		.size	_ZN5tft_t7newlineEv, .-_ZN5tft_t7newlineEv
 530               		.stabs	"x:r(0,31)",64,0,250,16
 531               		.stabs	"y:r(0,31)",64,0,250,14
 532               		.stabn	192,0,0,.LBB476-.LFBB8
 533               		.stabn	224,0,0,.LBE476-.LFBB8
 534               		.stabs	"x:r(0,31)",64,0,250,16
 535               		.stabs	"y:r(0,31)",64,0,250,14
 536               		.stabn	192,0,0,.LBB479-.LFBB8
 537               		.stabn	224,0,0,.LBE479-.LFBB8
 538               	.Lscope8:
 539               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 540               		.stabd	78,0,0
 541               		.text
 542               		.stabs	"_ZN5tft_tC2Ev:F(0,4)",36,0,24,_ZN5tft_tC2Ev
 543               		.stabs	"this:P(0,111)",64,0,24,30
 544               	.global	_ZN5tft_tC2Ev
 545               		.type	_ZN5tft_tC2Ev, @function
 546               	_ZN5tft_tC2Ev:
 547               		.stabd	46,0,0
 548               		.stabs	"tft.cpp",132,0,0,.Ltext13
 549               	.Ltext13:
  24:tft.cpp       **** tft_t::tft_t(void)
 550               		.stabn	68,0,24,.LM51-.LFBB9
 551               	.LM51:
 552               	.LFBB9:
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 557 0058 FC01      		movw r30,r24
 558               	.LBB482:
 559               	.LBB483:
 560               	.LBB484:
 561               		.stabs	"tft.h",132,0,0,.Ltext14
 562               	.Ltext14:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 563               		.stabn	68,0,27,.LM52-.LFBB9
 564               	.LM52:
 565 005a 1582      		std Z+5,__zero_reg__
 566 005c 1482      		std Z+4,__zero_reg__
 567               	.LBE484:
 568               	.LBE483:
 569               	.LBB485:
GAS LISTING /tmp/ccp1AA0E.s 			page 24


 570               	.LBB486:
  28:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 571               		.stabn	68,0,28,.LM53-.LFBB9
 572               	.LM53:
 573 005e 1782      		std Z+7,__zero_reg__
 574 0060 1682      		std Z+6,__zero_reg__
 575               	.LBE486:
 576               	.LBE485:
 577               		.stabs	"tft.cpp",132,0,0,.Ltext15
 578               	.Ltext15:
  28:tft.cpp       **** 	d.tfa = 0;
 579               		.stabn	68,0,28,.LM54-.LFBB9
 580               	.LM54:
 581 0062 138A      		std Z+19,__zero_reg__
 582 0064 128A      		std Z+18,__zero_reg__
  29:tft.cpp       **** 	d.bfa = 0;
 583               		.stabn	68,0,29,.LM55-.LFBB9
 584               	.LM55:
 585 0066 158A      		std Z+21,__zero_reg__
 586 0068 148A      		std Z+20,__zero_reg__
  30:tft.cpp       **** 	d.vsp = SIZE_H;
 587               		.stabn	68,0,30,.LM56-.LFBB9
 588               	.LM56:
 589 006a 80E4      		ldi r24,lo8(64)
 590 006c 91E0      		ldi r25,lo8(1)
 591 006e 918B      		std Z+17,r25
 592 0070 808B      		std Z+16,r24
 593               	.LBB487:
 594               	.LBB488:
 595               		.stabs	"tft.h",132,0,0,.Ltext16
 596               	.Ltext16:
  71:tft.h         **** 	inline void setTopMask(const uint16_t lm) {d.topMask = lm;}
 597               		.stabn	68,0,71,.LM57-.LFBB9
 598               	.LM57:
 599 0072 178A      		std Z+23,__zero_reg__
 600 0074 168A      		std Z+22,__zero_reg__
 601               	.LBE488:
 602               	.LBE487:
 603               	.LBB489:
 604               	.LBB490:
  73:tft.h         **** 	inline void setBottomMask(const uint16_t lm) {d.bottomMask = lm;}
 605               		.stabn	68,0,73,.LM58-.LFBB9
 606               	.LM58:
 607 0076 118E      		std Z+25,__zero_reg__
 608 0078 108E      		std Z+24,__zero_reg__
 609               	.LBE490:
 610               	.LBE489:
 611               	.LBB491:
 612               	.LBB492:
  56:tft.h         **** 	inline void setTransform(const bool on) {d.tf = on;}
 613               		.stabn	68,0,56,.LM59-.LFBB9
 614               	.LM59:
 615 007a 1082      		st Z,__zero_reg__
 616               	.LBE492:
 617               	.LBE491:
 618               	.LBB493:
 619               	.LBB494:
GAS LISTING /tmp/ccp1AA0E.s 			page 25


  34:tft.h         **** 	inline void setZoom(const uint8_t zoom) {d.zoom = zoom;}
 620               		.stabn	68,0,34,.LM60-.LFBB9
 621               	.LM60:
 622 007c 21E0      		ldi r18,lo8(1)
 623 007e 2183      		std Z+1,r18
 624               	.LBE494:
 625               	.LBE493:
 626               		.stabs	"tft.cpp",132,0,0,.Ltext17
 627               	.Ltext17:
  35:tft.cpp       **** 	d.orient = Portrait;
 628               		.stabn	68,0,35,.LM61-.LFBB9
 629               	.LM61:
 630 0080 2283      		std Z+2,r18
 631               	.LBB495:
 632               	.LBB496:
 633               		.stabs	"tft.h",132,0,0,.Ltext18
 634               	.Ltext18:
  44:tft.h         **** 	inline void setTabSize(uint8_t t) {d.tabSize = t;}
 635               		.stabn	68,0,44,.LM62-.LFBB9
 636               	.LM62:
 637 0082 24E0      		ldi r18,lo8(4)
 638 0084 2383      		std Z+3,r18
 639               	.LBE496:
 640               	.LBE495:
 641               	.LBB497:
 642               	.LBB498:
  94:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
 643               		.stabn	68,0,94,.LM63-.LFBB9
 644               	.LM63:
 645 0086 20EF      		ldi r18,lo8(-16)
 646 0088 30E0      		ldi r19,0
 647 008a 3187      		std Z+9,r19
 648 008c 2087      		std Z+8,r18
 649               	.LBE498:
 650               	.LBE497:
 651               	.LBB499:
 652               	.LBB500:
  95:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
 653               		.stabn	68,0,95,.LM64-.LFBB9
 654               	.LM64:
 655 008e 9387      		std Z+11,r25
 656 0090 8287      		std Z+10,r24
 657               	.LBE500:
 658               	.LBE499:
 659               	.LBB501:
 660               	.LBB502:
  36:tft.h         **** 	inline void setForeground(uint16_t c) {d.fgc = c;}
 661               		.stabn	68,0,36,.LM65-.LFBB9
 662               	.LM65:
 663 0092 8FEF      		ldi r24,lo8(-1)
 664 0094 9FEF      		ldi r25,lo8(-1)
 665 0096 9587      		std Z+13,r25
 666 0098 8487      		std Z+12,r24
 667               	.LBE502:
 668               	.LBE501:
 669               	.LBB503:
 670               	.LBB504:
GAS LISTING /tmp/ccp1AA0E.s 			page 26


  37:tft.h         **** 	inline void setBackground(uint16_t c) {d.bgc = c;}
 671               		.stabn	68,0,37,.LM66-.LFBB9
 672               	.LM66:
 673 009a 1786      		std Z+15,__zero_reg__
 674 009c 1686      		std Z+14,__zero_reg__
 675 009e 0895      		ret
 676               	.LBE504:
 677               	.LBE503:
 678               	.LBE482:
 679               		.size	_ZN5tft_tC2Ev, .-_ZN5tft_tC2Ev
 680               	.Lscope9:
 681               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 682               		.stabd	78,0,0
 683               	.global	_ZN5tft_tC1Ev
 684               		.set	_ZN5tft_tC1Ev,_ZN5tft_tC2Ev
 685               		.stabs	"_ZN5tft_t9setOrientEh:F(0,4)",36,0,276,_ZN5tft_t9setOrientEh
 686               		.stabs	"this:P(0,111)",64,0,276,30
 687               		.stabs	"o:P(0,29)",64,0,276,24
 688               	.global	_ZN5tft_t9setOrientEh
 689               		.type	_ZN5tft_t9setOrientEh, @function
 690               	_ZN5tft_t9setOrientEh:
 691               		.stabd	46,0,0
 692               		.stabs	"tft.cpp",132,0,0,.Ltext19
 693               	.Ltext19:
 277:tft.cpp       **** {
 694               		.stabn	68,0,277,.LM67-.LFBB10
 695               	.LM67:
 696               	.LFBB10:
 697               	/* prologue: function */
 698               	/* frame size = 0 */
 699               	/* stack size = 0 */
 700               	.L__stack_usage = 0
 701 00a0 FC01      		movw r30,r24
 702 00a2 862F      		mov r24,r22
 278:tft.cpp       **** 	switch (o) {
 703               		.stabn	68,0,278,.LM68-.LFBB10
 704               	.LM68:
 705 00a4 6130      		cpi r22,lo8(1)
 706 00a6 01F0      		breq .L24
 707 00a8 00F0      		brlo .L23
 708 00aa 6230      		cpi r22,lo8(2)
 709 00ac 01F0      		breq .L23
 710 00ae 6330      		cpi r22,lo8(3)
 711 00b0 01F4      		brne .L22
 712 00b2 00C0      		rjmp .L24
 713               	.L23:
 714               	.LBB505:
 715               	.LBB506:
 716               		.stabs	"tft.h",132,0,0,.Ltext20
 717               	.Ltext20:
  94:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
 718               		.stabn	68,0,94,.LM69-.LFBB10
 719               	.LM69:
 720 00b4 20E4      		ldi r18,lo8(64)
 721 00b6 31E0      		ldi r19,lo8(1)
 722 00b8 3187      		std Z+9,r19
 723 00ba 2087      		std Z+8,r18
GAS LISTING /tmp/ccp1AA0E.s 			page 27


 724               	.LBE506:
 725               	.LBE505:
 726               	.LBB507:
 727               	.LBB508:
  95:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
 728               		.stabn	68,0,95,.LM70-.LFBB10
 729               	.LM70:
 730 00bc 20EF      		ldi r18,lo8(-16)
 731 00be 30E0      		ldi r19,0
 732 00c0 00C0      		rjmp .L34
 733               	.L24:
 734               	.LBE508:
 735               	.LBE507:
 736               	.LBB509:
 737               	.LBB510:
  94:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
 738               		.stabn	68,0,94,.LM71-.LFBB10
 739               	.LM71:
 740 00c2 20EF      		ldi r18,lo8(-16)
 741 00c4 30E0      		ldi r19,0
 742 00c6 3187      		std Z+9,r19
 743 00c8 2087      		std Z+8,r18
 744               	.LBE510:
 745               	.LBE509:
 746               	.LBB511:
 747               	.LBB512:
  95:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
 748               		.stabn	68,0,95,.LM72-.LFBB10
 749               	.LM72:
 750 00ca 20E4      		ldi r18,lo8(64)
 751 00cc 31E0      		ldi r19,lo8(1)
 752               	.L34:
 753 00ce 3387      		std Z+11,r19
 754 00d0 2287      		std Z+10,r18
 755               	.L22:
 756               	.LBE512:
 757               	.LBE511:
 758               	.LBB513:
 759               	.LBB514:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 760               		.stabn	68,0,27,.LM73-.LFBB10
 761               	.LM73:
 762 00d2 1582      		std Z+5,__zero_reg__
 763 00d4 1482      		std Z+4,__zero_reg__
 764               	.LBE514:
 765               	.LBE513:
 766               	.LBB515:
 767               	.LBB516:
  28:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 768               		.stabn	68,0,28,.LM74-.LFBB10
 769               	.LM74:
 770 00d6 1782      		std Z+7,__zero_reg__
 771 00d8 1682      		std Z+6,__zero_reg__
 772               	.LBE516:
 773               	.LBE515:
 774               		.stabs	"tft.cpp",132,0,0,.Ltext21
 775               	.Ltext21:
GAS LISTING /tmp/ccp1AA0E.s 			page 28


 291:tft.cpp       **** 	d.orient = o;
 776               		.stabn	68,0,291,.LM75-.LFBB10
 777               	.LM75:
 778 00da 8283      		std Z+2,r24
 292:tft.cpp       **** 	_setOrient(o);
 779               		.stabn	68,0,292,.LM76-.LFBB10
 780               	.LM76:
 781 00dc 0C94 0000 		jmp _ZN7ili934110_setOrientEh
 782               		.size	_ZN5tft_t9setOrientEh, .-_ZN5tft_t9setOrientEh
 783               	.Lscope10:
 784               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 785               		.stabd	78,0,0
 786               		.stabs	"_ZNK5tft_t11vsTransformEj:F(0,31)",36,0,295,_ZNK5tft_t11vsTransformEj
 787               		.stabs	"this:P(0,110)",64,0,295,30
 788               		.stabs	"y:P(0,31)",64,0,295,22
 789               	.global	_ZNK5tft_t11vsTransformEj
 790               		.type	_ZNK5tft_t11vsTransformEj, @function
 791               	_ZNK5tft_t11vsTransformEj:
 792               		.stabd	46,0,0
 296:tft.cpp       **** {
 793               		.stabn	68,0,296,.LM77-.LFBB11
 794               	.LM77:
 795               	.LFBB11:
 796               	/* prologue: function */
 797               	/* frame size = 0 */
 798               	/* stack size = 0 */
 799               	.L__stack_usage = 0
 800 00e0 FC01      		movw r30,r24
 298:tft.cpp       **** 	if ((int16_t)y < 0)
 801               		.stabn	68,0,298,.LM78-.LFBB11
 802               	.LM78:
 803 00e2 77FD      		sbrc r23,7
 804 00e4 00C0      		rjmp .L39
 805               	.LBB517:
 806               		.stabn	68,0,377,.LM79-.LFBB11
 807               	.LM79:
 808 00e6 8289      		ldd r24,Z+18
 809 00e8 9389      		ldd r25,Z+19
 810               	.LBE517:
 301:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 811               		.stabn	68,0,301,.LM80-.LFBB11
 812               	.LM80:
 813 00ea 6817      		cp r22,r24
 814 00ec 7907      		cpc r23,r25
 815 00ee 00F0      		brlo .L39
 816               	.LBB518:
 817               	.LBB519:
 818               		.stabs	"tft.h",132,0,0,.Ltext22
 819               	.Ltext22:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 820               		.stabn	68,0,63,.LM81-.LFBB11
 821               	.LM81:
 822 00f0 20E4      		ldi r18,lo8(64)
 823 00f2 31E0      		ldi r19,lo8(1)
 824 00f4 4489      		ldd r20,Z+20
 825 00f6 5589      		ldd r21,Z+21
 826 00f8 241B      		sub r18,r20
GAS LISTING /tmp/ccp1AA0E.s 			page 29


 827 00fa 350B      		sbc r19,r21
 828               	.LBE519:
 829               	.LBE518:
 830               		.stabs	"tft.cpp",132,0,0,.Ltext23
 831               	.Ltext23:
 301:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 832               		.stabn	68,0,301,.LM82-.LFBB11
 833               	.LM82:
 834 00fc 6217      		cp r22,r18
 835 00fe 7307      		cpc r23,r19
 836 0100 00F4      		brsh .L39
 837 0102 00C0      		rjmp .L40
 838               	.L38:
 839               	.LBB520:
 840               	.LBB521:
 841               		.stabs	"tft.h",132,0,0,.Ltext24
 842               	.Ltext24:
  61:tft.h         **** 	inline uint16_t vsHeight(void) const {return bottomEdge() - topFixedArea();}
 843               		.stabn	68,0,61,.LM83-.LFBB11
 844               	.LM83:
 845 0104 281B      		sub r18,r24
 846 0106 390B      		sbc r19,r25
 847               	.LBE521:
 848               	.LBE520:
 849               		.stabs	"tft.cpp",132,0,0,.Ltext25
 850               	.Ltext25:
 306:tft.cpp       **** 		y -= vsHeight();
 851               		.stabn	68,0,306,.LM84-.LFBB11
 852               	.LM84:
 853 0108 621B      		sub r22,r18
 854 010a 730B      		sbc r23,r19
 855 010c 00C0      		rjmp .L39
 856               	.L40:
 303:tft.cpp       **** 	y -= topEdge();		// Relative to upperEdge
 857               		.stabn	68,0,303,.LM85-.LFBB11
 858               	.LM85:
 859 010e 4089      		ldd r20,Z+16
 860 0110 5189      		ldd r21,Z+17
 861 0112 640F      		add r22,r20
 862 0114 751F      		adc r23,r21
 304:tft.cpp       **** 	y += upperEdge();	// Relative to 0
 863               		.stabn	68,0,304,.LM86-.LFBB11
 864               	.LM86:
 865 0116 681B      		sub r22,r24
 866 0118 790B      		sbc r23,r25
 305:tft.cpp       **** 	if (y >= bottomEdge())	// Transform edge
 867               		.stabn	68,0,305,.LM87-.LFBB11
 868               	.LM87:
 869 011a 6217      		cp r22,r18
 870 011c 7307      		cpc r23,r19
 871 011e 00F4      		brsh .L38
 872               	.L39:
 308:tft.cpp       **** }
 873               		.stabn	68,0,308,.LM88-.LFBB11
 874               	.LM88:
 875 0120 CB01      		movw r24,r22
 876 0122 0895      		ret
GAS LISTING /tmp/ccp1AA0E.s 			page 30


 877               		.size	_ZNK5tft_t11vsTransformEj, .-_ZNK5tft_t11vsTransformEj
 878               	.Lscope11:
 879               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 880               		.stabd	78,0,0
 881               		.stabs	"_ZNK5tft_t15vsTransformBackEj:F(0,31)",36,0,310,_ZNK5tft_t15vsTransformBackEj
 882               		.stabs	"this:P(0,110)",64,0,310,30
 883               		.stabs	"y:P(0,31)",64,0,310,22
 884               	.global	_ZNK5tft_t15vsTransformBackEj
 885               		.type	_ZNK5tft_t15vsTransformBackEj, @function
 886               	_ZNK5tft_t15vsTransformBackEj:
 887               		.stabd	46,0,0
 311:tft.cpp       **** {
 888               		.stabn	68,0,311,.LM89-.LFBB12
 889               	.LM89:
 890               	.LFBB12:
 891               	/* prologue: function */
 892               	/* frame size = 0 */
 893               	/* stack size = 0 */
 894               	.L__stack_usage = 0
 895 0124 FC01      		movw r30,r24
 313:tft.cpp       **** 	if ((int16_t)y < 0)
 896               		.stabn	68,0,313,.LM90-.LFBB12
 897               	.LM90:
 898 0126 77FD      		sbrc r23,7
 899 0128 00C0      		rjmp .L46
 900               	.LBB522:
 901               		.stabn	68,0,377,.LM91-.LFBB12
 902               	.LM91:
 903 012a 8289      		ldd r24,Z+18
 904 012c 9389      		ldd r25,Z+19
 905               	.LBE522:
 316:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 906               		.stabn	68,0,316,.LM92-.LFBB12
 907               	.LM92:
 908 012e 6817      		cp r22,r24
 909 0130 7907      		cpc r23,r25
 910 0132 00F0      		brlo .L46
 911               	.LBB523:
 912               	.LBB524:
 913               		.stabs	"tft.h",132,0,0,.Ltext26
 914               	.Ltext26:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 915               		.stabn	68,0,63,.LM93-.LFBB12
 916               	.LM93:
 917 0134 20E4      		ldi r18,lo8(64)
 918 0136 31E0      		ldi r19,lo8(1)
 919 0138 4489      		ldd r20,Z+20
 920 013a 5589      		ldd r21,Z+21
 921 013c 241B      		sub r18,r20
 922 013e 350B      		sbc r19,r21
 923               	.LBE524:
 924               	.LBE523:
 925               		.stabs	"tft.cpp",132,0,0,.Ltext27
 926               	.Ltext27:
 316:tft.cpp       **** 	if (y < topEdge() || y >= bottomEdge())
 927               		.stabn	68,0,316,.LM94-.LFBB12
 928               	.LM94:
GAS LISTING /tmp/ccp1AA0E.s 			page 31


 929 0140 6217      		cp r22,r18
 930 0142 7307      		cpc r23,r19
 931 0144 00F4      		brsh .L46
 932 0146 00C0      		rjmp .L47
 933               	.L44:
 934               	.LBB525:
 935               	.LBB526:
 936               		.stabs	"tft.h",132,0,0,.Ltext28
 937               	.Ltext28:
  61:tft.h         **** 	inline uint16_t vsHeight(void) const {return bottomEdge() - topFixedArea();}
 938               		.stabn	68,0,61,.LM95-.LFBB12
 939               	.LM95:
 940 0148 281B      		sub r18,r24
 941 014a 390B      		sbc r19,r25
 942               	.LBE526:
 943               	.LBE525:
 944               		.stabs	"tft.cpp",132,0,0,.Ltext29
 945               	.Ltext29:
 319:tft.cpp       **** 		y += vsHeight();
 946               		.stabn	68,0,319,.LM96-.LFBB12
 947               	.LM96:
 948 014c 620F      		add r22,r18
 949 014e 731F      		adc r23,r19
 950               	.L45:
 320:tft.cpp       **** 	y -= upperEdge();	// Relative to upperEdge
 951               		.stabn	68,0,320,.LM97-.LFBB12
 952               	.LM97:
 953 0150 841B      		sub r24,r20
 954 0152 950B      		sbc r25,r21
 321:tft.cpp       **** 	y += topEdge();		// Relative to 0
 955               		.stabn	68,0,321,.LM98-.LFBB12
 956               	.LM98:
 957 0154 680F      		add r22,r24
 958 0156 791F      		adc r23,r25
 322:tft.cpp       **** 	return y;
 959               		.stabn	68,0,322,.LM99-.LFBB12
 960               	.LM99:
 961 0158 00C0      		rjmp .L46
 962               	.L47:
 963               		.stabn	68,0,377,.LM100-.LFBB12
 964               	.LM100:
 965 015a 4089      		ldd r20,Z+16
 966 015c 5189      		ldd r21,Z+17
 318:tft.cpp       **** 	if (y < upperEdge())
 967               		.stabn	68,0,318,.LM101-.LFBB12
 968               	.LM101:
 969 015e 6417      		cp r22,r20
 970 0160 7507      		cpc r23,r21
 971 0162 00F0      		brlo .L44
 972 0164 00C0      		rjmp .L45
 973               	.L46:
 323:tft.cpp       **** }
 974               		.stabn	68,0,323,.LM102-.LFBB12
 975               	.LM102:
 976 0166 CB01      		movw r24,r22
 977 0168 0895      		ret
 978               		.size	_ZNK5tft_t15vsTransformBackEj, .-_ZNK5tft_t15vsTransformBackEj
GAS LISTING /tmp/ccp1AA0E.s 			page 32


 979               	.Lscope12:
 980               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 981               		.stabd	78,0,0
 982               		.section	.text._ZN5tft_t4nextEv,"axG",@progbits,_ZN5tft_t4nextEv,comdat
 983               		.stabs	"_ZN5tft_t4nextEv:F(0,4)",36,0,272,_ZN5tft_t4nextEv
 984               		.stabs	"this:P(0,111)",64,0,272,28
 985               		.weak	_ZN5tft_t4nextEv
 986               		.type	_ZN5tft_t4nextEv, @function
 987               	_ZN5tft_t4nextEv:
 988               		.stabd	46,0,0
 989               		.stabs	"tft.h",132,0,0,.Ltext30
 990               	.Ltext30:
 271:tft.h         **** 
 272:tft.h         **** inline void tft_t::next(void)
 273:tft.h         **** {
 991               		.stabn	68,0,273,.LM103-.LFBB13
 992               	.LM103:
 993               	.LFBB13:
 994 0000 0F93      		push r16
 995 0002 1F93      		push r17
 996 0004 CF93      		push r28
 997 0006 DF93      		push r29
 998               	/* prologue: function */
 999               	/* frame size = 0 */
 1000               	/* stack size = 4 */
 1001               	.L__stack_usage = 4
 1002 0008 EC01      		movw r28,r24
 1003               	.LBB538:
 274:tft.h         **** 	if (transform() && !portrait()) {
 1004               		.stabn	68,0,274,.LM104-.LFBB13
 1005               	.LM104:
 1006 000a 8881      		ld r24,Y
 1007 000c 0C81      		ldd r16,Y+4
 1008 000e 1D81      		ldd r17,Y+5
 1009 0010 8823      		tst r24
 1010 0012 01F0      		breq .L49
 1011               		.stabn	68,0,274,.LM105-.LFBB13
 1012               	.LM105:
 1013 0014 CE01      		movw r24,r28
 1014 0016 0E94 0000 		call _ZNK5tft_t8portraitEv
 1015 001a 8111      		cpse r24,__zero_reg__
 1016 001c 00C0      		rjmp .L49
 1017 001e 00C0      		rjmp .L56
 1018               	.L51:
 275:tft.h         **** 		uint16_t xt = vsTransformBack(x());
 276:tft.h         **** 		setX(vsTransform(xt + FONT_WIDTH * zoom()));
 277:tft.h         **** 	} else {
 278:tft.h         **** 		setX(x() + FONT_WIDTH * zoom());
 279:tft.h         **** 		if (x() + FONT_WIDTH * zoom() > width())
 280:tft.h         **** 			newline();
 1019               		.stabn	68,0,280,.LM106-.LFBB13
 1020               	.LM106:
 1021 0020 CE01      		movw r24,r28
 1022               	/* epilogue start */
 1023               	.LBE538:
 281:tft.h         **** 	}
 282:tft.h         **** }
GAS LISTING /tmp/ccp1AA0E.s 			page 33


 1024               		.stabn	68,0,282,.LM107-.LFBB13
 1025               	.LM107:
 1026 0022 DF91      		pop r29
 1027 0024 CF91      		pop r28
 1028 0026 1F91      		pop r17
 1029 0028 0F91      		pop r16
 1030               	.LBB541:
 280:tft.h         **** 			newline();
 1031               		.stabn	68,0,280,.LM108-.LFBB13
 1032               	.LM108:
 1033 002a 0C94 0000 		jmp _ZN5tft_t7newlineEv
 1034               	.L49:
 1035               	.LBE541:
 1036               		.stabs	"tft.cpp",132,0,0,.Ltext31
 1037               	.Ltext31:
 1038               		.stabn	68,0,377,.LM109-.LFBB13
 1039               	.LM109:
 1040 002e 8981      		ldd r24,Y+1
 1041               	.LBB542:
 1042               		.stabs	"tft.h",132,0,0,.Ltext32
 1043               	.Ltext32:
 278:tft.h         **** 		setX(x() + FONT_WIDTH * zoom());
 1044               		.stabn	68,0,278,.LM110-.LFBB13
 1045               	.LM110:
 1046 0030 26E0      		ldi r18,lo8(6)
 1047 0032 829F      		mul r24,r18
 1048 0034 C001      		movw r24,r0
 1049 0036 1124      		clr __zero_reg__
 1050 0038 080F      		add r16,r24
 1051 003a 191F      		adc r17,r25
 1052               	.LBB539:
 1053               	.LBB540:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 1054               		.stabn	68,0,27,.LM111-.LFBB13
 1055               	.LM111:
 1056 003c 1D83      		std Y+5,r17
 1057 003e 0C83      		std Y+4,r16
 1058               	.LBE540:
 1059               	.LBE539:
 279:tft.h         **** 		if (x() + FONT_WIDTH * zoom() > width())
 1060               		.stabn	68,0,279,.LM112-.LFBB13
 1061               	.LM112:
 1062 0040 080F      		add r16,r24
 1063 0042 191F      		adc r17,r25
 1064 0044 2885      		ldd r18,Y+8
 1065 0046 3985      		ldd r19,Y+9
 1066 0048 2017      		cp r18,r16
 1067 004a 3107      		cpc r19,r17
 1068 004c 00F4      		brsh .L48
 1069 004e 00C0      		rjmp .L51
 1070               	.L56:
 1071               	.LBE542:
 1072               	.LBB543:
 1073               	.LBB544:
 275:tft.h         **** 		uint16_t xt = vsTransformBack(x());
 1074               		.stabn	68,0,275,.LM113-.LFBB13
 1075               	.LM113:
GAS LISTING /tmp/ccp1AA0E.s 			page 34


 1076 0050 B801      		movw r22,r16
 1077 0052 CE01      		movw r24,r28
 1078 0054 0E94 0000 		call _ZNK5tft_t15vsTransformBackEj
 1079               	.LBE544:
 1080               		.stabs	"tft.cpp",132,0,0,.Ltext33
 1081               	.Ltext33:
 1082               		.stabn	68,0,377,.LM114-.LFBB13
 1083               	.LM114:
 1084 0058 2981      		ldd r18,Y+1
 1085               	.LBB547:
 1086               		.stabs	"tft.h",132,0,0,.Ltext34
 1087               	.Ltext34:
 276:tft.h         **** 		setX(vsTransform(xt + FONT_WIDTH * zoom()));
 1088               		.stabn	68,0,276,.LM115-.LFBB13
 1089               	.LM115:
 1090 005a BC01      		movw r22,r24
 1091 005c 36E0      		ldi r19,lo8(6)
 1092 005e 239F      		mul r18,r19
 1093 0060 600D      		add r22,r0
 1094 0062 711D      		adc r23,r1
 1095 0064 1124      		clr __zero_reg__
 1096 0066 CE01      		movw r24,r28
 1097 0068 0E94 0000 		call _ZNK5tft_t11vsTransformEj
 1098               	.LBB545:
 1099               	.LBB546:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 1100               		.stabn	68,0,27,.LM116-.LFBB13
 1101               	.LM116:
 1102 006c 9D83      		std Y+5,r25
 1103 006e 8C83      		std Y+4,r24
 1104               	.L48:
 1105               	/* epilogue start */
 1106               	.LBE546:
 1107               	.LBE545:
 1108               	.LBE547:
 1109               	.LBE543:
 1110               		.stabn	68,0,282,.LM117-.LFBB13
 1111               	.LM117:
 1112 0070 DF91      		pop r29
 1113 0072 CF91      		pop r28
 1114 0074 1F91      		pop r17
 1115 0076 0F91      		pop r16
 1116 0078 0895      		ret
 1117               		.size	_ZN5tft_t4nextEv, .-_ZN5tft_t4nextEv
 1118               	.Lscope13:
 1119               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 1120               		.stabd	78,0,0
 1121               		.text
 1122               		.stabs	"_ZN5tft_t9rectangleEjjjjj:F(0,4)",36,0,95,_ZN5tft_t9rectangleEjjjjj
 1123               		.stabs	"this:P(0,111)",64,0,95,6
 1124               		.stabs	"y:p(0,31)",160,0,95,5
 1125               		.stabs	"w:P(0,31)",64,0,95,12
 1126               		.stabs	"h:P(0,31)",64,0,95,16
 1127               		.stabs	"c:P(0,31)",64,0,95,8
 1128               	.global	_ZN5tft_t9rectangleEjjjjj
 1129               		.type	_ZN5tft_t9rectangleEjjjjj, @function
 1130               	_ZN5tft_t9rectangleEjjjjj:
GAS LISTING /tmp/ccp1AA0E.s 			page 35


 1131               		.stabd	46,0,0
 1132               		.stabs	"tft.cpp",132,0,0,.Ltext35
 1133               	.Ltext35:
  96:tft.cpp       **** {
 1134               		.stabn	68,0,96,.LM118-.LFBB14
 1135               	.LM118:
 1136               	.LFBB14:
 1137 016a 2F92      		push r2
 1138 016c 3F92      		push r3
 1139 016e 4F92      		push r4
 1140 0170 5F92      		push r5
 1141 0172 6F92      		push r6
 1142 0174 7F92      		push r7
 1143 0176 8F92      		push r8
 1144 0178 9F92      		push r9
 1145 017a AF92      		push r10
 1146 017c BF92      		push r11
 1147 017e CF92      		push r12
 1148 0180 DF92      		push r13
 1149 0182 EF92      		push r14
 1150 0184 FF92      		push r15
 1151 0186 0F93      		push r16
 1152 0188 1F93      		push r17
 1153 018a CF93      		push r28
 1154 018c DF93      		push r29
 1155 018e 00D0      		rcall .
 1156 0190 00D0      		rcall .
 1157 0192 00D0      		rcall .
 1158 0194 CDB7      		in r28,__SP_L__
 1159 0196 DEB7      		in r29,__SP_H__
 1160               	/* prologue: function */
 1161               	/* frame size = 6 */
 1162               	/* stack size = 24 */
 1163               	.L__stack_usage = 24
 1164 0198 3C01      		movw r6,r24
 1165 019a 362E      		mov r3,r22
 1166 019c 272E      		mov r2,r23
 1167 019e 5E83      		std Y+6,r21
 1168 01a0 4D83      		std Y+5,r20
 1169 01a2 6901      		movw r12,r18
 1170 01a4 4701      		movw r8,r14
 1171               	.LBB548:
 1172               	.LBB549:
 1173               	.LBB550:
 1174               		.stabs	"tft.h",132,0,0,.Ltext36
 1175               	.Ltext36:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 1176               		.stabn	68,0,63,.LM119-.LFBB14
 1177               	.LM119:
 1178 01a6 80E4      		ldi r24,lo8(64)
 1179 01a8 A82E      		mov r10,r24
 1180 01aa BB24      		clr r11
 1181 01ac B394      		inc r11
 1182               	.L87:
 1183               	.LBE550:
 1184               	.LBE549:
 1185               		.stabs	"tft.cpp",132,0,0,.Ltext37
GAS LISTING /tmp/ccp1AA0E.s 			page 36


 1186               	.Ltext37:
  97:tft.cpp       **** 	if (!h || !w)
 1187               		.stabn	68,0,97,.LM120-.LFBB14
 1188               	.LM120:
 1189 01ae 0115      		cp r16,__zero_reg__
 1190 01b0 1105      		cpc r17,__zero_reg__
 1191 01b2 01F4      		brne .+2
 1192 01b4 00C0      		rjmp .L57
  97:tft.cpp       **** 	if (!h || !w)
 1193               		.stabn	68,0,97,.LM121-.LFBB14
 1194               	.LM121:
 1195 01b6 C114      		cp r12,__zero_reg__
 1196 01b8 D104      		cpc r13,__zero_reg__
 1197 01ba 01F4      		brne .+2
 1198 01bc 00C0      		rjmp .L57
 101:tft.cpp       **** 	if (!transform())
 1199               		.stabn	68,0,101,.LM122-.LFBB14
 1200               	.LM122:
 1201 01be F301      		movw r30,r6
 1202 01c0 8081      		ld r24,Z
 1203 01c2 8823      		tst r24
 1204 01c4 01F4      		brne .+2
 1205 01c6 00C0      		rjmp .L61
 104:tft.cpp       **** 	if (!portrait()) {
 1206               		.stabn	68,0,104,.LM123-.LFBB14
 1207               	.LM123:
 1208 01c8 C301      		movw r24,r6
 1209 01ca 0E94 0000 		call _ZNK5tft_t8portraitEv
 1210 01ce F82E      		mov r15,r24
 1211 01d0 8111      		cpse r24,__zero_reg__
 1212 01d2 00C0      		rjmp .L62
 1213 01d4 9C2D      		mov r25,r12
 1214 01d6 8D2D      		mov r24,r13
 1215 01d8 6801      		movw r12,r16
 1216 01da 092F      		mov r16,r25
 1217 01dc 182F      		mov r17,r24
 1218 01de C101      		movw r24,r2
 1219 01e0 3D80      		ldd r3,Y+5
 1220 01e2 2E80      		ldd r2,Y+6
 1221 01e4 9D83      		std Y+5,r25
 1222 01e6 8E83      		std Y+6,r24
 1223               	.L62:
 109:tft.cpp       **** 	yt = vsTransformBack(y);
 1224               		.stabn	68,0,109,.LM124-.LFBB14
 1225               	.LM124:
 1226 01e8 6D81      		ldd r22,Y+5
 1227 01ea 7E81      		ldd r23,Y+6
 1228 01ec C301      		movw r24,r6
 1229 01ee 0E94 0000 		call _ZNK5tft_t15vsTransformBackEj
 1230 01f2 AC01      		movw r20,r24
 1231               	.LBB552:
 1232               		.stabn	68,0,377,.LM125-.LFBB14
 1233               	.LM125:
 1234 01f4 F301      		movw r30,r6
 1235 01f6 8289      		ldd r24,Z+18
 1236 01f8 9389      		ldd r25,Z+19
 1237               	.LBE552:
GAS LISTING /tmp/ccp1AA0E.s 			page 37


 110:tft.cpp       **** 	if ((int16_t)yt < (int16_t)topEdge() && \
 1238               		.stabn	68,0,110,.LM126-.LFBB14
 1239               	.LM126:
 1240 01fa 4817      		cp r20,r24
 1241 01fc 5907      		cpc r21,r25
 1242 01fe 04F0      		brlt .+2
 1243 0200 00C0      		rjmp .L63
 110:tft.cpp       **** 	if ((int16_t)yt < (int16_t)topEdge() && \
 1244               		.stabn	68,0,110,.LM127-.LFBB14
 1245               	.LM127:
 1246 0202 9801      		movw r18,r16
 1247 0204 240F      		add r18,r20
 1248 0206 351F      		adc r19,r21
 1249 0208 2817      		cp r18,r24
 1250 020a 3907      		cpc r19,r25
 1251 020c 04F0      		brlt .+2
 1252 020e 00C0      		rjmp .L64
 1253 0210 00C0      		rjmp .L63
 1254               	.L74:
 115:tft.cpp       **** 	} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 1255               		.stabn	68,0,115,.LM128-.LFBB14
 1256               	.LM128:
 1257 0212 9801      		movw r18,r16
 1258 0214 240F      		add r18,r20
 1259 0216 351F      		adc r19,r21
 1260 0218 2817      		cp r18,r24
 1261 021a 3907      		cpc r19,r25
 1262 021c 00F0      		brlo .+2
 1263 021e 00C0      		rjmp .L65
 1264               	.L75:
 117:tft.cpp       **** 	if (y + h > bottomEdge())				// Transform edge split
 1265               		.stabn	68,0,117,.LM129-.LFBB14
 1266               	.LM129:
 1267 0220 4D80      		ldd r4,Y+5
 1268 0222 5E80      		ldd r5,Y+6
 1269 0224 400E      		add r4,r16
 1270 0226 511E      		adc r5,r17
 1271               	.LBB553:
 1272               	.LBB554:
 1273               		.stabs	"tft.h",132,0,0,.Ltext38
 1274               	.Ltext38:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 1275               		.stabn	68,0,63,.LM130-.LFBB14
 1276               	.LM130:
 1277 0228 F301      		movw r30,r6
 1278 022a 8489      		ldd r24,Z+20
 1279 022c 9589      		ldd r25,Z+21
 1280 022e 9501      		movw r18,r10
 1281 0230 281B      		sub r18,r24
 1282 0232 390B      		sbc r19,r25
 1283               	.LBE554:
 1284               	.LBE553:
 1285               		.stabs	"tft.cpp",132,0,0,.Ltext39
 1286               	.Ltext39:
 117:tft.cpp       **** 	if (y + h > bottomEdge())				// Transform edge split
 1287               		.stabn	68,0,117,.LM131-.LFBB14
 1288               	.LM131:
GAS LISTING /tmp/ccp1AA0E.s 			page 38


 1289 0234 2415      		cp r18,r4
 1290 0236 3505      		cpc r19,r5
 1291 0238 00F4      		brsh .L78
 118:tft.cpp       **** 		if (y < bottomEdge()) {
 1292               		.stabn	68,0,118,.LM132-.LFBB14
 1293               	.LM132:
 1294 023a 8D81      		ldd r24,Y+5
 1295 023c 9E81      		ldd r25,Y+6
 1296 023e 8217      		cp r24,r18
 1297 0240 9307      		cpc r25,r19
 1298 0242 00F4      		brsh .L78
 1299 0244 281B      		sub r18,r24
 1300 0246 390B      		sbc r19,r25
 119:tft.cpp       **** 			if (!portrait()) {
 1301               		.stabn	68,0,119,.LM133-.LFBB14
 1302               	.LM133:
 1303 0248 F110      		cpse r15,__zero_reg__
 1304 024a 00C0      		rjmp .L67
 120:tft.cpp       **** 				rectangle(y, x, bottomEdge() - y, w, c);
 1305               		.stabn	68,0,120,.LM134-.LFBB14
 1306               	.LM134:
 1307 024c 7401      		movw r14,r8
 1308 024e 8601      		movw r16,r12
 1309 0250 432D      		mov r20,r3
 1310 0252 522D      		mov r21,r2
 1311 0254 BC01      		movw r22,r24
 1312 0256 C301      		movw r24,r6
 1313 0258 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
 1314               	.LBB555:
 1315               	.LBB556:
 1316               		.stabs	"tft.h",132,0,0,.Ltext40
 1317               	.Ltext40:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 1318               		.stabn	68,0,63,.LM135-.LFBB14
 1319               	.LM135:
 1320 025c F301      		movw r30,r6
 1321 025e 8489      		ldd r24,Z+20
 1322 0260 9589      		ldd r25,Z+21
 1323 0262 9501      		movw r18,r10
 1324 0264 281B      		sub r18,r24
 1325 0266 390B      		sbc r19,r25
 1326               	.LBE556:
 1327               	.LBE555:
 1328               	.LBB557:
 1329               		.stabs	"tft.cpp",132,0,0,.Ltext41
 1330               	.Ltext41:
 121:tft.cpp       **** 				rectangle(topEdge(), x, h - (bottomEdge() - y), w, c);
 1331               		.stabn	68,0,121,.LM136-.LFBB14
 1332               	.LM136:
 1333 0268 6201      		movw r12,r4
 1334 026a C21A      		sub r12,r18
 1335 026c D30A      		sbc r13,r19
 1336               		.stabn	68,0,377,.LM137-.LFBB14
 1337               	.LM137:
 1338 026e 3D82      		std Y+5,r3
 1339 0270 2E82      		std Y+6,r2
 121:tft.cpp       **** 				rectangle(topEdge(), x, h - (bottomEdge() - y), w, c);
GAS LISTING /tmp/ccp1AA0E.s 			page 39


 1340               		.stabn	68,0,121,.LM138-.LFBB14
 1341               	.LM138:
 1342 0272 3288      		ldd r3,Z+18
 1343 0274 2388      		ldd r2,Z+19
 1344 0276 00C0      		rjmp .L87
 1345               	.L67:
 1346               	.LBE557:
 123:tft.cpp       **** 				rectangle(x, y, w, bottomEdge() - y, c);
 1347               		.stabn	68,0,123,.LM139-.LFBB14
 1348               	.LM139:
 1349 0278 7401      		movw r14,r8
 1350 027a 8901      		movw r16,r18
 1351 027c 9601      		movw r18,r12
 1352 027e 4D81      		ldd r20,Y+5
 1353 0280 5E81      		ldd r21,Y+6
 1354 0282 632D      		mov r22,r3
 1355 0284 722D      		mov r23,r2
 1356 0286 C301      		movw r24,r6
 1357 0288 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
 1358               	.LBB558:
 1359               	.LBB559:
 1360               		.stabs	"tft.h",132,0,0,.Ltext42
 1361               	.Ltext42:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 1362               		.stabn	68,0,63,.LM140-.LFBB14
 1363               	.LM140:
 1364 028c F301      		movw r30,r6
 1365 028e 8489      		ldd r24,Z+20
 1366 0290 9589      		ldd r25,Z+21
 1367 0292 9501      		movw r18,r10
 1368 0294 281B      		sub r18,r24
 1369 0296 390B      		sbc r19,r25
 1370               	.LBE559:
 1371               	.LBE558:
 1372               		.stabs	"tft.cpp",132,0,0,.Ltext43
 1373               	.Ltext43:
 124:tft.cpp       **** 				rectangle(x, topEdge(), w, h - (bottomEdge() - y), c);
 1374               		.stabn	68,0,124,.LM141-.LFBB14
 1375               	.LM141:
 1376 0298 8201      		movw r16,r4
 1377 029a 021B      		sub r16,r18
 1378 029c 130B      		sbc r17,r19
 1379               	.LBB560:
 1380               		.stabn	68,0,377,.LM142-.LFBB14
 1381               	.LM142:
 1382 029e 8289      		ldd r24,Z+18
 1383 02a0 9389      		ldd r25,Z+19
 1384 02a2 9E83      		std Y+6,r25
 1385 02a4 8D83      		std Y+5,r24
 1386 02a6 00C0      		rjmp .L87
 1387               	.L78:
 1388               	.LBE560:
 118:tft.cpp       **** 		if (y < bottomEdge()) {
 1389               		.stabn	68,0,118,.LM143-.LFBB14
 1390               	.LM143:
 1391 02a8 9601      		movw r18,r12
 1392               	.LBB561:
GAS LISTING /tmp/ccp1AA0E.s 			page 40


 1393               		.stabn	68,0,377,.LM144-.LFBB14
 1394               	.LM144:
 1395 02aa F301      		movw r30,r6
 1396 02ac 6689      		ldd r22,Z+22
 1397 02ae 7789      		ldd r23,Z+23
 1398               	.LBE561:
 129:tft.cpp       **** 	if (yt < topMask()) {
 1399               		.stabn	68,0,129,.LM145-.LFBB14
 1400               	.LM145:
 1401 02b0 4617      		cp r20,r22
 1402 02b2 5707      		cpc r21,r23
 1403 02b4 00F4      		brsh .L69
 130:tft.cpp       **** 		if (yt + h < topMask())
 1404               		.stabn	68,0,130,.LM146-.LFBB14
 1405               	.LM146:
 1406 02b6 CA01      		movw r24,r20
 1407 02b8 800F      		add r24,r16
 1408 02ba 911F      		adc r25,r17
 1409 02bc 8617      		cp r24,r22
 1410 02be 9707      		cpc r25,r23
 1411 02c0 00F4      		brsh .+2
 1412 02c2 00C0      		rjmp .L57
 132:tft.cpp       **** 		h -= topMask() - yt;
 1413               		.stabn	68,0,132,.LM147-.LFBB14
 1414               	.LM147:
 1415 02c4 CB01      		movw r24,r22
 1416 02c6 841B      		sub r24,r20
 1417 02c8 950B      		sbc r25,r21
 1418 02ca 081B      		sub r16,r24
 1419 02cc 190B      		sbc r17,r25
 133:tft.cpp       **** 		y = vsTransform(topMask());
 1420               		.stabn	68,0,133,.LM148-.LFBB14
 1421               	.LM148:
 1422 02ce C301      		movw r24,r6
 1423 02d0 CB82      		std Y+3,r12
 1424 02d2 3C83      		std Y+4,r19
 1425 02d4 4983      		std Y+1,r20
 1426 02d6 5A83      		std Y+2,r21
 1427 02d8 0E94 0000 		call _ZNK5tft_t11vsTransformEj
 1428 02dc 9E83      		std Y+6,r25
 1429 02de 8D83      		std Y+5,r24
 1430 02e0 5A81      		ldd r21,Y+2
 1431 02e2 4981      		ldd r20,Y+1
 1432 02e4 3C81      		ldd r19,Y+4
 1433 02e6 2B81      		ldd r18,Y+3
 1434               	.L69:
 136:tft.cpp       **** 	bMask = vsMaximum() - bottomMask();
 1435               		.stabn	68,0,136,.LM149-.LFBB14
 1436               	.LM149:
 1437 02e8 80E4      		ldi r24,lo8(64)
 1438 02ea 91E0      		ldi r25,lo8(1)
 1439 02ec F301      		movw r30,r6
 1440 02ee 608D      		ldd r22,Z+24
 1441 02f0 718D      		ldd r23,Z+25
 1442 02f2 861B      		sub r24,r22
 1443 02f4 970B      		sbc r25,r23
 137:tft.cpp       **** 	if (yt >= bMask)
GAS LISTING /tmp/ccp1AA0E.s 			page 41


 1444               		.stabn	68,0,137,.LM150-.LFBB14
 1445               	.LM150:
 1446 02f6 4817      		cp r20,r24
 1447 02f8 5907      		cpc r21,r25
 1448 02fa 00F0      		brlo .+2
 1449 02fc 00C0      		rjmp .L57
 139:tft.cpp       **** 	if (yt + h > bMask)
 1450               		.stabn	68,0,139,.LM151-.LFBB14
 1451               	.LM151:
 1452 02fe 400F      		add r20,r16
 1453 0300 511F      		adc r21,r17
 1454 0302 8417      		cp r24,r20
 1455 0304 9507      		cpc r25,r21
 1456 0306 00F4      		brsh .L70
 140:tft.cpp       **** 		h -= yt + h - bMask;
 1457               		.stabn	68,0,140,.LM152-.LFBB14
 1458               	.LM152:
 1459 0308 080F      		add r16,r24
 1460 030a 191F      		adc r17,r25
 1461 030c 041B      		sub r16,r20
 1462 030e 150B      		sbc r17,r21
 1463               	.L70:
 142:tft.cpp       **** 	if (!portrait()) {
 1464               		.stabn	68,0,142,.LM153-.LFBB14
 1465               	.LM153:
 1466 0310 F110      		cpse r15,__zero_reg__
 1467 0312 00C0      		rjmp .L61
 143:tft.cpp       **** 		area(y, x, h, w);
 1468               		.stabn	68,0,143,.LM154-.LFBB14
 1469               	.LM154:
 1470 0314 A801      		movw r20,r16
 1471 0316 632D      		mov r22,r3
 1472 0318 722D      		mov r23,r2
 1473 031a 8D81      		ldd r24,Y+5
 1474 031c 9E81      		ldd r25,Y+6
 1475 031e 00C0      		rjmp .L88
 1476               	.L61:
 148:tft.cpp       **** 	area(x, y, w, h);
 1477               		.stabn	68,0,148,.LM155-.LFBB14
 1478               	.LM155:
 1479 0320 9801      		movw r18,r16
 1480 0322 A601      		movw r20,r12
 1481 0324 6D81      		ldd r22,Y+5
 1482 0326 7E81      		ldd r23,Y+6
 1483 0328 832D      		mov r24,r3
 1484 032a 922D      		mov r25,r2
 1485               	.L88:
 1486 032c 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 1487               	.L71:
 150:tft.cpp       **** 	start();
 1488               		.stabn	68,0,150,.LM156-.LFBB14
 1489               	.LM156:
 1490 0330 0E94 0000 		call _ZN5tft_t5startEv
 151:tft.cpp       **** 	while (h--)
 1491               		.stabn	68,0,151,.LM157-.LFBB14
 1492               	.LM157:
 1493 0334 00C0      		rjmp .L72
GAS LISTING /tmp/ccp1AA0E.s 			page 42


 1494               	.L79:
 1495 0336 A12C      		mov r10,__zero_reg__
 1496 0338 B12C      		mov r11,__zero_reg__
 1497               	.L73:
 1498               	.LBB562:
 153:tft.cpp       **** 			write16(c);
 1499               		.stabn	68,0,153,.LM158-.LFBB14
 1500               	.LM158:
 1501 033a C401      		movw r24,r8
 1502 033c 0E94 0000 		call _ZN5tft_t7write16Ej
 152:tft.cpp       **** 		for (uint16_t xx = 0; xx < w; xx++)
 1503               		.stabn	68,0,152,.LM159-.LFBB14
 1504               	.LM159:
 1505 0340 FFEF      		ldi r31,-1
 1506 0342 AF1A      		sub r10,r31
 1507 0344 BF0A      		sbc r11,r31
 1508 0346 AC14      		cp r10,r12
 1509 0348 BD04      		cpc r11,r13
 1510 034a 01F4      		brne .L73
 1511 034c 0150      		subi r16,1
 1512 034e 1109      		sbc r17,__zero_reg__
 1513               	.L72:
 1514               	.LBE562:
 151:tft.cpp       **** 	while (h--)
 1515               		.stabn	68,0,151,.LM160-.LFBB14
 1516               	.LM160:
 1517 0350 0115      		cp r16,__zero_reg__
 1518 0352 1105      		cpc r17,__zero_reg__
 1519 0354 01F4      		brne .L79
 1520 0356 00C0      		rjmp .L57
 1521               	.L63:
 1522               	.LBB563:
 1523               	.LBB551:
 1524               		.stabs	"tft.h",132,0,0,.Ltext44
 1525               	.Ltext44:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 1526               		.stabn	68,0,63,.LM161-.LFBB14
 1527               	.LM161:
 1528 0358 F301      		movw r30,r6
 1529 035a 8489      		ldd r24,Z+20
 1530 035c 9589      		ldd r25,Z+21
 1531 035e 9501      		movw r18,r10
 1532 0360 281B      		sub r18,r24
 1533 0362 390B      		sbc r19,r25
 1534 0364 C901      		movw r24,r18
 1535               	.LBE551:
 1536               	.LBE563:
 1537               		.stabs	"tft.cpp",132,0,0,.Ltext45
 1538               	.Ltext45:
 115:tft.cpp       **** 	} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 1539               		.stabn	68,0,115,.LM162-.LFBB14
 1540               	.LM162:
 1541 0366 4217      		cp r20,r18
 1542 0368 5307      		cpc r21,r19
 1543 036a 00F4      		brsh .+2
 1544 036c 00C0      		rjmp .L74
 1545 036e 00C0      		rjmp .L75
GAS LISTING /tmp/ccp1AA0E.s 			page 43


 1546               	.L64:
 112:tft.cpp       **** 		h -= topEdge() - yt;
 1547               		.stabn	68,0,112,.LM163-.LFBB14
 1548               	.LM163:
 1549 0370 841B      		sub r24,r20
 1550 0372 950B      		sbc r25,r21
 1551 0374 081B      		sub r16,r24
 1552 0376 190B      		sbc r17,r25
 1553               		.stabn	68,0,377,.LM164-.LFBB14
 1554               	.LM164:
 1555 0378 F301      		movw r30,r6
 1556 037a 0088      		ldd __tmp_reg__,Z+16
 1557 037c F189      		ldd r31,Z+17
 1558 037e E02D      		mov r30,__tmp_reg__
 1559 0380 FE83      		std Y+6,r31
 1560 0382 ED83      		std Y+5,r30
 114:tft.cpp       **** 		yt = vsTransformBack(y);
 1561               		.stabn	68,0,114,.LM165-.LFBB14
 1562               	.LM165:
 1563 0384 BF01      		movw r22,r30
 1564 0386 C301      		movw r24,r6
 1565 0388 0E94 0000 		call _ZNK5tft_t15vsTransformBackEj
 1566 038c AC01      		movw r20,r24
 1567 038e 00C0      		rjmp .L75
 1568               	.L65:
 116:tft.cpp       **** 		h = bottomEdge() - yt;
 1569               		.stabn	68,0,116,.LM166-.LFBB14
 1570               	.LM166:
 1571 0390 8C01      		movw r16,r24
 1572 0392 041B      		sub r16,r20
 1573 0394 150B      		sbc r17,r21
 1574 0396 00C0      		rjmp .L75
 1575               	.L57:
 1576               	/* epilogue start */
 1577               	.LBE548:
 154:tft.cpp       **** }
 1578               		.stabn	68,0,154,.LM167-.LFBB14
 1579               	.LM167:
 1580 0398 2696      		adiw r28,6
 1581 039a 0FB6      		in __tmp_reg__,__SREG__
 1582 039c F894      		cli
 1583 039e DEBF      		out __SP_H__,r29
 1584 03a0 0FBE      		out __SREG__,__tmp_reg__
 1585 03a2 CDBF      		out __SP_L__,r28
 1586 03a4 DF91      		pop r29
 1587 03a6 CF91      		pop r28
 1588 03a8 1F91      		pop r17
 1589 03aa 0F91      		pop r16
 1590 03ac FF90      		pop r15
 1591 03ae EF90      		pop r14
 1592 03b0 DF90      		pop r13
 1593 03b2 CF90      		pop r12
 1594 03b4 BF90      		pop r11
 1595 03b6 AF90      		pop r10
 1596 03b8 9F90      		pop r9
 1597 03ba 8F90      		pop r8
 1598 03bc 7F90      		pop r7
GAS LISTING /tmp/ccp1AA0E.s 			page 44


 1599 03be 6F90      		pop r6
 1600 03c0 5F90      		pop r5
 1601 03c2 4F90      		pop r4
 1602 03c4 3F90      		pop r3
 1603 03c6 2F90      		pop r2
 1604 03c8 0895      		ret
 1605               		.size	_ZN5tft_t9rectangleEjjjjj, .-_ZN5tft_t9rectangleEjjjjj
 1606               		.stabs	"yt:r(0,31)",64,0,100,20
 1607               		.stabs	"bMask:r(0,31)",64,0,100,24
 1608               		.stabn	192,0,0,.LBB548-.LFBB14
 1609               		.stabs	"xx:r(0,31)",64,0,152,10
 1610               		.stabn	192,0,0,.LBB562-.LFBB14
 1611               		.stabn	224,0,0,.LBE562-.LFBB14
 1612               		.stabn	224,0,0,.LBE548-.LFBB14
 1613               	.Lscope14:
 1614               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 1615               		.stabd	78,0,0
 1616               		.stabs	"_ZN5tft_t4lineEjjjjj:F(0,4)",36,0,52,_ZN5tft_t4lineEjjjjj
 1617               		.stabs	"this:P(0,111)",64,0,53,24
 1618               		.stabs	"x0:P(0,31)",64,0,52,10
 1619               		.stabs	"y0:P(0,31)",64,0,52,12
 1620               		.stabs	"x1:P(0,31)",64,0,52,28
 1621               		.stabs	"y1:P(0,31)",64,0,52,16
 1622               		.stabs	"c:P(0,31)",64,0,53,14
 1623               	.global	_ZN5tft_t4lineEjjjjj
 1624               		.type	_ZN5tft_t4lineEjjjjj, @function
 1625               	_ZN5tft_t4lineEjjjjj:
 1626               		.stabd	46,0,0
  54:tft.cpp       **** {
 1627               		.stabn	68,0,54,.LM168-.LFBB15
 1628               	.LM168:
 1629               	.LFBB15:
 1630 03ca 4F92      		push r4
 1631 03cc 5F92      		push r5
 1632 03ce 6F92      		push r6
 1633 03d0 7F92      		push r7
 1634 03d2 8F92      		push r8
 1635 03d4 9F92      		push r9
 1636 03d6 AF92      		push r10
 1637 03d8 BF92      		push r11
 1638 03da CF92      		push r12
 1639 03dc DF92      		push r13
 1640 03de EF92      		push r14
 1641 03e0 FF92      		push r15
 1642 03e2 0F93      		push r16
 1643 03e4 1F93      		push r17
 1644 03e6 CF93      		push r28
 1645 03e8 DF93      		push r29
 1646               	/* prologue: function */
 1647               	/* frame size = 0 */
 1648               	/* stack size = 16 */
 1649               	.L__stack_usage = 16
 1650 03ea 5B01      		movw r10,r22
 1651 03ec 6A01      		movw r12,r20
 1652 03ee E901      		movw r28,r18
 1653               	.LBB574:
 1654               	.LBB575:
GAS LISTING /tmp/ccp1AA0E.s 			page 45


 1655               	.LBB576:
 1656               	.LBB577:
 1657               		.stabn	68,0,377,.LM169-.LFBB15
 1658               	.LM169:
 1659 03f0 FC01      		movw r30,r24
 1660 03f2 2085      		ldd r18,Z+8
 1661 03f4 3185      		ldd r19,Z+9
 1662               	.LBE577:
 1663               	.LBE576:
 1664               	.LBE575:
  55:tft.cpp       **** 	if (x0 > width())
 1665               		.stabn	68,0,55,.LM170-.LFBB15
 1666               	.LM170:
 1667 03f6 2617      		cp r18,r22
 1668 03f8 3707      		cpc r19,r23
 1669 03fa 00F4      		brsh .L90
  56:tft.cpp       **** 		x0 = width() - 1;
 1670               		.stabn	68,0,56,.LM171-.LFBB15
 1671               	.LM171:
 1672 03fc 5901      		movw r10,r18
 1673 03fe F1E0      		ldi r31,1
 1674 0400 AF1A      		sub r10,r31
 1675 0402 B108      		sbc r11,__zero_reg__
 1676               	.L90:
  57:tft.cpp       **** 	if (x1 > width())
 1677               		.stabn	68,0,57,.LM172-.LFBB15
 1678               	.LM172:
 1679 0404 2C17      		cp r18,r28
 1680 0406 3D07      		cpc r19,r29
 1681 0408 00F4      		brsh .L91
  58:tft.cpp       **** 		x1 = width() - 1;
 1682               		.stabn	68,0,58,.LM173-.LFBB15
 1683               	.LM173:
 1684 040a E901      		movw r28,r18
 1685 040c 2197      		sbiw r28,1
 1686               	.L91:
 1687               		.stabn	68,0,377,.LM174-.LFBB15
 1688               	.LM174:
 1689 040e FC01      		movw r30,r24
 1690 0410 2285      		ldd r18,Z+10
 1691 0412 3385      		ldd r19,Z+11
  59:tft.cpp       **** 	if (y0 > height())
 1692               		.stabn	68,0,59,.LM175-.LFBB15
 1693               	.LM175:
 1694 0414 2C15      		cp r18,r12
 1695 0416 3D05      		cpc r19,r13
 1696 0418 00F4      		brsh .L92
  60:tft.cpp       **** 		y0 = height() - 1;
 1697               		.stabn	68,0,60,.LM176-.LFBB15
 1698               	.LM176:
 1699 041a 6901      		movw r12,r18
 1700 041c F1E0      		ldi r31,1
 1701 041e CF1A      		sub r12,r31
 1702 0420 D108      		sbc r13,__zero_reg__
 1703               	.L92:
  61:tft.cpp       **** 	if (y1 > height())
 1704               		.stabn	68,0,61,.LM177-.LFBB15
GAS LISTING /tmp/ccp1AA0E.s 			page 46


 1705               	.LM177:
 1706 0422 2017      		cp r18,r16
 1707 0424 3107      		cpc r19,r17
 1708 0426 00F4      		brsh .L93
  62:tft.cpp       **** 		y1 = height() - 1;
 1709               		.stabn	68,0,62,.LM178-.LFBB15
 1710               	.LM178:
 1711 0428 8901      		movw r16,r18
 1712 042a 0150      		subi r16,1
 1713 042c 1109      		sbc r17,__zero_reg__
 1714               	.L93:
  63:tft.cpp       **** 	if (x0 == x1) {
 1715               		.stabn	68,0,63,.LM179-.LFBB15
 1716               	.LM179:
 1717 042e AC16      		cp r10,r28
 1718 0430 BD06      		cpc r11,r29
 1719 0432 01F4      		brne .L94
  64:tft.cpp       **** 		if (y0 > y1)
 1720               		.stabn	68,0,64,.LM180-.LFBB15
 1721               	.LM180:
 1722 0434 0C15      		cp r16,r12
 1723 0436 1D05      		cpc r17,r13
 1724 0438 00F4      		brsh .L95
  65:tft.cpp       **** 			SWAP(y0, y1);
 1725               		.stabn	68,0,65,.LM181-.LFBB15
 1726               	.LM181:
 1727 043a C026      		eor r12,r16
 1728 043c D126      		eor r13,r17
 1729 043e 0C25      		eor r16,r12
 1730 0440 1D25      		eor r17,r13
 1731 0442 C026      		eor r12,r16
 1732 0444 D126      		eor r13,r17
 1733               	.L95:
  66:tft.cpp       **** 		rectangle(x0, y0, 1, y1 - y0, c);
 1734               		.stabn	68,0,66,.LM182-.LFBB15
 1735               	.LM182:
 1736 0446 0C19      		sub r16,r12
 1737 0448 1D09      		sbc r17,r13
 1738 044a 21E0      		ldi r18,lo8(1)
 1739 044c 30E0      		ldi r19,0
 1740 044e 00C0      		rjmp .L113
 1741               	.L94:
  69:tft.cpp       **** 	if (y0 == y1) {
 1742               		.stabn	68,0,69,.LM183-.LFBB15
 1743               	.LM183:
 1744 0450 C016      		cp r12,r16
 1745 0452 D106      		cpc r13,r17
 1746 0454 01F4      		brne .L97
  70:tft.cpp       **** 		if (x0 > x1)
 1747               		.stabn	68,0,70,.LM184-.LFBB15
 1748               	.LM184:
 1749 0456 CA15      		cp r28,r10
 1750 0458 DB05      		cpc r29,r11
 1751 045a 00F4      		brsh .L98
  71:tft.cpp       **** 			SWAP(x0, x1);
 1752               		.stabn	68,0,71,.LM185-.LFBB15
 1753               	.LM185:
GAS LISTING /tmp/ccp1AA0E.s 			page 47


 1754 045c AC26      		eor r10,r28
 1755 045e BD26      		eor r11,r29
 1756 0460 CA25      		eor r28,r10
 1757 0462 DB25      		eor r29,r11
 1758 0464 AC26      		eor r10,r28
 1759 0466 BD26      		eor r11,r29
 1760               	.L98:
  72:tft.cpp       **** 		rectangle(x0, y0, x1 - x0, 1, c);
 1761               		.stabn	68,0,72,.LM186-.LFBB15
 1762               	.LM186:
 1763 0468 9E01      		movw r18,r28
 1764 046a 2A19      		sub r18,r10
 1765 046c 3B09      		sbc r19,r11
 1766 046e 01E0      		ldi r16,lo8(1)
 1767 0470 10E0      		ldi r17,0
 1768               	.L113:
 1769 0472 A601      		movw r20,r12
 1770 0474 B501      		movw r22,r10
 1771 0476 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  73:tft.cpp       **** 		return;
 1772               		.stabn	68,0,73,.LM187-.LFBB15
 1773               	.LM187:
 1774 047a 00C0      		rjmp .L89
 1775               	.L97:
  75:tft.cpp       **** 	uint16_t dx = abs(x1 - x0), dy = abs(y1 - y0);
 1776               		.stabn	68,0,75,.LM188-.LFBB15
 1777               	.LM188:
 1778 047c 3E01      		movw r6,r28
 1779 047e 6A18      		sub r6,r10
 1780 0480 7B08      		sbc r7,r11
 1781 0482 77FE      		sbrs r7,7
 1782 0484 00C0      		rjmp .L99
 1783 0486 7194      		neg r7
 1784 0488 6194      		neg r6
 1785 048a 7108      		sbc r7,__zero_reg__
 1786               	.L99:
 1787 048c 4801      		movw r8,r16
 1788 048e 8C18      		sub r8,r12
 1789 0490 9D08      		sbc r9,r13
 1790 0492 97FE      		sbrs r9,7
 1791 0494 00C0      		rjmp .L100
 1792 0496 9194      		neg r9
 1793 0498 8194      		neg r8
 1794 049a 9108      		sbc r9,__zero_reg__
 1795               	.L100:
 1796               	.LBB586:
  76:tft.cpp       **** 	if (dx < dy) {
 1797               		.stabn	68,0,76,.LM189-.LFBB15
 1798               	.LM189:
 1799 049c 6814      		cp r6,r8
 1800 049e 7904      		cpc r7,r9
 1801 04a0 00F4      		brsh .L101
 1802               	.LBB581:
  77:tft.cpp       **** 		if (y0 > y1) {
 1803               		.stabn	68,0,77,.LM190-.LFBB15
 1804               	.LM190:
 1805 04a2 0C15      		cp r16,r12
GAS LISTING /tmp/ccp1AA0E.s 			page 48


 1806 04a4 1D05      		cpc r17,r13
 1807 04a6 00F4      		brsh .L102
  78:tft.cpp       **** 			SWAP(x0, x1);
 1808               		.stabn	68,0,78,.LM191-.LFBB15
 1809               	.LM191:
 1810 04a8 AC26      		eor r10,r28
 1811 04aa BD26      		eor r11,r29
 1812 04ac CA25      		eor r28,r10
 1813 04ae DB25      		eor r29,r11
 1814 04b0 AC26      		eor r10,r28
 1815 04b2 BD26      		eor r11,r29
  79:tft.cpp       **** 			SWAP(y0, y1);
 1816               		.stabn	68,0,79,.LM192-.LFBB15
 1817               	.LM192:
 1818 04b4 C026      		eor r12,r16
 1819 04b6 D126      		eor r13,r17
 1820 04b8 0C25      		eor r16,r12
 1821 04ba 1D25      		eor r17,r13
 1822 04bc C026      		eor r12,r16
 1823 04be D126      		eor r13,r17
 1824               	.L102:
 1825               	.LBB582:
  81:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1826               		.stabn	68,0,81,.LM193-.LFBB15
 1827               	.LM193:
 1828 04c0 412C      		mov r4,__zero_reg__
 1829 04c2 512C      		mov r5,__zero_reg__
 1830 04c4 00C0      		rjmp .L103
 1831               	.L105:
  83:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
 1832               		.stabn	68,0,83,.LM194-.LFBB15
 1833               	.LM194:
 1834 04c6 C201      		movw r24,r4
 1835 04c8 B401      		movw r22,r8
 1836 04ca 0E94 0000 		call __udivmodhi4
 1837 04ce CA15      		cp r28,r10
 1838 04d0 DB05      		cpc r29,r11
 1839 04d2 00F4      		brsh .L111
 1840 04d4 2FEF      		ldi r18,lo8(-1)
 1841 04d6 3FEF      		ldi r19,lo8(-1)
 1842 04d8 00C0      		rjmp .L104
 1843               	.L111:
 1844 04da 21E0      		ldi r18,lo8(1)
 1845 04dc 30E0      		ldi r19,0
 1846               	.L104:
  83:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
 1847               		.stabn	68,0,83,.LM195-.LFBB15
 1848               	.LM195:
 1849 04de 269F      		mul r18,r22
 1850 04e0 C001      		movw r24,r0
 1851 04e2 279F      		mul r18,r23
 1852 04e4 900D      		add r25,r0
 1853 04e6 369F      		mul r19,r22
 1854 04e8 900D      		add r25,r0
 1855 04ea 1124      		clr r1
 1856               	.LBB583:
 1857               	.LBB584:
GAS LISTING /tmp/ccp1AA0E.s 			page 49


 1858               		.stabs	"tft.h",132,0,0,.Ltext46
 1859               	.Ltext46:
 227:tft.h         **** 	area(x, y, 1, 1);
 1860               		.stabn	68,0,227,.LM196-.LFBB15
 1861               	.LM196:
 1862 04ec 21E0      		ldi r18,lo8(1)
 1863 04ee 30E0      		ldi r19,0
 1864 04f0 41E0      		ldi r20,lo8(1)
 1865 04f2 50E0      		ldi r21,0
 1866 04f4 B601      		movw r22,r12
 1867 04f6 8A0D      		add r24,r10
 1868 04f8 9B1D      		adc r25,r11
 1869 04fa 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 228:tft.h         **** 	start();
 1870               		.stabn	68,0,228,.LM197-.LFBB15
 1871               	.LM197:
 1872 04fe 0E94 0000 		call _ZN5tft_t5startEv
 229:tft.h         **** 	write16(c);
 1873               		.stabn	68,0,229,.LM198-.LFBB15
 1874               	.LM198:
 1875 0502 C701      		movw r24,r14
 1876 0504 0E94 0000 		call _ZN5tft_t7write16Ej
 1877               	.LBE584:
 1878               	.LBE583:
 1879               		.stabs	"tft.cpp",132,0,0,.Ltext47
 1880               	.Ltext47:
  81:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1881               		.stabn	68,0,81,.LM199-.LFBB15
 1882               	.LM199:
 1883 0508 4FEF      		ldi r20,-1
 1884 050a C41A      		sub r12,r20
 1885 050c D40A      		sbc r13,r20
 1886 050e 460C      		add r4,r6
 1887 0510 571C      		adc r5,r7
 1888               	.L103:
  81:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1889               		.stabn	68,0,81,.LM200-.LFBB15
 1890               	.LM200:
 1891 0512 0C15      		cp r16,r12
 1892 0514 1D05      		cpc r17,r13
 1893 0516 00F4      		brsh .L105
 1894 0518 00C0      		rjmp .L89
 1895               	.L101:
 1896               	.LBE582:
 1897               	.LBE581:
 1898               	.LBB585:
  85:tft.cpp       **** 		if (x0 > x1) {
 1899               		.stabn	68,0,85,.LM201-.LFBB15
 1900               	.LM201:
 1901 051a CA15      		cp r28,r10
 1902 051c DB05      		cpc r29,r11
 1903 051e 00F4      		brsh .L106
  86:tft.cpp       **** 			SWAP(x0, x1);
 1904               		.stabn	68,0,86,.LM202-.LFBB15
 1905               	.LM202:
 1906 0520 AC26      		eor r10,r28
 1907 0522 BD26      		eor r11,r29
GAS LISTING /tmp/ccp1AA0E.s 			page 50


 1908 0524 CA25      		eor r28,r10
 1909 0526 DB25      		eor r29,r11
 1910 0528 AC26      		eor r10,r28
 1911 052a BD26      		eor r11,r29
  87:tft.cpp       **** 			SWAP(y0, y1);
 1912               		.stabn	68,0,87,.LM203-.LFBB15
 1913               	.LM203:
 1914 052c C026      		eor r12,r16
 1915 052e D126      		eor r13,r17
 1916 0530 0C25      		eor r16,r12
 1917 0532 1D25      		eor r17,r13
 1918 0534 C026      		eor r12,r16
 1919 0536 D126      		eor r13,r17
 1920               	.L106:
 1921               	.LBB580:
  89:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1922               		.stabn	68,0,89,.LM204-.LFBB15
 1923               	.LM204:
 1924 0538 412C      		mov r4,__zero_reg__
 1925 053a 512C      		mov r5,__zero_reg__
 1926 053c 00C0      		rjmp .L107
 1927               	.L109:
  91:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
 1928               		.stabn	68,0,91,.LM205-.LFBB15
 1929               	.LM205:
 1930 053e C201      		movw r24,r4
 1931 0540 B301      		movw r22,r6
 1932 0542 0E94 0000 		call __udivmodhi4
 1933 0546 0C15      		cp r16,r12
 1934 0548 1D05      		cpc r17,r13
 1935 054a 00F4      		brsh .L112
 1936 054c 2FEF      		ldi r18,lo8(-1)
 1937 054e 3FEF      		ldi r19,lo8(-1)
 1938 0550 00C0      		rjmp .L108
 1939               	.L112:
 1940 0552 21E0      		ldi r18,lo8(1)
 1941 0554 30E0      		ldi r19,0
 1942               	.L108:
  91:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
 1943               		.stabn	68,0,91,.LM206-.LFBB15
 1944               	.LM206:
 1945 0556 269F      		mul r18,r22
 1946 0558 C001      		movw r24,r0
 1947 055a 279F      		mul r18,r23
 1948 055c 900D      		add r25,r0
 1949 055e 369F      		mul r19,r22
 1950 0560 900D      		add r25,r0
 1951 0562 1124      		clr r1
 1952 0564 8C0D      		add r24,r12
 1953 0566 9D1D      		adc r25,r13
 1954               	.LBB578:
 1955               	.LBB579:
 1956               		.stabs	"tft.h",132,0,0,.Ltext48
 1957               	.Ltext48:
 227:tft.h         **** 	area(x, y, 1, 1);
 1958               		.stabn	68,0,227,.LM207-.LFBB15
 1959               	.LM207:
GAS LISTING /tmp/ccp1AA0E.s 			page 51


 1960 0568 21E0      		ldi r18,lo8(1)
 1961 056a 30E0      		ldi r19,0
 1962 056c 41E0      		ldi r20,lo8(1)
 1963 056e 50E0      		ldi r21,0
 1964 0570 BC01      		movw r22,r24
 1965 0572 C501      		movw r24,r10
 1966 0574 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 228:tft.h         **** 	start();
 1967               		.stabn	68,0,228,.LM208-.LFBB15
 1968               	.LM208:
 1969 0578 0E94 0000 		call _ZN5tft_t5startEv
 229:tft.h         **** 	write16(c);
 1970               		.stabn	68,0,229,.LM209-.LFBB15
 1971               	.LM209:
 1972 057c C701      		movw r24,r14
 1973 057e 0E94 0000 		call _ZN5tft_t7write16Ej
 1974               	.LBE579:
 1975               	.LBE578:
 1976               		.stabs	"tft.cpp",132,0,0,.Ltext49
 1977               	.Ltext49:
  89:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1978               		.stabn	68,0,89,.LM210-.LFBB15
 1979               	.LM210:
 1980 0582 8FEF      		ldi r24,-1
 1981 0584 A81A      		sub r10,r24
 1982 0586 B80A      		sbc r11,r24
 1983 0588 480C      		add r4,r8
 1984 058a 591C      		adc r5,r9
 1985               	.L107:
  89:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1986               		.stabn	68,0,89,.LM211-.LFBB15
 1987               	.LM211:
 1988 058c CA15      		cp r28,r10
 1989 058e DB05      		cpc r29,r11
 1990 0590 00F4      		brsh .L109
 1991               	.L89:
 1992               	/* epilogue start */
 1993               	.LBE580:
 1994               	.LBE585:
 1995               	.LBE586:
 1996               	.LBE574:
  93:tft.cpp       **** }
 1997               		.stabn	68,0,93,.LM212-.LFBB15
 1998               	.LM212:
 1999 0592 DF91      		pop r29
 2000 0594 CF91      		pop r28
 2001 0596 1F91      		pop r17
 2002 0598 0F91      		pop r16
 2003 059a FF90      		pop r15
 2004 059c EF90      		pop r14
 2005 059e DF90      		pop r13
 2006 05a0 CF90      		pop r12
 2007 05a2 BF90      		pop r11
 2008 05a4 AF90      		pop r10
 2009 05a6 9F90      		pop r9
 2010 05a8 8F90      		pop r8
 2011 05aa 7F90      		pop r7
GAS LISTING /tmp/ccp1AA0E.s 			page 52


 2012 05ac 6F90      		pop r6
 2013 05ae 5F90      		pop r5
 2014 05b0 4F90      		pop r4
 2015 05b2 0895      		ret
 2016               		.size	_ZN5tft_t4lineEjjjjj, .-_ZN5tft_t4lineEjjjjj
 2017               		.stabs	"x:r(0,31)",64,0,89,10
 2018               		.stabn	192,0,0,.LBB577-.LFBB15
 2019               		.stabn	224,0,0,.LBE577-.LFBB15
 2020               		.stabs	"x:r(0,31)",64,0,89,10
 2021               		.stabn	192,0,0,.LBB580-.LFBB15
 2022               		.stabn	224,0,0,.LBE580-.LFBB15
 2023               		.stabs	"y:r(0,31)",64,0,81,12
 2024               		.stabn	192,0,0,.LBB582-.LFBB15
 2025               		.stabn	224,0,0,.LBE582-.LFBB15
 2026               	.Lscope15:
 2027               		.stabs	"",36,0,0,.Lscope15-.LFBB15
 2028               		.stabd	78,0,0
 2029               		.stabs	"_ZN5tft_t5frameEjjjjhj:F(0,4)",36,0,43,_ZN5tft_t5frameEjjjjhj
 2030               		.stabs	"this:p(0,111)",160,0,44,5
 2031               		.stabs	"x:P(0,31)",64,0,43,10
 2032               		.stabs	"y:P(0,31)",64,0,43,8
 2033               		.stabs	"w:p(0,31)",160,0,43,1
 2034               		.stabs	"h:p(0,31)",160,0,43,3
 2035               		.stabs	"s:P(0,29)",64,0,44,14
 2036               		.stabs	"c:P(0,31)",64,0,44,12
 2037               	.global	_ZN5tft_t5frameEjjjjhj
 2038               		.type	_ZN5tft_t5frameEjjjjhj, @function
 2039               	_ZN5tft_t5frameEjjjjhj:
 2040               		.stabd	46,0,0
  45:tft.cpp       **** {
 2041               		.stabn	68,0,45,.LM213-.LFBB16
 2042               	.LM213:
 2043               	.LFBB16:
 2044 05b4 2F92      		push r2
 2045 05b6 3F92      		push r3
 2046 05b8 4F92      		push r4
 2047 05ba 5F92      		push r5
 2048 05bc 6F92      		push r6
 2049 05be 7F92      		push r7
 2050 05c0 8F92      		push r8
 2051 05c2 9F92      		push r9
 2052 05c4 AF92      		push r10
 2053 05c6 BF92      		push r11
 2054 05c8 CF92      		push r12
 2055 05ca DF92      		push r13
 2056 05cc EF92      		push r14
 2057 05ce FF92      		push r15
 2058 05d0 0F93      		push r16
 2059 05d2 1F93      		push r17
 2060 05d4 CF93      		push r28
 2061 05d6 DF93      		push r29
 2062 05d8 00D0      		rcall .
 2063 05da 00D0      		rcall .
 2064 05dc 00D0      		rcall .
 2065 05de CDB7      		in r28,__SP_L__
 2066 05e0 DEB7      		in r29,__SP_H__
 2067               	/* prologue: function */
GAS LISTING /tmp/ccp1AA0E.s 			page 53


 2068               	/* frame size = 6 */
 2069               	/* stack size = 24 */
 2070               	.L__stack_usage = 24
 2071 05e2 9E83      		std Y+6,r25
 2072 05e4 8D83      		std Y+5,r24
 2073 05e6 5B01      		movw r10,r22
 2074 05e8 4A01      		movw r8,r20
 2075 05ea 3A83      		std Y+2,r19
 2076 05ec 2983      		std Y+1,r18
 2077 05ee 1C83      		std Y+4,r17
 2078 05f0 0B83      		std Y+3,r16
  46:tft.cpp       **** 	rectangle(x, y, w - s, s, c);
 2079               		.stabn	68,0,46,.LM214-.LFBB16
 2080               	.LM214:
 2081 05f2 6E2C      		mov r6,r14
 2082 05f4 712C      		mov r7,__zero_reg__
 2083 05f6 1901      		movw r2,r18
 2084 05f8 2618      		sub r2,r6
 2085 05fa 3708      		sbc r3,r7
 2086 05fc 7601      		movw r14,r12
 2087 05fe 8301      		movw r16,r6
 2088 0600 9101      		movw r18,r2
 2089 0602 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  47:tft.cpp       **** 	rectangle(x + w - s, y, s, h - s, c);
 2090               		.stabn	68,0,47,.LM215-.LFBB16
 2091               	.LM215:
 2092 0606 4B80      		ldd r4,Y+3
 2093 0608 5C80      		ldd r5,Y+4
 2094 060a 4618      		sub r4,r6
 2095 060c 5708      		sbc r5,r7
 2096 060e 6981      		ldd r22,Y+1
 2097 0610 7A81      		ldd r23,Y+2
 2098 0612 6A0D      		add r22,r10
 2099 0614 7B1D      		adc r23,r11
 2100 0616 6619      		sub r22,r6
 2101 0618 7709      		sbc r23,r7
 2102 061a 8201      		movw r16,r4
 2103 061c 9301      		movw r18,r6
 2104 061e A401      		movw r20,r8
 2105 0620 8D81      		ldd r24,Y+5
 2106 0622 9E81      		ldd r25,Y+6
 2107 0624 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  48:tft.cpp       **** 	rectangle(x, y + s, s, h - s, c);
 2108               		.stabn	68,0,48,.LM216-.LFBB16
 2109               	.LM216:
 2110 0628 A301      		movw r20,r6
 2111 062a 480D      		add r20,r8
 2112 062c 591D      		adc r21,r9
 2113 062e 9301      		movw r18,r6
 2114 0630 B501      		movw r22,r10
 2115 0632 8D81      		ldd r24,Y+5
 2116 0634 9E81      		ldd r25,Y+6
 2117 0636 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  49:tft.cpp       **** 	rectangle(x + s, y + h - s, w - s, s, c);
 2118               		.stabn	68,0,49,.LM217-.LFBB16
 2119               	.LM217:
 2120 063a 4B81      		ldd r20,Y+3
GAS LISTING /tmp/ccp1AA0E.s 			page 54


 2121 063c 5C81      		ldd r21,Y+4
 2122 063e 480D      		add r20,r8
 2123 0640 591D      		adc r21,r9
 2124 0642 4619      		sub r20,r6
 2125 0644 5709      		sbc r21,r7
 2126 0646 B301      		movw r22,r6
 2127 0648 6A0D      		add r22,r10
 2128 064a 7B1D      		adc r23,r11
 2129 064c 8301      		movw r16,r6
 2130 064e 9101      		movw r18,r2
 2131 0650 8D81      		ldd r24,Y+5
 2132 0652 9E81      		ldd r25,Y+6
 2133 0654 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
 2134               	/* epilogue start */
  50:tft.cpp       **** }
 2135               		.stabn	68,0,50,.LM218-.LFBB16
 2136               	.LM218:
 2137 0658 2696      		adiw r28,6
 2138 065a 0FB6      		in __tmp_reg__,__SREG__
 2139 065c F894      		cli
 2140 065e DEBF      		out __SP_H__,r29
 2141 0660 0FBE      		out __SREG__,__tmp_reg__
 2142 0662 CDBF      		out __SP_L__,r28
 2143 0664 DF91      		pop r29
 2144 0666 CF91      		pop r28
 2145 0668 1F91      		pop r17
 2146 066a 0F91      		pop r16
 2147 066c FF90      		pop r15
 2148 066e EF90      		pop r14
 2149 0670 DF90      		pop r13
 2150 0672 CF90      		pop r12
 2151 0674 BF90      		pop r11
 2152 0676 AF90      		pop r10
 2153 0678 9F90      		pop r9
 2154 067a 8F90      		pop r8
 2155 067c 7F90      		pop r7
 2156 067e 6F90      		pop r6
 2157 0680 5F90      		pop r5
 2158 0682 4F90      		pop r4
 2159 0684 3F90      		pop r3
 2160 0686 2F90      		pop r2
 2161 0688 0895      		ret
 2162               		.size	_ZN5tft_t5frameEjjjjhj, .-_ZN5tft_t5frameEjjjjhj
 2163               	.Lscope16:
 2164               		.stabs	"",36,0,0,.Lscope16-.LFBB16
 2165               		.stabd	78,0,0
 2166               		.stabs	"_ZN5tft_t5putchEc:F(0,4)",36,0,156,_ZN5tft_t5putchEc
 2167               		.stabs	"this:p(0,111)",160,0,156,5
 2168               		.stabs	"ch:p(0,17)",160,0,156,3
 2169               	.global	_ZN5tft_t5putchEc
 2170               		.type	_ZN5tft_t5putchEc, @function
 2171               	_ZN5tft_t5putchEc:
 2172               		.stabd	46,0,0
 157:tft.cpp       **** {
 2173               		.stabn	68,0,157,.LM219-.LFBB17
 2174               	.LM219:
 2175               	.LFBB17:
GAS LISTING /tmp/ccp1AA0E.s 			page 55


 2176 068a 2F92      		push r2
 2177 068c 3F92      		push r3
 2178 068e 4F92      		push r4
 2179 0690 5F92      		push r5
 2180 0692 6F92      		push r6
 2181 0694 7F92      		push r7
 2182 0696 8F92      		push r8
 2183 0698 9F92      		push r9
 2184 069a AF92      		push r10
 2185 069c BF92      		push r11
 2186 069e CF92      		push r12
 2187 06a0 DF92      		push r13
 2188 06a2 EF92      		push r14
 2189 06a4 FF92      		push r15
 2190 06a6 0F93      		push r16
 2191 06a8 1F93      		push r17
 2192 06aa CF93      		push r28
 2193 06ac DF93      		push r29
 2194 06ae 00D0      		rcall .
 2195 06b0 00D0      		rcall .
 2196 06b2 00D0      		rcall .
 2197 06b4 CDB7      		in r28,__SP_L__
 2198 06b6 DEB7      		in r29,__SP_H__
 2199               	/* prologue: function */
 2200               	/* frame size = 6 */
 2201               	/* stack size = 24 */
 2202               	.L__stack_usage = 24
 2203 06b8 9E83      		std Y+6,r25
 2204 06ba 8D83      		std Y+5,r24
 2205 06bc 6B83      		std Y+3,r22
 2206               	.LBB587:
 2207               		.stabn	68,0,377,.LM220-.LFBB17
 2208               	.LM220:
 2209 06be FC01      		movw r30,r24
 2210 06c0 A480      		ldd r10,Z+4
 2211 06c2 B580      		ldd r11,Z+5
 159:tft.cpp       **** 	if ((int16_t)x() >= (int16_t)width() || (int16_t)y() >= (int16_t)height())
 2212               		.stabn	68,0,159,.LM221-.LFBB17
 2213               	.LM221:
 2214 06c4 8085      		ldd r24,Z+8
 2215 06c6 9185      		ldd r25,Z+9
 2216 06c8 A816      		cp r10,r24
 2217 06ca B906      		cpc r11,r25
 2218 06cc 04F0      		brlt .+2
 2219 06ce 00C0      		rjmp .L115
 2220               		.stabn	68,0,377,.LM222-.LFBB17
 2221               	.LM222:
 2222 06d0 8680      		ldd r8,Z+6
 2223 06d2 9780      		ldd r9,Z+7
 159:tft.cpp       **** 	if ((int16_t)x() >= (int16_t)width() || (int16_t)y() >= (int16_t)height())
 2224               		.stabn	68,0,159,.LM223-.LFBB17
 2225               	.LM223:
 2226 06d4 8285      		ldd r24,Z+10
 2227 06d6 9385      		ldd r25,Z+11
 2228 06d8 8816      		cp r8,r24
 2229 06da 9906      		cpc r9,r25
 2230 06dc 04F0      		brlt .+2
GAS LISTING /tmp/ccp1AA0E.s 			page 56


 2231 06de 00C0      		rjmp .L115
 2232 06e0 00C0      		rjmp .L157
 2233               	.L160:
 164:tft.cpp       **** 	uint8_t h = FONT_HEIGHT * zoom(), w = FONT_WIDTH * zoom();
 2234               		.stabn	68,0,164,.LM224-.LFBB17
 2235               	.LM224:
 2236 06e2 732E      		mov r7,r19
 2237 06e4 770C      		lsl r7
 2238 06e6 770C      		lsl r7
 2239 06e8 770C      		lsl r7
 2240 06ea 432E      		mov r4,r19
 2241 06ec 440C      		lsl r4
 2242 06ee 430E      		add r4,r19
 2243 06f0 440C      		lsl r4
 2244               	.LBB588:
 172:tft.cpp       **** 	if (transform()) {
 2245               		.stabn	68,0,172,.LM225-.LFBB17
 2246               	.LM225:
 2247 06f2 ED81      		ldd r30,Y+5
 2248 06f4 FE81      		ldd r31,Y+6
 2249 06f6 8081      		ld r24,Z
 2250 06f8 8823      		tst r24
 2251 06fa 01F4      		brne .+2
 2252 06fc 00C0      		rjmp .L145
 2253               	.LBB589:
 173:tft.cpp       **** 		if (!portrait()) {
 2254               		.stabn	68,0,173,.LM226-.LFBB17
 2255               	.LM226:
 2256 06fe CF01      		movw r24,r30
 2257 0700 0E94 0000 		call _ZNK5tft_t8portraitEv
 2258 0704 8A83      		std Y+2,r24
 2259 0706 8823      		tst r24
 2260 0708 01F0      		breq .L146
 164:tft.cpp       **** 	uint8_t h = FONT_HEIGHT * zoom(), w = FONT_WIDTH * zoom();
 2261               		.stabn	68,0,164,.LM227-.LFBB17
 2262               	.LM227:
 2263 070a 4982      		std Y+1,r4
 169:tft.cpp       **** 	uint8_t yStart = 0, yStop = h;
 2264               		.stabn	68,0,169,.LM228-.LFBB17
 2265               	.LM228:
 2266 070c 272C      		mov r2,r7
 167:tft.cpp       **** 	uint16_t yy = y(), y0 = y();
 2267               		.stabn	68,0,167,.LM229-.LFBB17
 2268               	.LM229:
 2269 070e 8401      		movw r16,r8
 2270 0710 00C0      		rjmp .L119
 2271               	.L146:
 2272               		.stabs	"tft.h",132,0,0,.Ltext50
 2273               	.Ltext50:
 133:tft.h         **** 	a = b;
 2274               		.stabn	68,0,133,.LM230-.LFBB17
 2275               	.LM230:
 2276 0712 7982      		std Y+1,r7
 2277               		.stabs	"tft.cpp",132,0,0,.Ltext51
 2278               	.Ltext51:
 176:tft.cpp       **** 			yStop = xStop;
 2279               		.stabn	68,0,176,.LM231-.LFBB17
GAS LISTING /tmp/ccp1AA0E.s 			page 57


 2280               	.LM231:
 2281 0714 242C      		mov r2,r4
 174:tft.cpp       **** 			yy = xx;
 2282               		.stabn	68,0,174,.LM232-.LFBB17
 2283               	.LM232:
 2284 0716 8501      		movw r16,r10
 2285               	.L119:
 180:tft.cpp       **** 		uint16_t yt = vsTransformBack(yy);
 2286               		.stabn	68,0,180,.LM233-.LFBB17
 2287               	.LM233:
 2288 0718 B801      		movw r22,r16
 2289 071a 8D81      		ldd r24,Y+5
 2290 071c 9E81      		ldd r25,Y+6
 2291 071e 0E94 0000 		call _ZNK5tft_t15vsTransformBackEj
 2292 0722 6C01      		movw r12,r24
 2293               	.LBB590:
 2294               		.stabn	68,0,377,.LM234-.LFBB17
 2295               	.LM234:
 2296 0724 ED81      		ldd r30,Y+5
 2297 0726 FE81      		ldd r31,Y+6
 2298 0728 3288      		ldd r3,Z+18
 2299               	.LBE590:
 181:tft.cpp       **** 		if ((int16_t)yt < (int16_t)topEdge() && \
 2300               		.stabn	68,0,181,.LM235-.LFBB17
 2301               	.LM235:
 2302 072a 832D      		mov r24,r3
 2303 072c 9389      		ldd r25,Z+19
 2304 072e C816      		cp r12,r24
 2305 0730 D906      		cpc r13,r25
 2306 0732 04F0      		brlt .+2
 2307 0734 00C0      		rjmp .L120
 181:tft.cpp       **** 		if ((int16_t)yt < (int16_t)topEdge() && \
 2308               		.stabn	68,0,181,.LM236-.LFBB17
 2309               	.LM236:
 2310 0736 A601      		movw r20,r12
 2311 0738 420D      		add r20,r2
 2312 073a 511D      		adc r21,__zero_reg__
 2313 073c 4817      		cp r20,r24
 2314 073e 5907      		cpc r21,r25
 2315 0740 04F0      		brlt .+2
 2316 0742 00C0      		rjmp .L121
 2317 0744 00C0      		rjmp .L120
 2318               	.L142:
 187:tft.cpp       **** 		} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 2319               		.stabn	68,0,187,.LM237-.LFBB17
 2320               	.LM237:
 2321 0746 A601      		movw r20,r12
 2322 0748 420D      		add r20,r2
 2323 074a 511D      		adc r21,__zero_reg__
 2324 074c 4817      		cp r20,r24
 2325 074e 5907      		cpc r21,r25
 2326 0750 00F0      		brlo .+2
 2327 0752 00C0      		rjmp .L122
 2328               	.L162:
 187:tft.cpp       **** 		} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 2329               		.stabn	68,0,187,.LM238-.LFBB17
 2330               	.LM238:
GAS LISTING /tmp/ccp1AA0E.s 			page 58


 2331 0754 522C      		mov r5,r2
 2332               	.L163:
 2333 0756 7801      		movw r14,r16
 169:tft.cpp       **** 	uint8_t yStart = 0, yStop = h;
 2334               		.stabn	68,0,169,.LM239-.LFBB17
 2335               	.LM239:
 2336 0758 312C      		mov r3,__zero_reg__
 2337               	.L141:
 2338               		.stabn	68,0,377,.LM240-.LFBB17
 2339               	.LM240:
 2340 075a ED81      		ldd r30,Y+5
 2341 075c FE81      		ldd r31,Y+6
 2342 075e 6688      		ldd r6,Z+22
 2343 0760 7788      		ldd r7,Z+23
 190:tft.cpp       **** 		if (yt < topMask()) {
 2344               		.stabn	68,0,190,.LM241-.LFBB17
 2345               	.LM241:
 2346 0762 C614      		cp r12,r6
 2347 0764 D704      		cpc r13,r7
 2348 0766 00F4      		brsh .L123
 191:tft.cpp       **** 			if (yt + yStop - yStart < topMask())
 2349               		.stabn	68,0,191,.LM242-.LFBB17
 2350               	.LM242:
 2351 0768 E32C      		mov r14,r3
 2352 076a F12C      		mov r15,__zero_reg__
 2353 076c C601      		movw r24,r12
 2354 076e 850D      		add r24,r5
 2355 0770 911D      		adc r25,__zero_reg__
 2356 0772 8E19      		sub r24,r14
 2357 0774 9F09      		sbc r25,r15
 2358 0776 8615      		cp r24,r6
 2359 0778 9705      		cpc r25,r7
 2360 077a 00F4      		brsh .+2
 2361 077c 00C0      		rjmp .L115
 193:tft.cpp       **** 			yy = vsTransform(topMask());
 2362               		.stabn	68,0,193,.LM243-.LFBB17
 2363               	.LM243:
 2364 077e B301      		movw r22,r6
 2365 0780 CF01      		movw r24,r30
 2366 0782 0E94 0000 		call _ZNK5tft_t11vsTransformEj
 2367 0786 8C01      		movw r16,r24
 194:tft.cpp       **** 			yStart += topMask() - yt;
 2368               		.stabn	68,0,194,.LM244-.LFBB17
 2369               	.LM244:
 2370 0788 EC18      		sub r14,r12
 2371 078a FD08      		sbc r15,r13
 2372 078c E60C      		add r14,r6
 2373 078e F71C      		adc r15,r7
 2374 0790 3E2C      		mov r3,r14
 195:tft.cpp       **** 			y0 = yy - yStart;
 2375               		.stabn	68,0,195,.LM245-.LFBB17
 2376               	.LM245:
 2377 0792 AC01      		movw r20,r24
 2378 0794 4E19      		sub r20,r14
 2379 0796 5109      		sbc r21,__zero_reg__
 2380 0798 7A01      		movw r14,r20
 2381               	.L123:
GAS LISTING /tmp/ccp1AA0E.s 			page 59


 198:tft.cpp       **** 		uint16_t bMask = vsMaximum() - bottomMask();
 2382               		.stabn	68,0,198,.LM246-.LFBB17
 2383               	.LM246:
 2384 079a 80E4      		ldi r24,lo8(64)
 2385 079c 91E0      		ldi r25,lo8(1)
 2386 079e ED81      		ldd r30,Y+5
 2387 07a0 FE81      		ldd r31,Y+6
 2388 07a2 408D      		ldd r20,Z+24
 2389 07a4 518D      		ldd r21,Z+25
 2390 07a6 841B      		sub r24,r20
 2391 07a8 950B      		sbc r25,r21
 199:tft.cpp       **** 		if (yt >= bMask)
 2392               		.stabn	68,0,199,.LM247-.LFBB17
 2393               	.LM247:
 2394 07aa C816      		cp r12,r24
 2395 07ac D906      		cpc r13,r25
 2396 07ae 00F0      		brlo .+2
 2397 07b0 00C0      		rjmp .L115
 201:tft.cpp       **** 		if (yt + yStop - yStart > bMask)
 2398               		.stabn	68,0,201,.LM248-.LFBB17
 2399               	.LM248:
 2400 07b2 432D      		mov r20,r3
 2401 07b4 50E0      		ldi r21,0
 2402 07b6 B601      		movw r22,r12
 2403 07b8 650D      		add r22,r5
 2404 07ba 711D      		adc r23,__zero_reg__
 2405 07bc 641B      		sub r22,r20
 2406 07be 750B      		sbc r23,r21
 2407 07c0 8617      		cp r24,r22
 2408 07c2 9707      		cpc r25,r23
 2409 07c4 00F4      		brsh .L124
 202:tft.cpp       **** 			yStop -= yt + yStop - yStart - bMask;
 2410               		.stabn	68,0,202,.LM249-.LFBB17
 2411               	.LM249:
 2412 07c6 582E      		mov r5,r24
 2413 07c8 5C18      		sub r5,r12
 2414 07ca 530C      		add r5,r3
 2415               	.L124:
 2416 07cc ED81      		ldd r30,Y+5
 2417 07ce FE81      		ldd r31,Y+6
 2418 07d0 6489      		ldd r22,Z+20
 2419 07d2 7589      		ldd r23,Z+21
 204:tft.cpp       **** 		if (!portrait()) {
 2420               		.stabn	68,0,204,.LM250-.LFBB17
 2421               	.LM250:
 2422 07d4 2A81      		ldd r18,Y+2
 2423 07d6 2111      		cpse r18,__zero_reg__
 2424 07d8 00C0      		rjmp .L125
 2425 07da 00C0      		rjmp .L158
 2426               	.L144:
 2427               	.LBE589:
 2428               	.LBE588:
 244:tft.cpp       **** 	bool xTransform = transform() && !portrait() && x0 < bottomEdge() && x0 + xStop - xStart > bottomE
 2429               		.stabn	68,0,244,.LM251-.LFBB17
 2430               	.LM251:
 2431 07dc E50C      		add r14,r5
 2432 07de F11C      		adc r15,__zero_reg__
GAS LISTING /tmp/ccp1AA0E.s 			page 60


 2433 07e0 E41A      		sub r14,r20
 2434 07e2 F50A      		sbc r15,r21
 2435               	.LBB595:
 2436               	.LBB593:
 2437 07e4 BB24      		clr r11
 2438 07e6 B394      		inc r11
 2439 07e8 8E15      		cp r24,r14
 2440 07ea 9F05      		cpc r25,r15
 2441 07ec 00F4      		brsh .+2
 2442 07ee 00C0      		rjmp .L128
 2443 07f0 00C0      		rjmp .L168
 2444               	.L143:
 2445               	.LBE593:
 2446               	.LBE595:
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2447               		.stabn	68,0,245,.LM252-.LFBB17
 2448               	.LM252:
 2449 07f2 B701      		movw r22,r14
 2450 07f4 650D      		add r22,r5
 2451 07f6 711D      		adc r23,__zero_reg__
 2452 07f8 641B      		sub r22,r20
 2453 07fa 750B      		sbc r23,r21
 2454 07fc 722C      		mov r7,r2
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 2455               		.stabn	68,0,168,.LM253-.LFBB17
 2456               	.LM253:
 2457 07fe 642C      		mov r6,r4
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2458               		.stabn	68,0,245,.LM254-.LFBB17
 2459               	.LM254:
 2460 0800 8617      		cp r24,r22
 2461 0802 9707      		cpc r25,r23
 2462 0804 00F0      		brlo .L147
 2463 0806 00C0      		rjmp .L164
 2464               	.L145:
 2465               	.LBB596:
 164:tft.cpp       **** 	uint8_t h = FONT_HEIGHT * zoom(), w = FONT_WIDTH * zoom();
 2466               		.stabn	68,0,164,.LM255-.LFBB17
 2467               	.LM255:
 2468 0808 4982      		std Y+1,r4
 169:tft.cpp       **** 	uint8_t yStart = 0, yStop = h;
 2469               		.stabn	68,0,169,.LM256-.LFBB17
 2470               	.LM256:
 2471 080a 572C      		mov r5,r7
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 2472               		.stabn	68,0,168,.LM257-.LFBB17
 2473               	.LM257:
 2474 080c 642C      		mov r6,r4
 167:tft.cpp       **** 	uint16_t yy = y(), y0 = y();
 2475               		.stabn	68,0,167,.LM258-.LFBB17
 2476               	.LM258:
 2477 080e 7401      		movw r14,r8
 2478 0810 8401      		movw r16,r8
 166:tft.cpp       **** 	uint16_t xx = x(), x0 = x();
 2479               		.stabn	68,0,166,.LM259-.LFBB17
 2480               	.LM259:
 2481 0812 C501      		movw r24,r10
GAS LISTING /tmp/ccp1AA0E.s 			page 61


 172:tft.cpp       **** 	if (transform()) {
 2482               		.stabn	68,0,172,.LM260-.LFBB17
 2483               	.LM260:
 2484 0814 B12C      		mov r11,__zero_reg__
 169:tft.cpp       **** 	uint8_t yStart = 0, yStop = h;
 2485               		.stabn	68,0,169,.LM261-.LFBB17
 2486               	.LM261:
 2487 0816 312C      		mov r3,__zero_reg__
 2488 0818 00C0      		rjmp .L165
 2489               	.L161:
 2490               	.LBE596:
 2491               	.LBB597:
 2492               	.LBB598:
 2493               		.stabs	"tft.h",132,0,0,.Ltext52
 2494               	.Ltext52:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 2495               		.stabn	68,0,63,.LM262-.LFBB17
 2496               	.LM262:
 2497 081a 20E4      		ldi r18,lo8(64)
 2498 081c 31E0      		ldi r19,lo8(1)
 2499 081e ED81      		ldd r30,Y+5
 2500 0820 FE81      		ldd r31,Y+6
 2501 0822 4489      		ldd r20,Z+20
 2502 0824 5589      		ldd r21,Z+21
 2503 0826 241B      		sub r18,r20
 2504 0828 350B      		sbc r19,r21
 2505               	.LBE598:
 2506               	.LBE597:
 2507               		.stabs	"tft.cpp",132,0,0,.Ltext53
 2508               	.Ltext53:
 246:tft.cpp       **** 	uint8_t xEnd = xTransform ? bottomEdge() - xx : xStop;
 2509               		.stabn	68,0,246,.LM263-.LFBB17
 2510               	.LM263:
 2511 082a 922E      		mov r9,r18
 2512 082c 981A      		sub r9,r24
 2513 082e 00C0      		rjmp .L166
 2514               	.L147:
 166:tft.cpp       **** 	uint16_t xx = x(), x0 = x();
 2515               		.stabn	68,0,166,.LM264-.LFBB17
 2516               	.LM264:
 2517 0830 C501      		movw r24,r10
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 2518               		.stabn	68,0,168,.LM265-.LFBB17
 2519               	.LM265:
 2520 0832 942C      		mov r9,r4
 2521 0834 A12C      		mov r10,__zero_reg__
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2522               		.stabn	68,0,245,.LM266-.LFBB17
 2523               	.LM266:
 2524 0836 2224      		clr r2
 2525 0838 2394      		inc r2
 2526 083a B12C      		mov r11,__zero_reg__
 2527 083c 00C0      		rjmp .L139
 2528               	.L148:
 246:tft.cpp       **** 	uint8_t xEnd = xTransform ? bottomEdge() - xx : xStop;
 2529               		.stabn	68,0,246,.LM267-.LFBB17
 2530               	.LM267:
GAS LISTING /tmp/ccp1AA0E.s 			page 62


 2531 083e 962C      		mov r9,r6
 2532               	.L166:
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2533               		.stabn	68,0,245,.LM268-.LFBB17
 2534               	.LM268:
 2535 0840 212C      		mov r2,__zero_reg__
 2536               	.L129:
 2537               	.L139:
 2538               	.LBB599:
 2539               	.LBB600:
 2540               	.LBB601:
 257:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()])) << (xStart / zoom());
 2541               		.stabn	68,0,257,.LM269-.LFBB17
 2542               	.LM269:
 2543 0842 2B81      		ldd r18,Y+3
 2544 0844 C22E      		mov r12,r18
 2545 0846 D12C      		mov r13,__zero_reg__
 2546 0848 40E2      		ldi r20,32
 2547 084a C41A      		sub r12,r20
 2548 084c D108      		sbc r13,__zero_reg__
 2549 084e 23E0      		ldi r18,3
 2550               		1:
 2551 0850 CC0C      		lsl r12
 2552 0852 DD1C      		rol r13
 2553 0854 2A95      		dec r18
 2554 0856 01F4      		brne 1b
 2555               	.L159:
 2556               	.LBE601:
 2557               	.LBE600:
 2558               	.LBE599:
 248:tft.cpp       **** 	area(xx, yy, xEnd - xStart, h);
 2559               		.stabn	68,0,248,.LM270-.LFBB17
 2560               	.LM270:
 2561 0858 492D      		mov r20,r9
 2562 085a 50E0      		ldi r21,0
 2563 085c 4A19      		sub r20,r10
 2564 085e 5109      		sbc r21,__zero_reg__
 2565 0860 272D      		mov r18,r7
 2566 0862 30E0      		ldi r19,0
 2567 0864 B801      		movw r22,r16
 2568 0866 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 249:tft.cpp       **** 	start();
 2569               		.stabn	68,0,249,.LM271-.LFBB17
 2570               	.LM271:
 2571 086a 0E94 0000 		call _ZN5tft_t5startEv
 2572               	.LBB608:
 250:tft.cpp       **** 	for (uint8_t i = yStart; i < yStop; i++) {
 2573               		.stabn	68,0,250,.LM272-.LFBB17
 2574               	.LM272:
 2575 086e 832C      		mov r8,r3
 2576 0870 00C0      		rjmp .L130
 2577               	.L138:
 2578               	.LBB606:
 251:tft.cpp       **** 		if (yTransform && y0 + i == bottomEdge()) {
 2579               		.stabn	68,0,251,.LM273-.LFBB17
 2580               	.LM273:
 2581 0872 2220      		tst r2
GAS LISTING /tmp/ccp1AA0E.s 			page 63


 2582 0874 01F0      		breq .L131
 251:tft.cpp       **** 		if (yTransform && y0 + i == bottomEdge()) {
 2583               		.stabn	68,0,251,.LM274-.LFBB17
 2584               	.LM274:
 2585 0876 9701      		movw r18,r14
 2586 0878 280D      		add r18,r8
 2587 087a 311D      		adc r19,__zero_reg__
 2588               	.LBB602:
 2589               	.LBB603:
 2590               		.stabs	"tft.h",132,0,0,.Ltext54
 2591               	.Ltext54:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 2592               		.stabn	68,0,63,.LM275-.LFBB17
 2593               	.LM275:
 2594 087c ED81      		ldd r30,Y+5
 2595 087e FE81      		ldd r31,Y+6
 2596 0880 8489      		ldd r24,Z+20
 2597 0882 9589      		ldd r25,Z+21
 2598 0884 40E4      		ldi r20,lo8(64)
 2599 0886 51E0      		ldi r21,lo8(1)
 2600 0888 481B      		sub r20,r24
 2601 088a 590B      		sbc r21,r25
 2602               	.LBE603:
 2603               	.LBE602:
 2604               		.stabs	"tft.cpp",132,0,0,.Ltext55
 2605               	.Ltext55:
 251:tft.cpp       **** 		if (yTransform && y0 + i == bottomEdge()) {
 2606               		.stabn	68,0,251,.LM276-.LFBB17
 2607               	.LM276:
 2608 088c 2417      		cp r18,r20
 2609 088e 3507      		cpc r19,r21
 2610 0890 01F4      		brne .+2
 2611 0892 00C0      		rjmp .L132
 2612               	.L131:
 2613               		.stabn	68,0,377,.LM277-.LFBB17
 2614               	.LM277:
 2615 0894 ED81      		ldd r30,Y+5
 2616 0896 FE81      		ldd r31,Y+6
 2617 0898 3181      		ldd r19,Z+1
 2618               	.LBB604:
 257:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()])) << (xStart / zoom());
 2619               		.stabn	68,0,257,.LM278-.LFBB17
 2620               	.LM278:
 2621 089a 882D      		mov r24,r8
 2622 089c 632F      		mov r22,r19
 2623 089e 0E94 0000 		call __udivmodqi4
 2624 08a2 F601      		movw r30,r12
 2625 08a4 E80F      		add r30,r24
 2626 08a6 F11D      		adc r31,__zero_reg__
 2627 08a8 E050      		subi r30,lo8(-(ascii))
 2628 08aa F040      		sbci r31,hi8(-(ascii))
 2629               	/* #APP */
 2630               	 ;  257 "tft.cpp" 1
 2631 08ac 2491      		lpm r18, Z
 2632               		
 2633               	 ;  0 "" 2
 2634               	/* #NOAPP */
GAS LISTING /tmp/ccp1AA0E.s 			page 64


 2635               	.LBE604:
 2636 08ae 8A2D      		mov r24,r10
 2637 08b0 0E94 0000 		call __udivmodqi4
 2638 08b4 00C0      		rjmp 2f
 2639               		1:
 2640 08b6 220F      		lsl r18
 2641               		2:
 2642 08b8 8A95      		dec r24
 2643 08ba 02F4      		brpl 1b
 2644               	.LBB605:
 258:tft.cpp       **** 		for (uint8_t j = xStart; j < xEnd; j++) {
 2645               		.stabn	68,0,258,.LM279-.LFBB17
 2646               	.LM279:
 2647 08bc 4A2C      		mov r4,r10
 2648 08be 00C0      		rjmp .L133
 2649               	.L137:
 260:tft.cpp       **** 				write16(foreground());
 2650               		.stabn	68,0,260,.LM280-.LFBB17
 2651               	.LM280:
 2652 08c0 ED81      		ldd r30,Y+5
 2653 08c2 FE81      		ldd r31,Y+6
 259:tft.cpp       **** 			if (c & 0x80)
 2654               		.stabn	68,0,259,.LM281-.LFBB17
 2655               	.LM281:
 2656 08c4 27FF      		sbrs r18,7
 2657 08c6 00C0      		rjmp .L134
 260:tft.cpp       **** 				write16(foreground());
 2658               		.stabn	68,0,260,.LM282-.LFBB17
 2659               	.LM282:
 2660 08c8 8485      		ldd r24,Z+12
 2661 08ca 9585      		ldd r25,Z+13
 2662 08cc 00C0      		rjmp .L167
 2663               	.L134:
 262:tft.cpp       **** 				write16(background());
 2664               		.stabn	68,0,262,.LM283-.LFBB17
 2665               	.LM283:
 2666 08ce 8685      		ldd r24,Z+14
 2667 08d0 9785      		ldd r25,Z+15
 2668               	.L167:
 2669 08d2 2C83      		std Y+4,r18
 2670 08d4 0E94 0000 		call _ZN5tft_t7write16Ej
 2671 08d8 2C81      		ldd r18,Y+4
 2672               		.stabn	68,0,377,.LM284-.LFBB17
 2673               	.LM284:
 2674 08da ED81      		ldd r30,Y+5
 2675 08dc FE81      		ldd r31,Y+6
 2676 08de 4181      		ldd r20,Z+1
 263:tft.cpp       **** 			if (j % zoom() == zoom() - 1)
 2677               		.stabn	68,0,263,.LM285-.LFBB17
 2678               	.LM285:
 2679 08e0 842D      		mov r24,r4
 2680 08e2 642F      		mov r22,r20
 2681 08e4 0E94 0000 		call __udivmodqi4
 2682 08e8 892F      		mov r24,r25
 2683 08ea 90E0      		ldi r25,0
 2684 08ec 642F      		mov r22,r20
 2685 08ee 70E0      		ldi r23,0
GAS LISTING /tmp/ccp1AA0E.s 			page 65


 2686 08f0 6150      		subi r22,1
 2687 08f2 7109      		sbc r23,__zero_reg__
 2688 08f4 8617      		cp r24,r22
 2689 08f6 9707      		cpc r25,r23
 2690 08f8 01F4      		brne .L136
 264:tft.cpp       **** 				c <<= 1;
 2691               		.stabn	68,0,264,.LM286-.LFBB17
 2692               	.LM286:
 2693 08fa 220F      		lsl r18
 2694               	.L136:
 258:tft.cpp       **** 		for (uint8_t j = xStart; j < xEnd; j++) {
 2695               		.stabn	68,0,258,.LM287-.LFBB17
 2696               	.LM287:
 2697 08fc 4394      		inc r4
 2698               	.L133:
 258:tft.cpp       **** 		for (uint8_t j = xStart; j < xEnd; j++) {
 2699               		.stabn	68,0,258,.LM288-.LFBB17
 2700               	.LM288:
 2701 08fe 4914      		cp r4,r9
 2702 0900 00F0      		brlo .L137
 2703               	.LBE605:
 2704               	.LBE606:
 250:tft.cpp       **** 	for (uint8_t i = yStart; i < yStop; i++) {
 2705               		.stabn	68,0,250,.LM289-.LFBB17
 2706               	.LM289:
 2707 0902 8394      		inc r8
 2708               	.L130:
 250:tft.cpp       **** 	for (uint8_t i = yStart; i < yStop; i++) {
 2709               		.stabn	68,0,250,.LM290-.LFBB17
 2710               	.LM290:
 2711 0904 8514      		cp r8,r5
 2712 0906 00F4      		brsh .+2
 2713 0908 00C0      		rjmp .L138
 2714               	.LBE608:
 267:tft.cpp       **** 	if (xTransform) {
 2715               		.stabn	68,0,267,.LM291-.LFBB17
 2716               	.LM291:
 2717 090a BB20      		tst r11
 2718 090c 01F4      		brne .+2
 2719 090e 00C0      		rjmp .L115
 2720               	.LBB609:
 2721               		.stabn	68,0,377,.LM292-.LFBB17
 2722               	.LM292:
 2723 0910 ED81      		ldd r30,Y+5
 2724 0912 FE81      		ldd r31,Y+6
 2725 0914 8289      		ldd r24,Z+18
 2726 0916 9389      		ldd r25,Z+19
 269:tft.cpp       **** 		xStart = xEnd;
 2727               		.stabn	68,0,269,.LM293-.LFBB17
 2728               	.LM293:
 2729 0918 A92C      		mov r10,r9
 271:tft.cpp       **** 		xTransform = false;
 2730               		.stabn	68,0,271,.LM294-.LFBB17
 2731               	.LM294:
 2732 091a B12C      		mov r11,__zero_reg__
 2733 091c 962C      		mov r9,r6
 2734               	.LBE609:
GAS LISTING /tmp/ccp1AA0E.s 			page 66


 272:tft.cpp       **** 		goto draw;
 2735               		.stabn	68,0,272,.LM295-.LFBB17
 2736               	.LM295:
 2737 091e 00C0      		rjmp .L159
 2738               	.L157:
 2739               		.stabn	68,0,377,.LM296-.LFBB17
 2740               	.LM296:
 2741 0920 ED81      		ldd r30,Y+5
 2742 0922 FE81      		ldd r31,Y+6
 2743 0924 3181      		ldd r19,Z+1
 162:tft.cpp       **** 	if ((int16_t)(x() + FONT_WIDTH * zoom()) < 0)
 2744               		.stabn	68,0,162,.LM297-.LFBB17
 2745               	.LM297:
 2746 0926 C501      		movw r24,r10
 2747 0928 F6E0      		ldi r31,lo8(6)
 2748 092a 3F9F      		mul r19,r31
 2749 092c 800D      		add r24,r0
 2750 092e 911D      		adc r25,r1
 2751 0930 1124      		clr __zero_reg__
 2752 0932 97FF      		sbrs r25,7
 2753 0934 00C0      		rjmp .L160
 2754 0936 00C0      		rjmp .L115
 2755               	.L121:
 2756               	.LBB610:
 2757               	.LBB594:
 183:tft.cpp       **** 			yStart = topEdge() - yt;
 2758               		.stabn	68,0,183,.LM298-.LFBB17
 2759               	.LM298:
 2760 0938 3C18      		sub r3,r12
 2761               		.stabn	68,0,377,.LM299-.LFBB17
 2762               	.LM299:
 2763 093a ED81      		ldd r30,Y+5
 2764 093c FE81      		ldd r31,Y+6
 2765 093e 0089      		ldd r16,Z+16
 2766 0940 1189      		ldd r17,Z+17
 185:tft.cpp       **** 			y0 = yy - yStart;
 2767               		.stabn	68,0,185,.LM300-.LFBB17
 2768               	.LM300:
 2769 0942 7801      		movw r14,r16
 2770 0944 E318      		sub r14,r3
 2771 0946 F108      		sbc r15,__zero_reg__
 186:tft.cpp       **** 			yt = vsTransformBack(yy);
 2772               		.stabn	68,0,186,.LM301-.LFBB17
 2773               	.LM301:
 2774 0948 B801      		movw r22,r16
 2775 094a CF01      		movw r24,r30
 2776 094c 0E94 0000 		call _ZNK5tft_t15vsTransformBackEj
 2777 0950 6C01      		movw r12,r24
 2778 0952 522C      		mov r5,r2
 2779 0954 00C0      		rjmp .L141
 2780               	.L120:
 2781               	.LBB591:
 2782               	.LBB592:
 2783               		.stabs	"tft.h",132,0,0,.Ltext56
 2784               	.Ltext56:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 2785               		.stabn	68,0,63,.LM302-.LFBB17
GAS LISTING /tmp/ccp1AA0E.s 			page 67


 2786               	.LM302:
 2787 0956 80E4      		ldi r24,lo8(64)
 2788 0958 91E0      		ldi r25,lo8(1)
 2789 095a ED81      		ldd r30,Y+5
 2790 095c FE81      		ldd r31,Y+6
 2791 095e 4489      		ldd r20,Z+20
 2792 0960 5589      		ldd r21,Z+21
 2793 0962 841B      		sub r24,r20
 2794 0964 950B      		sbc r25,r21
 2795               	.LBE592:
 2796               	.LBE591:
 2797               		.stabs	"tft.cpp",132,0,0,.Ltext57
 2798               	.Ltext57:
 187:tft.cpp       **** 		} else if (yt < bottomEdge() && yt + h >= bottomEdge())	// Bottom edge clipping
 2799               		.stabn	68,0,187,.LM303-.LFBB17
 2800               	.LM303:
 2801 0966 C816      		cp r12,r24
 2802 0968 D906      		cpc r13,r25
 2803 096a 00F4      		brsh .+2
 2804 096c 00C0      		rjmp .L142
 2805 096e 00C0      		rjmp .L162
 2806               	.L122:
 188:tft.cpp       **** 			yStop = bottomEdge() - yt;
 2807               		.stabn	68,0,188,.LM304-.LFBB17
 2808               	.LM304:
 2809 0970 582E      		mov r5,r24
 2810 0972 5C18      		sub r5,r12
 2811 0974 00C0      		rjmp .L163
 2812               	.L132:
 2813               	.LBE594:
 2814               	.LBE610:
 2815               	.LBB611:
 2816               	.LBB607:
 252:tft.cpp       **** 			area(x(), topEdge(), w, h);
 2817               		.stabn	68,0,252,.LM305-.LFBB17
 2818               	.LM305:
 2819 0976 ED81      		ldd r30,Y+5
 2820 0978 FE81      		ldd r31,Y+6
 2821 097a 6289      		ldd r22,Z+18
 2822 097c 7389      		ldd r23,Z+19
 2823 097e 272D      		mov r18,r7
 2824 0980 30E0      		ldi r19,0
 2825 0982 4981      		ldd r20,Y+1
 2826 0984 50E0      		ldi r21,0
 2827 0986 8481      		ldd r24,Z+4
 2828 0988 9581      		ldd r25,Z+5
 2829 098a 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.27
 253:tft.cpp       **** 			start();
 2830               		.stabn	68,0,253,.LM306-.LFBB17
 2831               	.LM306:
 2832 098e 0E94 0000 		call _ZN5tft_t5startEv
 254:tft.cpp       **** 			yTransform = false;
 2833               		.stabn	68,0,254,.LM307-.LFBB17
 2834               	.LM307:
 2835 0992 212C      		mov r2,__zero_reg__
 2836 0994 00C0      		rjmp .L131
 2837               	.L125:
GAS LISTING /tmp/ccp1AA0E.s 			page 68


 2838               	.LBE607:
 2839               	.LBE611:
 2840               	.LBB612:
 2841               	.LBB613:
 2842               		.stabs	"tft.h",132,0,0,.Ltext58
 2843               	.Ltext58:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 2844               		.stabn	68,0,63,.LM308-.LFBB17
 2845               	.LM308:
 2846 0996 80E4      		ldi r24,lo8(64)
 2847 0998 91E0      		ldi r25,lo8(1)
 2848 099a 861B      		sub r24,r22
 2849 099c 970B      		sbc r25,r23
 2850               	.LBE613:
 2851               	.LBE612:
 2852               		.stabs	"tft.cpp",132,0,0,.Ltext59
 2853               	.Ltext59:
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2854               		.stabn	68,0,245,.LM309-.LFBB17
 2855               	.LM309:
 2856 099e E816      		cp r14,r24
 2857 09a0 F906      		cpc r15,r25
 2858 09a2 00F4      		brsh .+2
 2859 09a4 00C0      		rjmp .L143
 2860 09a6 722C      		mov r7,r2
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 2861               		.stabn	68,0,168,.LM310-.LFBB17
 2862               	.LM310:
 2863 09a8 642C      		mov r6,r4
 2864               	.L164:
 166:tft.cpp       **** 	uint16_t xx = x(), x0 = x();
 2865               		.stabn	68,0,166,.LM311-.LFBB17
 2866               	.LM311:
 2867 09aa C501      		movw r24,r10
 245:tft.cpp       **** 	bool yTransform = transform() && portrait() && y0 < bottomEdge() && y0 + yStop - yStart > bottomEd
 2868               		.stabn	68,0,245,.LM312-.LFBB17
 2869               	.LM312:
 2870 09ac B12C      		mov r11,__zero_reg__
 2871               	.L165:
 168:tft.cpp       **** 	uint8_t xStart = 0, xStop = w;
 2872               		.stabn	68,0,168,.LM313-.LFBB17
 2873               	.LM313:
 2874 09ae A12C      		mov r10,__zero_reg__
 2875 09b0 00C0      		rjmp .L148
 2876               	.L128:
 2877               	.LBB614:
 2878               		.stabs	"tft.h",132,0,0,.Ltext60
 2879               	.Ltext60:
 134:tft.h         **** 	b = tmp;
 2880               		.stabn	68,0,134,.LM314-.LFBB17
 2881               	.LM314:
 2882 09b2 7980      		ldd r7,Y+1
 2883               		.stabs	"tft.cpp",132,0,0,.Ltext61
 2884               	.Ltext61:
 209:tft.cpp       **** 			xStop = yStop;
 2885               		.stabn	68,0,209,.LM315-.LFBB17
 2886               	.LM315:
GAS LISTING /tmp/ccp1AA0E.s 			page 69


 2887 09b4 652C      		mov r6,r5
 213:tft.cpp       **** 			yStop = h;
 2888               		.stabn	68,0,213,.LM316-.LFBB17
 2889               	.LM316:
 2890 09b6 572C      		mov r5,r7
 2891               		.stabs	"tft.h",132,0,0,.Ltext62
 2892               	.Ltext62:
 133:tft.h         **** 	a = b;
 2893               		.stabn	68,0,133,.LM317-.LFBB17
 2894               	.LM317:
 2895 09b8 2982      		std Y+1,r2
 2896               		.stabs	"tft.cpp",132,0,0,.Ltext63
 2897               	.Ltext63:
 208:tft.cpp       **** 			xStart = yStart;
 2898               		.stabn	68,0,208,.LM318-.LFBB17
 2899               	.LM318:
 2900 09ba A32C      		mov r10,r3
 211:tft.cpp       **** 			y0 = y();
 2901               		.stabn	68,0,211,.LM319-.LFBB17
 2902               	.LM319:
 2903 09bc 7401      		movw r14,r8
 206:tft.cpp       **** 			xx = yy;
 2904               		.stabn	68,0,206,.LM320-.LFBB17
 2905               	.LM320:
 2906 09be C801      		movw r24,r16
 210:tft.cpp       **** 			yy = y();
 2907               		.stabn	68,0,210,.LM321-.LFBB17
 2908               	.LM321:
 2909 09c0 8401      		movw r16,r8
 212:tft.cpp       **** 			yStart = 0;
 2910               		.stabn	68,0,212,.LM322-.LFBB17
 2911               	.LM322:
 2912 09c2 312C      		mov r3,__zero_reg__
 2913               	.LBE614:
 246:tft.cpp       **** 	uint8_t xEnd = xTransform ? bottomEdge() - xx : xStop;
 2914               		.stabn	68,0,246,.LM323-.LFBB17
 2915               	.LM323:
 2916 09c4 B110      		cpse r11,__zero_reg__
 2917 09c6 00C0      		rjmp .L161
 2918 09c8 00C0      		rjmp .L148
 2919               	.L158:
 2920               	.LBB615:
 2921               	.LBB616:
 2922               		.stabs	"tft.h",132,0,0,.Ltext64
 2923               	.Ltext64:
  63:tft.h         **** 	inline uint16_t bottomEdge(void) const {return vsMaximum() - bottomFixedArea();}
 2924               		.stabn	68,0,63,.LM324-.LFBB17
 2925               	.LM324:
 2926 09ca 80E4      		ldi r24,lo8(64)
 2927 09cc 91E0      		ldi r25,lo8(1)
 2928 09ce 861B      		sub r24,r22
 2929 09d0 970B      		sbc r25,r23
 2930               	.LBE616:
 2931               	.LBE615:
 2932               		.stabs	"tft.cpp",132,0,0,.Ltext65
 2933               	.Ltext65:
 244:tft.cpp       **** 	bool xTransform = transform() && !portrait() && x0 < bottomEdge() && x0 + xStop - xStart > bottomE
GAS LISTING /tmp/ccp1AA0E.s 			page 70


 2934               		.stabn	68,0,244,.LM325-.LFBB17
 2935               	.LM325:
 2936 09d2 E816      		cp r14,r24
 2937 09d4 F906      		cpc r15,r25
 2938 09d6 00F4      		brsh .+2
 2939 09d8 00C0      		rjmp .L144
 2940               	.L168:
 2941 09da B12C      		mov r11,__zero_reg__
 2942 09dc 00C0      		rjmp .L128
 2943               	.L115:
 2944               	/* epilogue start */
 2945               	.LBE587:
 274:tft.cpp       **** }
 2946               		.stabn	68,0,274,.LM326-.LFBB17
 2947               	.LM326:
 2948 09de 2696      		adiw r28,6
 2949 09e0 0FB6      		in __tmp_reg__,__SREG__
 2950 09e2 F894      		cli
 2951 09e4 DEBF      		out __SP_H__,r29
 2952 09e6 0FBE      		out __SREG__,__tmp_reg__
 2953 09e8 CDBF      		out __SP_L__,r28
 2954 09ea DF91      		pop r29
 2955 09ec CF91      		pop r28
 2956 09ee 1F91      		pop r17
 2957 09f0 0F91      		pop r16
 2958 09f2 FF90      		pop r15
 2959 09f4 EF90      		pop r14
 2960 09f6 DF90      		pop r13
 2961 09f8 CF90      		pop r12
 2962 09fa BF90      		pop r11
 2963 09fc AF90      		pop r10
 2964 09fe 9F90      		pop r9
 2965 0a00 8F90      		pop r8
 2966 0a02 7F90      		pop r7
 2967 0a04 6F90      		pop r6
 2968 0a06 5F90      		pop r5
 2969 0a08 4F90      		pop r4
 2970 0a0a 3F90      		pop r3
 2971 0a0c 2F90      		pop r2
 2972 0a0e 0895      		ret
 2973               		.size	_ZN5tft_t5putchEc, .-_ZN5tft_t5putchEc
 2974               		.stabs	"h:r(0,29)",64,0,164,7
 2975               		.stabs	"y0:r(0,31)",64,0,167,14
 2976               		.stabs	"xStart:r(0,29)",64,0,168,10
 2977               		.stabs	"xStop:r(0,29)",64,0,168,6
 2978               		.stabs	"yStart:r(0,29)",64,0,169,3
 2979               		.stabs	"xTransform:r(0,24)",64,0,244,11
 2980               		.stabs	"yTransform:r(0,24)",64,0,245,2
 2981               		.stabs	"xEnd:r(0,29)",64,0,246,9
 2982               		.stabn	192,0,0,.LBB587-.LFBB17
 2983               		.stabs	"yt:r(0,31)",64,0,180,12
 2984               		.stabs	"bMask:r(0,31)",64,0,198,24
 2985               		.stabn	192,0,0,.LBB589-.LFBB17
 2986               		.stabn	224,0,0,.LBE589-.LFBB17
 2987               		.stabs	"yt:r(0,31)",64,0,180,12
 2988               		.stabs	"bMask:r(0,31)",64,0,198,24
 2989               		.stabn	192,0,0,.LBB593-.LFBB17
GAS LISTING /tmp/ccp1AA0E.s 			page 71


 2990               		.stabn	224,0,0,.LBE593-.LFBB17
 2991               		.stabs	"yt:r(0,31)",64,0,180,12
 2992               		.stabs	"bMask:r(0,31)",64,0,198,24
 2993               		.stabn	192,0,0,.LBB594-.LFBB17
 2994               		.stabn	224,0,0,.LBE594-.LFBB17
 2995               		.stabs	"i:r(0,29)",64,0,250,8
 2996               		.stabn	192,0,0,.LBB599-.LFBB17
 2997               		.stabs	"c:r(0,13)",64,0,256,18
 2998               		.stabn	192,0,0,.LBB600-.LFBB17
 2999               		.stabs	"j:r(0,29)",64,0,258,4
 3000               		.stabn	192,0,0,.LBB605-.LFBB17
 3001               		.stabn	224,0,0,.LBE605-.LFBB17
 3002               		.stabn	224,0,0,.LBE600-.LFBB17
 3003               		.stabs	"c:r(0,13)",64,0,256,18
 3004               		.stabn	192,0,0,.LBB606-.LFBB17
 3005               		.stabn	224,0,0,.LBE606-.LFBB17
 3006               		.stabs	"c:r(0,13)",64,0,256,18
 3007               		.stabn	192,0,0,.LBB607-.LFBB17
 3008               		.stabn	224,0,0,.LBE607-.LFBB17
 3009               		.stabn	224,0,0,.LBE599-.LFBB17
 3010               		.stabs	"i:r(0,29)",64,0,250,8
 3011               		.stabn	192,0,0,.LBB608-.LFBB17
 3012               		.stabn	224,0,0,.LBE608-.LFBB17
 3013               		.stabs	"i:r(0,29)",64,0,250,8
 3014               		.stabn	192,0,0,.LBB611-.LFBB17
 3015               		.stabn	224,0,0,.LBE611-.LFBB17
 3016               		.stabn	224,0,0,.LBE587-.LFBB17
 3017               	.Lscope17:
 3018               		.stabs	"",36,0,0,.Lscope17-.LFBB17
 3019               		.stabd	78,0,0
 3020               		.section	.text._ZN5tft_tlsEc,"axG",@progbits,_ZN5tft_tlsEc,comdat
 3021               		.stabs	"_ZN5tft_tlsEc:F(0,112)=&(0,82)",36,0,187,_ZN5tft_tlsEc
 3022               		.stabs	"this:P(0,111)",64,0,187,28
 3023               		.stabs	"c:P(0,90)",64,0,187,22
 3024               		.weak	_ZN5tft_tlsEc
 3025               		.type	_ZN5tft_tlsEc, @function
 3026               	_ZN5tft_tlsEc:
 3027               		.stabd	46,0,0
 3028               		.stabs	"tft.h",132,0,0,.Ltext66
 3029               	.Ltext66:
 188:tft.h         **** {
 3030               		.stabn	68,0,188,.LM327-.LFBB18
 3031               	.LM327:
 3032               	.LFBB18:
 3033 0000 CF93      		push r28
 3034 0002 DF93      		push r29
 3035               	/* prologue: function */
 3036               	/* frame size = 0 */
 3037               	/* stack size = 2 */
 3038               	.L__stack_usage = 2
 3039 0004 EC01      		movw r28,r24
 189:tft.h         **** 	switch (c) {
 3040               		.stabn	68,0,189,.LM328-.LFBB18
 3041               	.LM328:
 3042 0006 6930      		cpi r22,lo8(9)
 3043 0008 01F0      		breq .L171
 3044 000a 6A30      		cpi r22,lo8(10)
GAS LISTING /tmp/ccp1AA0E.s 			page 72


 3045 000c 01F4      		brne .L182
 191:tft.h         **** 		newline();
 3046               		.stabn	68,0,191,.LM329-.LFBB18
 3047               	.LM329:
 3048 000e 0E94 0000 		call _ZN5tft_t7newlineEv
 192:tft.h         **** 		break;
 3049               		.stabn	68,0,192,.LM330-.LFBB18
 3050               	.LM330:
 3051 0012 00C0      		rjmp .L173
 3052               	.L171:
 3053               	.LBB639:
 3054               		.stabs	"tft.cpp",132,0,0,.Ltext67
 3055               	.Ltext67:
 3056               		.stabn	68,0,377,.LM331-.LFBB18
 3057               	.LM331:
 3058 0014 2C81      		ldd r18,Y+4
 3059 0016 3D81      		ldd r19,Y+5
 3060 0018 6981      		ldd r22,Y+1
 3061               	.LBB640:
 3062               		.stabs	"tft.h",132,0,0,.Ltext68
 3063               	.Ltext68:
 283:tft.h         **** 
 284:tft.h         **** inline void tft_t::tab(void)
 285:tft.h         **** {
 286:tft.h         **** 	if (x() % (WIDTH * zoom()))
 3064               		.stabn	68,0,286,.LM332-.LFBB18
 3065               	.LM332:
 3066 001a 86E0      		ldi r24,lo8(6)
 3067 001c 689F      		mul r22,r24
 3068 001e B001      		movw r22,r0
 3069 0020 1124      		clr __zero_reg__
 3070 0022 C901      		movw r24,r18
 3071 0024 0E94 0000 		call __udivmodhi4
 3072 0028 0097      		sbiw r24,0
 3073 002a 01F0      		breq .L179
 287:tft.h         **** 		setX(x() - x() % (WIDTH * zoom()));
 3074               		.stabn	68,0,287,.LM333-.LFBB18
 3075               	.LM333:
 3076 002c 281B      		sub r18,r24
 3077 002e 390B      		sbc r19,r25
 3078               	.LBB641:
 3079               	.LBB642:
  27:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 3080               		.stabn	68,0,27,.LM334-.LFBB18
 3081               	.LM334:
 3082 0030 3D83      		std Y+5,r19
 3083 0032 2C83      		std Y+4,r18
 3084               	.L179:
 3085               	.LBE642:
 3086               	.LBE641:
 288:tft.h         **** 	do
 289:tft.h         **** 		next();
 3087               		.stabn	68,0,289,.LM335-.LFBB18
 3088               	.LM335:
 3089 0034 CE01      		movw r24,r28
 3090 0036 0E94 0000 		call _ZN5tft_t4nextEv
 3091               	.LBE640:
GAS LISTING /tmp/ccp1AA0E.s 			page 73


 3092               		.stabs	"tft.cpp",132,0,0,.Ltext69
 3093               	.Ltext69:
 3094               		.stabn	68,0,377,.LM336-.LFBB18
 3095               	.LM336:
 3096 003a 6981      		ldd r22,Y+1
 3097               	.LBB643:
 3098               		.stabs	"tft.h",132,0,0,.Ltext70
 3099               	.Ltext70:
 288:tft.h         **** 	do
 3100               		.stabn	68,0,288,.LM337-.LFBB18
 3101               	.LM337:
 3102 003c 86E0      		ldi r24,lo8(6)
 3103 003e 689F      		mul r22,r24
 3104 0040 B001      		movw r22,r0
 3105 0042 1124      		clr __zero_reg__
 3106 0044 8C81      		ldd r24,Y+4
 3107 0046 9D81      		ldd r25,Y+5
 3108 0048 0E94 0000 		call __udivmodhi4
 3109 004c CB01      		movw r24,r22
 3110 004e 6B81      		ldd r22,Y+3
 3111 0050 70E0      		ldi r23,0
 3112 0052 0E94 0000 		call __udivmodhi4
 3113 0056 892B      		or r24,r25
 3114 0058 01F4      		brne .L179
 3115 005a 00C0      		rjmp .L173
 3116               	.L182:
 3117               	.LBE643:
 3118               	.LBE639:
 197:tft.h         **** 		if ((unsigned)c < ' ' || (unsigned)c > 127)
 3119               		.stabn	68,0,197,.LM338-.LFBB18
 3120               	.LM338:
 3121 005c 862F      		mov r24,r22
 3122 005e 8052      		subi r24,lo8(-(-32))
 3123 0060 8036      		cpi r24,lo8(96)
 3124 0062 00F4      		brsh .L173
 3125               	.LBB644:
 3126               	.LBB645:
 199:tft.h         **** 		putch(c);
 3127               		.stabn	68,0,199,.LM339-.LFBB18
 3128               	.LM339:
 3129 0064 CE01      		movw r24,r28
 3130 0066 0E94 0000 		call _ZN5tft_t5putchEc
 200:tft.h         **** 		next();
 3131               		.stabn	68,0,200,.LM340-.LFBB18
 3132               	.LM340:
 3133 006a CE01      		movw r24,r28
 3134 006c 0E94 0000 		call _ZN5tft_t4nextEv
 3135               	.L173:
 3136               	.LBE645:
 3137               	.LBE644:
 203:tft.h         **** }
 3138               		.stabn	68,0,203,.LM341-.LFBB18
 3139               	.LM341:
 3140 0070 CE01      		movw r24,r28
 3141               	/* epilogue start */
 3142 0072 DF91      		pop r29
 3143 0074 CF91      		pop r28
GAS LISTING /tmp/ccp1AA0E.s 			page 74


 3144 0076 0895      		ret
 3145               		.size	_ZN5tft_tlsEc, .-_ZN5tft_tlsEc
 3146               	.Lscope18:
 3147               		.stabs	"",36,0,0,.Lscope18-.LFBB18
 3148               		.stabd	78,0,0
 3149               		.section	.text._Z8tftputchcP6__file,"axG",@progbits,_Z8tftputchcP6__file,comdat
 3150               		.stabs	"_Z8tftputchcP6__file:F(0,9)",36,0,359,_Z8tftputchcP6__file
 3151               		.stabs	"c:P(0,90)",64,0,359,24
 3152               		.stabs	"stream:P(0,113)=*(0,69)",64,0,359,22
 3153               		.weak	_Z8tftputchcP6__file
 3154               		.type	_Z8tftputchcP6__file, @function
 3155               	_Z8tftputchcP6__file:
 3156               		.stabd	46,0,0
 3157               		.stabs	"tft.cpp",132,0,0,.Ltext71
 3158               	.Ltext71:
 360:tft.cpp       **** {
 3159               		.stabn	68,0,360,.LM342-.LFBB19
 3160               	.LM342:
 3161               	.LFBB19:
 3162               	/* prologue: function */
 3163               	/* frame size = 0 */
 3164               	/* stack size = 0 */
 3165               	.L__stack_usage = 0
 361:tft.cpp       **** 	(*tft) << c;
 3166               		.stabn	68,0,361,.LM343-.LFBB19
 3167               	.LM343:
 3168 0000 682F      		mov r22,r24
 3169 0002 8091 0000 		lds r24,_ZL3tft
 3170 0006 9091 0000 		lds r25,_ZL3tft+1
 3171 000a 0E94 0000 		call _ZN5tft_tlsEc
 363:tft.cpp       **** }
 3172               		.stabn	68,0,363,.LM344-.LFBB19
 3173               	.LM344:
 3174 000e 80E0      		ldi r24,0
 3175 0010 90E0      		ldi r25,0
 3176 0012 0895      		ret
 3177               		.size	_Z8tftputchcP6__file, .-_Z8tftputchcP6__file
 3178               	.Lscope19:
 3179               		.stabs	"",36,0,0,.Lscope19-.LFBB19
 3180               		.stabd	78,0,0
 3181               		.text
 3182               		.stabs	"_ZN5tft_t3bmpEb:F(0,4)",36,0,325,_ZN5tft_t3bmpEb
 3183               		.stabs	"this:P(0,111)",64,0,325,24
 3184               		.stabs	"e:P(0,24)",64,0,325,22
 3185               	.global	_ZN5tft_t3bmpEb
 3186               		.type	_ZN5tft_t3bmpEb, @function
 3187               	_ZN5tft_t3bmpEb:
 3188               		.stabd	46,0,0
 326:tft.cpp       **** {
 3189               		.stabn	68,0,326,.LM345-.LFBB20
 3190               	.LM345:
 3191               	.LFBB20:
 3192               	/* prologue: function */
 3193               	/* frame size = 0 */
 3194               	/* stack size = 0 */
 3195               	.L__stack_usage = 0
 328:tft.cpp       **** 		_setOrient(orient() + BMPLandscape);
GAS LISTING /tmp/ccp1AA0E.s 			page 75


 3196               		.stabn	68,0,328,.LM346-.LFBB20
 3197               	.LM346:
 3198 0a10 FC01      		movw r30,r24
 3199 0a12 8281      		ldd r24,Z+2
 327:tft.cpp       **** 	if (e)
 3200               		.stabn	68,0,327,.LM347-.LFBB20
 3201               	.LM347:
 3202 0a14 6111      		cpse r22,__zero_reg__
 328:tft.cpp       **** 		_setOrient(orient() + BMPLandscape);
 3203               		.stabn	68,0,328,.LM348-.LFBB20
 3204               	.LM348:
 3205 0a16 8C5F      		subi r24,lo8(-(4))
 3206               	.L185:
 330:tft.cpp       **** 		_setOrient(orient());
 3207               		.stabn	68,0,330,.LM349-.LFBB20
 3208               	.LM349:
 3209 0a18 0C94 0000 		jmp _ZN7ili934110_setOrientEh
 3210               		.size	_ZN5tft_t3bmpEb, .-_ZN5tft_t3bmpEb
 3211               	.Lscope20:
 3212               		.stabs	"",36,0,0,.Lscope20-.LFBB20
 3213               		.stabd	78,0,0
 3214               		.stabs	"_ZN5tft_t20setVerticalScrollingEj:F(0,4)",36,0,333,_ZN5tft_t20setVerticalScrollingEj
 3215               		.stabs	"this:P(0,111)",64,0,333,16
 3216               		.stabs	"vsp:P(0,114)=k(0,31)",64,0,333,28
 3217               	.global	_ZN5tft_t20setVerticalScrollingEj
 3218               		.type	_ZN5tft_t20setVerticalScrollingEj, @function
 3219               	_ZN5tft_t20setVerticalScrollingEj:
 3220               		.stabd	46,0,0
 334:tft.cpp       **** {
 3221               		.stabn	68,0,334,.LM350-.LFBB21
 3222               	.LM350:
 3223               	.LFBB21:
 3224 0a1c 0F93      		push r16
 3225 0a1e 1F93      		push r17
 3226 0a20 CF93      		push r28
 3227 0a22 DF93      		push r29
 3228               	/* prologue: function */
 3229               	/* frame size = 0 */
 3230               	/* stack size = 4 */
 3231               	.L__stack_usage = 4
 3232 0a24 8C01      		movw r16,r24
 3233 0a26 EB01      		movw r28,r22
 335:tft.cpp       **** 	cmd(0x37);	// Vertical Scrolling Start Address
 3234               		.stabn	68,0,335,.LM351-.LFBB21
 3235               	.LM351:
 3236 0a28 87E3      		ldi r24,lo8(55)
 3237 0a2a 0E94 0000 		call _ZN7ili93413cmdEh
 3238               	.LBB648:
 3239               		.stabn	68,0,377,.LM352-.LFBB21
 3240               	.LM352:
 3241 0a2e F801      		movw r30,r16
 3242 0a30 8281      		ldd r24,Z+2
 3243               	.LBB649:
 3244               		.stabs	"tft.h",132,0,0,.Ltext72
 3245               	.Ltext72:
  46:tft.h         **** 	inline bool flipped(void) const {return orient() == FlipPortrait || orient() == FlipLandscape;}
 3246               		.stabn	68,0,46,.LM353-.LFBB21
GAS LISTING /tmp/ccp1AA0E.s 			page 76


 3247               	.LM353:
 3248 0a32 8330      		cpi r24,lo8(3)
 3249 0a34 01F0      		breq .L187
 3250 0a36 8230      		cpi r24,lo8(2)
 3251 0a38 01F0      		breq .L187
 3252               		.stabs	"tft.cpp",132,0,0,.Ltext73
 3253               	.Ltext73:
 336:tft.cpp       **** 	write16(flipped() ? vsMaximum() - vsp : vsp);
 3254               		.stabn	68,0,336,.LM354-.LFBB21
 3255               	.LM354:
 3256 0a3a CE01      		movw r24,r28
 3257               	.L188:
 3258               	.LBE649:
 3259               	.LBE648:
 336:tft.cpp       **** 	write16(flipped() ? vsMaximum() - vsp : vsp);
 3260               		.stabn	68,0,336,.LM355-.LFBB21
 3261               	.LM355:
 3262 0a3c 0E94 0000 		call _ZN5tft_t7write16Ej
 337:tft.cpp       **** 	d.vsp = vsp;
 3263               		.stabn	68,0,337,.LM356-.LFBB21
 3264               	.LM356:
 3265 0a40 F801      		movw r30,r16
 3266 0a42 D18B      		std Z+17,r29
 3267 0a44 C08B      		std Z+16,r28
 3268 0a46 00C0      		rjmp .L195
 3269               	.L187:
 336:tft.cpp       **** 	write16(flipped() ? vsMaximum() - vsp : vsp);
 3270               		.stabn	68,0,336,.LM357-.LFBB21
 3271               	.LM357:
 3272 0a48 80E4      		ldi r24,lo8(64)
 3273 0a4a 91E0      		ldi r25,lo8(1)
 3274 0a4c 8C1B      		sub r24,r28
 3275 0a4e 9D0B      		sbc r25,r29
 3276 0a50 00C0      		rjmp .L188
 3277               	.L195:
 3278               	/* epilogue start */
 338:tft.cpp       **** }
 3279               		.stabn	68,0,338,.LM358-.LFBB21
 3280               	.LM358:
 3281 0a52 DF91      		pop r29
 3282 0a54 CF91      		pop r28
 3283 0a56 1F91      		pop r17
 3284 0a58 0F91      		pop r16
 3285 0a5a 0895      		ret
 3286               		.size	_ZN5tft_t20setVerticalScrollingEj, .-_ZN5tft_t20setVerticalScrollingEj
 3287               	.Lscope21:
 3288               		.stabs	"",36,0,0,.Lscope21-.LFBB21
 3289               		.stabd	78,0,0
 3290               		.stabs	"_ZN5tft_t24setVerticalScrollingAreaEjj:F(0,4)",36,0,340,_ZN5tft_t24setVerticalScrollingAre
 3291               		.stabs	"this:P(0,111)",64,0,340,12
 3292               		.stabs	"tfa:P(0,114)",64,0,340,14
 3293               		.stabs	"bfa:P(0,114)",64,0,340,16
 3294               	.global	_ZN5tft_t24setVerticalScrollingAreaEjj
 3295               		.type	_ZN5tft_t24setVerticalScrollingAreaEjj, @function
 3296               	_ZN5tft_t24setVerticalScrollingAreaEjj:
 3297               		.stabd	46,0,0
 341:tft.cpp       **** {
GAS LISTING /tmp/ccp1AA0E.s 			page 77


 3298               		.stabn	68,0,341,.LM359-.LFBB22
 3299               	.LM359:
 3300               	.LFBB22:
 3301 0a5c CF92      		push r12
 3302 0a5e DF92      		push r13
 3303 0a60 EF92      		push r14
 3304 0a62 FF92      		push r15
 3305 0a64 0F93      		push r16
 3306 0a66 1F93      		push r17
 3307 0a68 CF93      		push r28
 3308 0a6a DF93      		push r29
 3309               	/* prologue: function */
 3310               	/* frame size = 0 */
 3311               	/* stack size = 8 */
 3312               	.L__stack_usage = 8
 3313 0a6c 6C01      		movw r12,r24
 3314 0a6e 7B01      		movw r14,r22
 3315 0a70 8A01      		movw r16,r20
 3316               	.LBB653:
 342:tft.cpp       **** 	uint16_t vsa = SIZE_H - tfa - bfa;
 3317               		.stabn	68,0,342,.LM360-.LFBB22
 3318               	.LM360:
 3319 0a72 C0E4      		ldi r28,lo8(64)
 3320 0a74 D1E0      		ldi r29,lo8(1)
 3321 0a76 C61B      		sub r28,r22
 3322 0a78 D70B      		sbc r29,r23
 3323 0a7a C41B      		sub r28,r20
 3324 0a7c D50B      		sbc r29,r21
 343:tft.cpp       **** 	cmd(0x33);	// Vertical Scrolling Definition
 3325               		.stabn	68,0,343,.LM361-.LFBB22
 3326               	.LM361:
 3327 0a7e 83E3      		ldi r24,lo8(51)
 3328 0a80 0E94 0000 		call _ZN7ili93413cmdEh
 3329               	.LBB654:
 3330               		.stabn	68,0,377,.LM362-.LFBB22
 3331               	.LM362:
 3332 0a84 F601      		movw r30,r12
 3333 0a86 8281      		ldd r24,Z+2
 3334               	.LBB655:
 3335               		.stabs	"tft.h",132,0,0,.Ltext74
 3336               	.Ltext74:
  46:tft.h         **** 	inline bool flipped(void) const {return orient() == FlipPortrait || orient() == FlipLandscape;}
 3337               		.stabn	68,0,46,.LM363-.LFBB22
 3338               	.LM363:
 3339 0a88 8330      		cpi r24,lo8(3)
 3340 0a8a 01F0      		breq .L197
 3341 0a8c 8230      		cpi r24,lo8(2)
 3342 0a8e 01F4      		brne .L206
 3343 0a90 00C0      		rjmp .L197
 3344               	.L199:
 3345               	.LBE655:
 3346               	.LBE654:
 3347               		.stabs	"tft.cpp",132,0,0,.Ltext75
 3348               	.Ltext75:
 353:tft.cpp       **** 	d.tfa = tfa;
 3349               		.stabn	68,0,353,.LM364-.LFBB22
 3350               	.LM364:
GAS LISTING /tmp/ccp1AA0E.s 			page 78


 3351 0a92 F601      		movw r30,r12
 3352 0a94 F38A      		std Z+19,r15
 3353 0a96 E28A      		std Z+18,r14
 354:tft.cpp       **** 	d.bfa = bfa;
 3354               		.stabn	68,0,354,.LM365-.LFBB22
 3355               	.LM365:
 3356 0a98 158B      		std Z+21,r17
 3357 0a9a 048B      		std Z+20,r16
 3358 0a9c 00C0      		rjmp .L207
 3359               	.L206:
 349:tft.cpp       **** 		write16(tfa);	// Top Fixed Area
 3360               		.stabn	68,0,349,.LM366-.LFBB22
 3361               	.LM366:
 3362 0a9e C701      		movw r24,r14
 3363 0aa0 0E94 0000 		call _ZN5tft_t7write16Ej
 350:tft.cpp       **** 		write16(vsa);	// Vertical Scrolling Area
 3364               		.stabn	68,0,350,.LM367-.LFBB22
 3365               	.LM367:
 3366 0aa4 CE01      		movw r24,r28
 3367 0aa6 0E94 0000 		call _ZN5tft_t7write16Ej
 351:tft.cpp       **** 		write16(bfa);	// Bottom Fixed Area
 3368               		.stabn	68,0,351,.LM368-.LFBB22
 3369               	.LM368:
 3370 0aaa C801      		movw r24,r16
 3371 0aac 00C0      		rjmp .L208
 3372               	.L197:
 345:tft.cpp       **** 		write16(bfa);	// Top Fixed Area
 3373               		.stabn	68,0,345,.LM369-.LFBB22
 3374               	.LM369:
 3375 0aae C801      		movw r24,r16
 3376 0ab0 0E94 0000 		call _ZN5tft_t7write16Ej
 346:tft.cpp       **** 		write16(vsa);	// Vertical Scrolling Area
 3377               		.stabn	68,0,346,.LM370-.LFBB22
 3378               	.LM370:
 3379 0ab4 CE01      		movw r24,r28
 3380 0ab6 0E94 0000 		call _ZN5tft_t7write16Ej
 347:tft.cpp       **** 		write16(tfa);	// Bottom Fixed Area
 3381               		.stabn	68,0,347,.LM371-.LFBB22
 3382               	.LM371:
 3383 0aba C701      		movw r24,r14
 3384               	.L208:
 3385 0abc 0E94 0000 		call _ZN5tft_t7write16Ej
 3386 0ac0 00C0      		rjmp .L199
 3387               	.L207:
 3388               	/* epilogue start */
 3389               	.LBE653:
 355:tft.cpp       **** }
 3390               		.stabn	68,0,355,.LM372-.LFBB22
 3391               	.LM372:
 3392 0ac2 DF91      		pop r29
 3393 0ac4 CF91      		pop r28
 3394 0ac6 1F91      		pop r17
 3395 0ac8 0F91      		pop r16
 3396 0aca FF90      		pop r15
 3397 0acc EF90      		pop r14
 3398 0ace DF90      		pop r13
 3399 0ad0 CF90      		pop r12
GAS LISTING /tmp/ccp1AA0E.s 			page 79


 3400 0ad2 0895      		ret
 3401               		.size	_ZN5tft_t24setVerticalScrollingAreaEjj, .-_ZN5tft_t24setVerticalScrollingAreaEjj
 3402               		.stabs	"vsa:r(0,31)",64,0,342,28
 3403               		.stabn	192,0,0,.LBB653-.LFBB22
 3404               		.stabn	224,0,0,.LBE653-.LFBB22
 3405               	.Lscope22:
 3406               		.stabs	"",36,0,0,.Lscope22-.LFBB22
 3407               		.stabd	78,0,0
 3408               		.stabs	"_Z6tftputh:F(0,4)",36,0,365,_Z6tftputh
 3409               		.stabs	"c:P(0,29)",64,0,365,24
 3410               	.global	_Z6tftputh
 3411               		.type	_Z6tftputh, @function
 3412               	_Z6tftputh:
 3413               		.stabd	46,0,0
 366:tft.cpp       **** {
 3414               		.stabn	68,0,366,.LM373-.LFBB23
 3415               	.LM373:
 3416               	.LFBB23:
 3417               	/* prologue: function */
 3418               	/* frame size = 0 */
 3419               	/* stack size = 0 */
 3420               	.L__stack_usage = 0
 367:tft.cpp       **** 	(*tft) << c;
 3421               		.stabn	68,0,367,.LM374-.LFBB23
 3422               	.LM374:
 3423 0ad4 682F      		mov r22,r24
 3424 0ad6 8091 0000 		lds r24,_ZL3tft
 3425 0ada 9091 0000 		lds r25,_ZL3tft+1
 3426 0ade 0C94 0000 		jmp _ZN5tft_tlsEc
 3427               		.size	_Z6tftputh, .-_Z6tftputh
 3428               	.Lscope23:
 3429               		.stabs	"",36,0,0,.Lscope23-.LFBB23
 3430               		.stabd	78,0,0
 3431               		.stabs	"_Z6tftoutP5tft_t:F(0,113)",36,0,370,_Z6tftoutP5tft_t
 3432               		.stabs	"hw:P(0,84)",64,0,370,24
 3433               	.global	_Z6tftoutP5tft_t
 3434               		.type	_Z6tftoutP5tft_t, @function
 3435               	_Z6tftoutP5tft_t:
 3436               		.stabd	46,0,0
 371:tft.cpp       **** {
 3437               		.stabn	68,0,371,.LM375-.LFBB24
 3438               	.LM375:
 3439               	.LFBB24:
 3440               	/* prologue: function */
 3441               	/* frame size = 0 */
 3442               	/* stack size = 0 */
 3443               	.L__stack_usage = 0
 3444               	.LBB656:
 373:tft.cpp       **** 	tft = hw;
 3445               		.stabn	68,0,373,.LM376-.LFBB24
 3446               	.LM376:
 3447 0ae2 9093 0000 		sts _ZL3tft+1,r25
 3448 0ae6 8093 0000 		sts _ZL3tft,r24
 374:tft.cpp       **** 	if (out == NULL)
 3449               		.stabn	68,0,374,.LM377-.LFBB24
 3450               	.LM377:
 3451 0aea 8091 0000 		lds r24,_ZZ6tftoutP5tft_tE3out
GAS LISTING /tmp/ccp1AA0E.s 			page 80


 3452 0aee 9091 0000 		lds r25,_ZZ6tftoutP5tft_tE3out+1
 3453 0af2 892B      		or r24,r25
 3454 0af4 01F4      		brne .L211
 375:tft.cpp       **** 		out = fdevopen(tftputch, NULL);
 3455               		.stabn	68,0,375,.LM378-.LFBB24
 3456               	.LM378:
 3457 0af6 60E0      		ldi r22,0
 3458 0af8 70E0      		ldi r23,0
 3459 0afa 80E0      		ldi r24,lo8(gs(_Z8tftputchcP6__file))
 3460 0afc 90E0      		ldi r25,hi8(gs(_Z8tftputchcP6__file))
 3461 0afe 0E94 0000 		call fdevopen
 3462 0b02 9093 0000 		sts _ZZ6tftoutP5tft_tE3out+1,r25
 3463 0b06 8093 0000 		sts _ZZ6tftoutP5tft_tE3out,r24
 3464               	.L211:
 3465               	.LBE656:
 3466               		.stabn	68,0,377,.LM379-.LFBB24
 3467               	.LM379:
 3468 0b0a 8091 0000 		lds r24,_ZZ6tftoutP5tft_tE3out
 3469 0b0e 9091 0000 		lds r25,_ZZ6tftoutP5tft_tE3out+1
 3470 0b12 0895      		ret
 3471               		.size	_Z6tftoutP5tft_t, .-_Z6tftoutP5tft_t
 3472               		.stabs	"out:V(0,113)",38,0,372,_ZZ6tftoutP5tft_tE3out
 3473               		.stabn	192,0,0,.LBB656-.LFBB24
 3474               		.stabn	224,0,0,.LBE656-.LFBB24
 3475               	.Lscope24:
 3476               		.stabs	"",36,0,0,.Lscope24-.LFBB24
 3477               		.stabd	78,0,0
 3478               		.weak	_ZZN7ili934110_setOrientEhE6orient
 3479               		.section	.rodata._ZZN7ili934110_setOrientEhE6orient,"aG",@progbits,_ZZN7ili934110_setOrientEhE6ori
 3480               		.type	_ZZN7ili934110_setOrientEhE6orient, @object
 3481               		.size	_ZZN7ili934110_setOrientEhE6orient, 8
 3482               	_ZZN7ili934110_setOrientEhE6orient:
 3483 0000 28        		.byte	40
 3484 0001 48        		.byte	72
 3485 0002 E8        		.byte	-24
 3486 0003 88        		.byte	-120
 3487 0004 68        		.byte	104
 3488 0005 D8        		.byte	-40
 3489 0006 A8        		.byte	-88
 3490 0007 18        		.byte	24
 3491               		.local	_ZL3tft
 3492               		.comm	_ZL3tft,2,1
 3493               		.local	_ZZ6tftoutP5tft_tE3out
 3494               		.comm	_ZZ6tftoutP5tft_tE3out,2,1
 3495               		.stabs	"tft:S(0,84)",40,0,357,_ZL3tft
 3496               		.text
 3497               		.stabs	"",100,0,0,.Letext0
 3498               	.Letext0:
 3499               		.ident	"GCC: (GNU) 4.7.2"
 3500               	.global __do_copy_data
 3501               	.global __do_clear_bss
GAS LISTING /tmp/ccp1AA0E.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tft.cpp
     /tmp/ccp1AA0E.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccp1AA0E.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccp1AA0E.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccp1AA0E.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccp1AA0E.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccp1AA0E.s:92     .text._ZN7ili93413cmdEh:0000000000000000 _ZN7ili93413cmdEh
     /tmp/ccp1AA0E.s:128    .text._ZN7ili93414dataEh:0000000000000000 _ZN7ili93414dataEh
     /tmp/ccp1AA0E.s:156    .text._ZN7ili934110_setOrientEh:0000000000000000 _ZN7ili934110_setOrientEh
     /tmp/ccp1AA0E.s:3482   .rodata._ZZN7ili934110_setOrientEhE6orient:0000000000000000 _ZZN7ili934110_setOrientEhE6orient
     /tmp/ccp1AA0E.s:204    .text._ZNK5tft_t8portraitEv:0000000000000000 _ZNK5tft_t8portraitEv
     /tmp/ccp1AA0E.s:246    .text._ZN5tft_t5startEv:0000000000000000 _ZN5tft_t5startEv
     /tmp/ccp1AA0E.s:267    .text._ZN5tft_t7write16Ej:0000000000000000 _ZN5tft_t7write16Ej
     /tmp/ccp1AA0E.s:297    .text:0000000000000000 _ZN5tft_t4areaEjjjj.isra.27
     /tmp/ccp1AA0E.s:370    .text._ZN5tft_t7newlineEv:0000000000000000 _ZN5tft_t7newlineEv
     /tmp/ccp1AA0E.s:546    .text:0000000000000058 _ZN5tft_tC2Ev
     /tmp/ccp1AA0E.s:546    .text:0000000000000058 _ZN5tft_tC1Ev
     /tmp/ccp1AA0E.s:690    .text:00000000000000a0 _ZN5tft_t9setOrientEh
     /tmp/ccp1AA0E.s:791    .text:00000000000000e0 _ZNK5tft_t11vsTransformEj
     /tmp/ccp1AA0E.s:886    .text:0000000000000124 _ZNK5tft_t15vsTransformBackEj
     /tmp/ccp1AA0E.s:987    .text._ZN5tft_t4nextEv:0000000000000000 _ZN5tft_t4nextEv
     /tmp/ccp1AA0E.s:1130   .text:000000000000016a _ZN5tft_t9rectangleEjjjjj
     /tmp/ccp1AA0E.s:1625   .text:00000000000003ca _ZN5tft_t4lineEjjjjj
     /tmp/ccp1AA0E.s:2039   .text:00000000000005b4 _ZN5tft_t5frameEjjjjhj
     /tmp/ccp1AA0E.s:2171   .text:000000000000068a _ZN5tft_t5putchEc
     /tmp/ccp1AA0E.s:3026   .text._ZN5tft_tlsEc:0000000000000000 _ZN5tft_tlsEc
     /tmp/ccp1AA0E.s:3155   .text._Z8tftputchcP6__file:0000000000000000 _Z8tftputchcP6__file
                             .bss:0000000000000000 _ZL3tft
     /tmp/ccp1AA0E.s:3187   .text:0000000000000a10 _ZN5tft_t3bmpEb
     /tmp/ccp1AA0E.s:3219   .text:0000000000000a1c _ZN5tft_t20setVerticalScrollingEj
     /tmp/ccp1AA0E.s:3296   .text:0000000000000a5c _ZN5tft_t24setVerticalScrollingAreaEjj
     /tmp/ccp1AA0E.s:3412   .text:0000000000000ad4 _Z6tftputh
     /tmp/ccp1AA0E.s:3435   .text:0000000000000ae2 _Z6tftoutP5tft_t
     /tmp/ccp1AA0E.s:3492   .bss:0000000000000002 _ZZ6tftoutP5tft_tE3out

UNDEFINED SYMBOLS
__udivmodhi4
__udivmodqi4
ascii
fdevopen
__do_copy_data
__do_clear_bss
